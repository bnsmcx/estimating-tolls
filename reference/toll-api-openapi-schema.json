{
  "openapi": "3.0.3",
  "components": {
    "schemas": {
      "SourceDestRequest": {
        "properties": {
          "waypoints": {
            "items": {
              "properties": {
                "address": {
                  "type": "string",
                  "description": "The human-readable address of a geographic location"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "type": "array",
            "description": "A list of waypoints along the current route"
          },
          "vehicle": {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "2AxlesAuto",
                  "3AxlesAuto",
                  "4AxlesAuto",
                  "2AxlesDualTire",
                  "3AxlesDualTire",
                  "4AxlesDualTire",
                  "2AxlesTNC",
                  "2AxlesTNCPool",
                  "2AxlesTaxi",
                  "2AxlesTaxiPool",
                  "Carpool2",
                  "Carpool3",
                  "2AxlesTruck",
                  "3AxlesTruck",
                  "4AxlesTruck",
                  "5AxlesTruck",
                  "6AxlesTruck",
                  "7AxlesTruck",
                  "8AxlesTruck",
                  "9AxlesTruck",
                  "2AxlesBus",
                  "3AxlesBus",
                  "2AxlesMotorcycle",
                  "3AxlesMotorcycle",
                  "2AxlesRv",
                  "3AxlesRv",
                  "4AxlesRv",
                  "2AxlesEV",
                  "3AxlesEV",
                  "4AxlesEV"
                ],
                "description": "The type of the vehicle"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Options to configure vehicle parameters"
          },
          "from": {
            "properties": {
              "address": {
                "type": "string",
                "description": "The human-readable address of a geographic location"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "The starting point of the trip"
          },
          "to": {
            "properties": {
              "address": {
                "type": "string",
                "description": "The human-readable address of a geographic location"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "The end point of the trip"
          },
          "serviceProvider": {
            "type": "string",
            "enum": [
              "here",
              "gmaps"
            ],
            "description": "The map service provider to fetch routes from"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "SourceDestResponse": {
        "properties": {
          "status": {
            "type": "string",
            "description": "The response status"
          },
          "summary": {
            "properties": {
              "route": {
                "items": {
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "The human-readable address for the given location"
                    },
                    "location": {
                      "properties": {
                        "lat": {
                          "type": "number",
                          "description": "The latitude of the coordinate"
                        },
                        "lng": {
                          "type": "number",
                          "description": "The longitude of the coordinate"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "description": "The geographic coordinates for the given location"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                },
                "type": "array",
                "description": "The list of points along the current route"
              },
              "currency": {
                "type": "string",
                "description": "The currency unit used for calculations"
              },
              "vehicleDescription": {
                "type": "string",
                "description": "The provided vehicle description"
              },
              "fuelPrice": {
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The cost of fuel in a specified unit"
                  },
                  "currency": {
                    "type": "string",
                    "description": "The currency in which the fuel cost is represented"
                  },
                  "units": {
                    "type": "string",
                    "description": "Measurement unit for fuel cost"
                  },
                  "fuelUnit": {
                    "type": "string",
                    "description": "Measurement unit for fuel"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The fuel cost details used for calculations"
              },
              "departure_time": {
                "type": "string",
                "format": "date-time",
                "description": "The provided start time for the trip"
              },
              "source": {
                "type": "string",
                "description": "The map provider source used to get the list of possible routes"
              },
              "countries": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "The list of countries that the current route spans"
              },
              "vehicleType": {
                "type": "string",
                "description": "The vehicle type used for calculations"
              },
              "fuelEfficiency": {
                "properties": {
                  "city": {
                    "type": "number",
                    "description": "Fuel efficiency of the vehicle in cities"
                  },
                  "hwy": {
                    "type": "number",
                    "description": "Fuel efficiency of the vehicle on highways"
                  },
                  "units": {
                    "type": "string",
                    "description": "Measurement units for efficiency values"
                  },
                  "fuelUnit": {
                    "type": "string",
                    "description": "Measurement unit for fuel value"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The fuel efficiency details used for calculations"
              },
              "units": {
                "properties": {
                  "currencyUnit": {
                    "type": "string",
                    "description": "The currency unit specified in the request"
                  },
                  "fuelEfficiencyUnit": {
                    "type": "string",
                    "description": "The fuel efficiency units specified in the request"
                  },
                  "fuelUnit": {
                    "type": "string",
                    "description": "The fuel units specified in the request"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "A summary of the measurement units used for calculations"
              },
              "departureTime": {
                "type": "string",
                "format": "date-time",
                "description": "The provided start time for the trip"
              },
              "share": {
                "properties": {
                  "uuid": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array",
                    "maxItems": 16,
                    "minItems": 16
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "client": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "prefix": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "Shareable parameters for this response"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "A summary of the toll API response for the given trip"
          },
          "routes": {
            "items": {
              "properties": {
                "summary": {
                  "properties": {
                    "distance": {
                      "properties": {
                        "metric": {
                          "type": "string",
                          "description": "The measurement unit for the distance"
                        },
                        "value": {
                          "type": "integer",
                          "description": "The actual distance value"
                        },
                        "text": {
                          "type": "string",
                          "description": "The display value for the distance"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "description": "The total distance of the current route"
                    },
                    "duration": {
                      "properties": {
                        "text": {
                          "type": "string",
                          "description": "The display value for the duration"
                        },
                        "value": {
                          "type": "integer",
                          "description": "The actual duration value"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "description": "The estimated travel duration of the current route"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the current route"
                    },
                    "hasTolls": {
                      "type": "boolean",
                      "description": "Value indicating whether there are any tolls along the current route"
                    },
                    "hasExpressTolls": {
                      "type": "boolean",
                      "description": "Value indicating whether there are any express tolls along the current route"
                    },
                    "diffs": {
                      "properties": {
                        "fastest": {
                          "type": "number",
                          "description": "The cost difference between the current route and the route with the shortest travel duration"
                        },
                        "cheapest": {
                          "type": "number",
                          "description": "The cost difference between the current route and the route with the lowest cost"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "description": "The difference in overall cost between the given trip and the cheapest and fastest trips"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL for navigation for the current route through Google Maps"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "description": "The summary of the current route"
                },
                "costs": {
                  "properties": {
                    "tagAndCash": {
                      "type": "number",
                      "description": "The minimum cost between tag and cash"
                    },
                    "minimumTollCost": {
                      "type": "number",
                      "description": "The minimum total cost"
                    },
                    "fuel": {
                      "type": "number",
                      "description": "The calculated cost for fuel"
                    },
                    "tag": {
                      "type": "number",
                      "description": "The calculated toll cost for tags"
                    },
                    "cash": {
                      "type": "number",
                      "description": "The calculated cost for cash"
                    },
                    "licensePlate": {
                      "type": "number",
                      "description": "The calculated license cost for plate"
                    },
                    "prepaidCard": {
                      "type": "number",
                      "description": "The calculated cost for prepaid cards"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "description": "The summary of the total expenses incurred for the current route"
                },
                "tolls": {
                  "items": {
                    "properties": {
                      "height": {
                        "type": "number",
                        "description": "The height restrictions for the toll"
                      },
                      "id": {
                        "type": "integer",
                        "description": "The ID of the toll plaza"
                      },
                      "country": {
                        "type": "string",
                        "description": "The country where the toll plaza is located"
                      },
                      "tagCost": {
                        "type": "number",
                        "description": "The cost when using toll tags for payment"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the toll plaza"
                      },
                      "tagSecCost": {
                        "type": "number",
                        "description": "The cost when using the secondary toll tag for payment"
                      },
                      "point": {
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "geometry": {
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "coordinates": {
                                "items": {
                                  "type": "number"
                                },
                                "type": "array"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "description": "The coordinates for the geographical location of the toll"
                      },
                      "state": {
                        "type": "string",
                        "description": "The state where the toll plaza is located"
                      },
                      "licensePlateCost": {
                        "type": "number",
                        "description": "The license plate cover cost"
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency unit"
                      },
                      "prepaidCardNames": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "A list of prepaid card providers for this toll"
                      },
                      "licensePlateNames": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "A list of license plate providers for this toll"
                      },
                      "timestamp_localized": {
                        "type": "string",
                        "description": "The localized timestamp for the estimated arrival at the toll plaza"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the toll"
                      },
                      "tagPriCost": {
                        "type": "number",
                        "description": "The cost when using the primary toll tag for payment"
                      },
                      "cashCost": {
                        "type": "number",
                        "description": "The cost when using cash for payment"
                      },
                      "prepaidCardCost": {
                        "type": "number",
                        "description": "The cost when using prepaid card for payment"
                      },
                      "tagRequested": {
                        "type": "string",
                        "description": "Whether tag is requested at this toll"
                      },
                      "lat": {
                        "type": "number",
                        "description": "The latitude of the toll plaza"
                      },
                      "road": {
                        "type": "string",
                        "description": "The road where the toll plaza is located"
                      },
                      "lng": {
                        "type": "number",
                        "description": "The longitude of the toll plaza"
                      },
                      "arrival": {
                        "properties": {
                          "distance": {
                            "type": "number",
                            "description": "The distance from the start of the route"
                          },
                          "time": {
                            "type": "string",
                            "description": "The estimated travel duration from the start of the route"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "description": "The distance of the toll plaza along the given route from the start of the route"
                      },
                      "discountCarType": {
                        "type": "string",
                        "description": "The vehicle types for which the given discount is applicable"
                      },
                      "timestamp_formatted": {
                        "type": "string",
                        "description": "The timestamp for the estimated arrival at the toll plaza"
                      },
                      "tagPrimaryNames": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "A list of primary tag transponders for this toll"
                      },
                      "tagPrimary": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "The primary toll tag"
                      },
                      "discountCarDetails": {
                        "type": "string",
                        "description": "Details for any available discounts"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array"
                },
                "polyline": {
                  "type": "string",
                  "description": "A base64 encoded linestring representing the current route"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "type": "array",
            "description": "A list of possible routes for the given trip"
          },
          "meta": {
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of request made"
              },
              "client": {
                "type": "string",
                "description": "The client to which the request was made"
              },
              "source": {
                "type": "string",
                "description": "The source of the request"
              },
              "userId": {
                "type": "string",
                "description": "The user's TollGuru ID"
              },
              "customerId": {
                "type": "string",
                "description": "The user's stripe customer ID"
              },
              "tx": {
                "type": "integer",
                "description": "The number of transactions incurred during this request"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "The metadata associated with the request"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "SourceDestRequest-for-trucks": {
        "properties": {
          "vehicle": {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "2AxlesAuto",
                  "3AxlesAuto",
                  "4AxlesAuto",
                  "2AxlesDualTire",
                  "3AxlesDualTire",
                  "4AxlesDualTire",
                  "2AxlesTNC",
                  "2AxlesTNCPool",
                  "2AxlesTaxi",
                  "2AxlesTaxiPool",
                  "Carpool2",
                  "Carpool3",
                  "2AxlesTruck",
                  "3AxlesTruck",
                  "4AxlesTruck",
                  "5AxlesTruck",
                  "6AxlesTruck",
                  "7AxlesTruck",
                  "8AxlesTruck",
                  "9AxlesTruck",
                  "2AxlesBus",
                  "3AxlesBus",
                  "2AxlesMotorcycle",
                  "3AxlesMotorcycle",
                  "2AxlesRv",
                  "3AxlesRv",
                  "4AxlesRv",
                  "2AxlesEV",
                  "3AxlesEV",
                  "4AxlesEV"
                ],
                "description": "The type of the vehicle"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Options to configure vehicle parameters"
          },
          "fuelOptions": {
            "properties": {
              "fuelCost": {
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The cost of fuel in a specified unit"
                  },
                  "currency": {
                    "type": "string",
                    "description": "The currency in which the fuel cost is represented"
                  },
                  "units": {
                    "type": "string",
                    "description": "Measurement unit for fuel cost"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "Options to specify the cost of fuel"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "The fuel options for the specified vehicle"
          },
          "driver": {
            "properties": {
              "valueOfTime": {
                "type": "number"
              },
              "wage": {
                "type": "number"
              },
              "rounding": {
                "type": "integer"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Options to include driver expenses in toll calculations"
          },
          "state_mileage": {
            "type": "boolean",
            "description": "A flag indicating whether or not to include state mileage calculations in the response"
          },
          "hos": {
            "properties": {
              "dutyHoursBeforeRestBreak": {
                "type": "number",
                "description": "The remaining total duty hours before the next rest break"
              },
              "drivingHoursBeforeEndOfWorkDay": {
                "type": "number",
                "description": "The remaining driving hours before the work day ends"
              },
              "timeRemaining": {
                "type": "integer",
                "description": "The remaining driving time after a shift"
              },
              "rule": {
                "type": "integer",
                "description": "The FMCSA HOS rule to follow"
              },
              "dutyHoursBeforeEndOfWorkDay": {
                "type": "number",
                "description": "The remaining total duty hours before the work day ends"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Parameters for Hours of Service calculations for trucks"
          },
          "from": {
            "properties": {
              "address": {
                "type": "string",
                "description": "The human-readable address of a geographic location"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "The starting point of the trip"
          },
          "to": {
            "properties": {
              "address": {
                "type": "string",
                "description": "The human-readable address of a geographic location"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "The end point of the trip"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "SourceDestResponse-for-trucks": {
        "properties": {
          "summary": {
            "properties": {
              "route": {
                "items": {
                  "properties": {
                    "location": {
                      "properties": {
                        "lat": {
                          "type": "number",
                          "description": "The latitude of the coordinate"
                        },
                        "lng": {
                          "type": "number",
                          "description": "The longitude of the coordinate"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "description": "The geographic coordinates for the given location"
                    },
                    "address": {
                      "type": "string",
                      "description": "The human-readable address for the given location"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object"
                },
                "type": "array",
                "description": "The list of points along the current route"
              },
              "countries": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "The list of countries that the current route spans"
              },
              "vehicleType": {
                "type": "string",
                "description": "The vehicle type used for calculations"
              },
              "vehicleDescription": {
                "type": "string",
                "description": "The provided vehicle description"
              },
              "fuelEfficiency": {
                "properties": {
                  "hwy": {
                    "type": "number",
                    "description": "Fuel efficiency of the vehicle on highways"
                  },
                  "units": {
                    "type": "string",
                    "description": "Measurement units for efficiency values"
                  },
                  "fuelUnit": {
                    "type": "string",
                    "description": "Measurement unit for fuel value"
                  },
                  "city": {
                    "type": "number",
                    "description": "Fuel efficiency of the vehicle in cities"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The fuel efficiency details used for calculations"
              },
              "share": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "prefix": {
                    "type": "string"
                  },
                  "uuid": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array",
                    "maxItems": 16,
                    "minItems": 16
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "client": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "Shareable parameters for this response"
              },
              "source": {
                "type": "string",
                "description": "The map provider source used to get the list of possible routes"
              },
              "currency": {
                "type": "string",
                "description": "The currency unit used for calculations"
              },
              "fuelPrice": {
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The cost of fuel in a specified unit"
                  },
                  "currency": {
                    "type": "string",
                    "description": "The currency in which the fuel cost is represented"
                  },
                  "units": {
                    "type": "string",
                    "description": "Measurement unit for fuel cost"
                  },
                  "fuelUnit": {
                    "type": "string",
                    "description": "Measurement unit for fuel"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The fuel cost details used for calculations"
              },
              "units": {
                "properties": {
                  "currencyUnit": {
                    "type": "string",
                    "description": "The currency unit specified in the request"
                  },
                  "fuelEfficiencyUnit": {
                    "type": "string",
                    "description": "The fuel efficiency units specified in the request"
                  },
                  "fuelUnit": {
                    "type": "string",
                    "description": "The fuel units specified in the request"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "A summary of the measurement units used for calculations"
              },
              "departure_time": {
                "type": "string",
                "format": "date-time",
                "description": "The provided start time for the trip"
              },
              "departureTime": {
                "type": "string",
                "format": "date-time",
                "description": "The provided start time for the trip"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "A summary of the toll API response for the given trip"
          },
          "routes": {
            "items": {
              "properties": {
                "summary": {
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the current route"
                    },
                    "hasTolls": {
                      "type": "boolean",
                      "description": "Value indicating whether there are any tolls along the current route"
                    },
                    "hasExpressTolls": {
                      "type": "boolean",
                      "description": "Value indicating whether there are any express tolls along the current route"
                    },
                    "diffs": {
                      "properties": {
                        "cheapest": {
                          "type": "number",
                          "description": "The cost difference between the current route and the route with the lowest cost"
                        },
                        "fastest": {
                          "type": "number",
                          "description": "The cost difference between the current route and the route with the shortest travel duration"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "description": "The difference in overall cost between the given trip and the cheapest and fastest trips"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL for navigation for the current route through Google Maps"
                    },
                    "distance": {
                      "properties": {
                        "text": {
                          "type": "string",
                          "description": "The display value for the distance"
                        },
                        "metric": {
                          "type": "string",
                          "description": "The measurement unit for the distance"
                        },
                        "value": {
                          "type": "integer",
                          "description": "The actual distance value"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "description": "The total distance of the current route"
                    },
                    "duration": {
                      "properties": {
                        "text": {
                          "type": "string",
                          "description": "The display value for the duration"
                        },
                        "value": {
                          "type": "integer",
                          "description": "The actual duration value"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "description": "The estimated travel duration of the current route"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "description": "The summary of the current route"
                },
                "costs": {
                  "properties": {
                    "fuel": {
                      "type": "number",
                      "description": "The calculated cost for fuel"
                    },
                    "tag": {
                      "type": "number",
                      "description": "The calculated toll cost for tags"
                    },
                    "cash": {
                      "type": "number",
                      "description": "The calculated cost for cash"
                    },
                    "licensePlate": {
                      "type": "number",
                      "description": "The calculated license cost for plate"
                    },
                    "prepaidCard": {
                      "type": "number",
                      "description": "The calculated cost for prepaid cards"
                    },
                    "tagAndCash": {
                      "type": "number",
                      "description": "The minimum cost between tag and cash"
                    },
                    "minimumTollCost": {
                      "type": "number",
                      "description": "The minimum total cost"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "description": "The summary of the total expenses incurred for the current route"
                },
                "tolls": {
                  "items": {
                    "properties": {
                      "point": {
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "geometry": {
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "coordinates": {
                                "items": {
                                  "type": "number"
                                },
                                "type": "array"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "description": "The coordinates for the geographical location of the toll"
                      },
                      "country": {
                        "type": "string",
                        "description": "The country where the toll plaza is located"
                      },
                      "road": {
                        "type": "string",
                        "description": "The road where the toll plaza is located"
                      },
                      "prepaidCardCost": {
                        "type": "number",
                        "description": "The cost when using prepaid card for payment"
                      },
                      "prepaidCardNames": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "A list of prepaid card providers for this toll"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the toll plaza"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the toll"
                      },
                      "timestamp_localized": {
                        "type": "string",
                        "description": "The localized timestamp for the estimated arrival at the toll plaza"
                      },
                      "id": {
                        "type": "integer",
                        "description": "The ID of the toll plaza"
                      },
                      "currency": {
                        "type": "string",
                        "description": "The currency unit"
                      },
                      "discountCarType": {
                        "type": "string",
                        "description": "The vehicle types for which the given discount is applicable"
                      },
                      "licensePlateCost": {
                        "type": "number",
                        "description": "The license plate cover cost"
                      },
                      "tagPrimary": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "The primary toll tag"
                      },
                      "licensePlateNames": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "A list of license plate providers for this toll"
                      },
                      "discountCarDetails": {
                        "type": "string",
                        "description": "Details for any available discounts"
                      },
                      "state": {
                        "type": "string",
                        "description": "The state where the toll plaza is located"
                      },
                      "cashCost": {
                        "type": "number",
                        "description": "The cost when using cash for payment"
                      },
                      "arrival": {
                        "properties": {
                          "distance": {
                            "type": "number",
                            "description": "The distance from the start of the route"
                          },
                          "time": {
                            "type": "string",
                            "description": "The estimated travel duration from the start of the route"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "description": "The distance of the toll plaza along the given route from the start of the route"
                      },
                      "lng": {
                        "type": "number",
                        "description": "The longitude of the toll plaza"
                      },
                      "tagSecCost": {
                        "type": "number",
                        "description": "The cost when using the secondary toll tag for payment"
                      },
                      "timestamp_formatted": {
                        "type": "string",
                        "description": "The timestamp for the estimated arrival at the toll plaza"
                      },
                      "height": {
                        "type": "number",
                        "description": "The height restrictions for the toll"
                      },
                      "tagPriCost": {
                        "type": "number",
                        "description": "The cost when using the primary toll tag for payment"
                      },
                      "tagCost": {
                        "type": "number",
                        "description": "The cost when using toll tags for payment"
                      },
                      "tagPrimaryNames": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "A list of primary tag transponders for this toll"
                      },
                      "tagRequested": {
                        "type": "string",
                        "description": "Whether tag is requested at this toll"
                      },
                      "lat": {
                        "type": "number",
                        "description": "The latitude of the toll plaza"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array"
                },
                "polyline": {
                  "type": "string",
                  "description": "A base64 encoded linestring representing the current route"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "type": "array",
            "description": "A list of possible routes for the given trip"
          },
          "meta": {
            "properties": {
              "client": {
                "type": "string",
                "description": "The client to which the request was made"
              },
              "source": {
                "type": "string",
                "description": "The source of the request"
              },
              "userId": {
                "type": "string",
                "description": "The user's TollGuru ID"
              },
              "customerId": {
                "type": "string",
                "description": "The user's stripe customer ID"
              },
              "tx": {
                "type": "integer",
                "description": "The number of transactions incurred during this request"
              },
              "type": {
                "type": "string",
                "description": "The type of request made"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "The metadata associated with the request"
          },
          "status": {
            "type": "string",
            "description": "The response status"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "PolylineRequest": {
        "properties": {
          "vehicle": {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "2AxlesAuto",
                  "3AxlesAuto",
                  "4AxlesAuto",
                  "2AxlesDualTire",
                  "3AxlesDualTire",
                  "4AxlesDualTire",
                  "2AxlesTNC",
                  "2AxlesTNCPool",
                  "2AxlesTaxi",
                  "2AxlesTaxiPool",
                  "Carpool2",
                  "Carpool3",
                  "2AxlesTruck",
                  "3AxlesTruck",
                  "4AxlesTruck",
                  "5AxlesTruck",
                  "6AxlesTruck",
                  "7AxlesTruck",
                  "8AxlesTruck",
                  "9AxlesTruck",
                  "2AxlesBus",
                  "3AxlesBus",
                  "2AxlesMotorcycle",
                  "3AxlesMotorcycle",
                  "2AxlesRv",
                  "3AxlesRv",
                  "4AxlesRv",
                  "2AxlesEV",
                  "3AxlesEV",
                  "4AxlesEV"
                ],
                "description": "The type of the vehicle"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Options to configure vehicle parameters"
          },
          "polyline": {
            "type": "string",
            "description": "The base64 encoded linestring"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "PolylineResponse": {
        "properties": {
          "status": {
            "type": "string",
            "description": "The response status"
          },
          "summary": {
            "properties": {
              "currency": {
                "type": "string",
                "description": "The currency unit used for calculations"
              },
              "vehicleType": {
                "type": "string",
                "description": "The vehicle type used for calculations"
              },
              "vehicleDescription": {
                "type": "string",
                "description": "The provided vehicle description"
              },
              "units": {
                "properties": {
                  "currencyUnit": {
                    "type": "string",
                    "description": "The currency unit specified in the request"
                  },
                  "fuelEfficiencyUnit": {
                    "type": "string",
                    "description": "The fuel efficiency units specified in the request"
                  },
                  "fuelUnit": {
                    "type": "string",
                    "description": "The fuel units specified in the request"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "A summary of the measurement units used for calculations"
              },
              "departure_time": {
                "type": "string",
                "format": "date-time",
                "description": "The provided start time for the trip"
              },
              "departureTime": {
                "type": "string",
                "format": "date-time",
                "description": "The provided start time for the trip"
              },
              "share": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "prefix": {
                    "type": "string"
                  },
                  "uuid": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array",
                    "maxItems": 16,
                    "minItems": 16
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "client": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "Shareable parameters for this response"
              },
              "countries": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "The list of countries that the current route spans"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "A summary of the toll API response for the given trip"
          },
          "route": {
            "properties": {
              "polyline": {
                "type": "string"
              },
              "hasTolls": {
                "type": "boolean",
                "description": "Value indicating whether there are any tolls along the current route"
              },
              "distance": {
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "The actual distance value"
                  },
                  "text": {
                    "type": "string",
                    "description": "The display value for the distance"
                  },
                  "metric": {
                    "type": "string",
                    "description": "The measurement unit for the distance"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The total distance of the current route"
              },
              "costs": {
                "properties": {
                  "licensePlate": {
                    "type": "number",
                    "description": "The calculated license cost for plate"
                  },
                  "prepaidCard": {
                    "type": "number",
                    "description": "The calculated cost for prepaid cards"
                  },
                  "tagAndCash": {
                    "type": "number",
                    "description": "The minimum cost between tag and cash"
                  },
                  "minimumTollCost": {
                    "type": "number",
                    "description": "The minimum total cost"
                  },
                  "fuel": {
                    "type": "number",
                    "description": "The calculated cost for fuel"
                  },
                  "tag": {
                    "type": "number",
                    "description": "The calculated toll cost for tags"
                  },
                  "cash": {
                    "type": "number",
                    "description": "The calculated cost for cash"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The summary of the total expenses incurred for the current route"
              },
              "tolls": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Route information for the given trip"
          },
          "meta": {
            "properties": {
              "userId": {
                "type": "string",
                "description": "The user's TollGuru ID"
              },
              "customerId": {
                "type": "string",
                "description": "The user's stripe customer ID"
              },
              "tx": {
                "type": "integer",
                "description": "The number of transactions incurred during this request"
              },
              "type": {
                "type": "string",
                "description": "The type of request made"
              },
              "client": {
                "type": "string",
                "description": "The client to which the request was made"
              },
              "source": {
                "type": "string",
                "description": "The source of the request"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "The metadata associated with the request"
          },
          "warnings": {
            "items": {
              "properties": {
                "type": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "type": "array"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "PolylineTimestampRequest-with-timestamps": {
        "properties": {
          "mapProvider": {
            "type": "string",
            "description": "The map service provider for map matching given GPS tracks"
          },
          "polyline": {
            "type": "string",
            "description": "The base64 encoded linestring"
          },
          "locTimes": {
            "items": {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            "type": "array",
            "description": "A list of timestamps associated with the polyline"
          },
          "vehicle": {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "2AxlesAuto",
                  "3AxlesAuto",
                  "4AxlesAuto",
                  "2AxlesDualTire",
                  "3AxlesDualTire",
                  "4AxlesDualTire",
                  "2AxlesTNC",
                  "2AxlesTNCPool",
                  "2AxlesTaxi",
                  "2AxlesTaxiPool",
                  "Carpool2",
                  "Carpool3",
                  "2AxlesTruck",
                  "3AxlesTruck",
                  "4AxlesTruck",
                  "5AxlesTruck",
                  "6AxlesTruck",
                  "7AxlesTruck",
                  "8AxlesTruck",
                  "9AxlesTruck",
                  "2AxlesBus",
                  "3AxlesBus",
                  "2AxlesMotorcycle",
                  "3AxlesMotorcycle",
                  "2AxlesRv",
                  "3AxlesRv",
                  "4AxlesRv",
                  "2AxlesEV",
                  "3AxlesEV",
                  "4AxlesEV"
                ],
                "description": "The type of the vehicle"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Options to configure vehicle parameters"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "PolylineTimestampResponse-with-timestamps": {
        "properties": {
          "summary": {
            "properties": {
              "departureTime": {
                "type": "string",
                "format": "date-time",
                "description": "The provided start time for the trip"
              },
              "countries": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "The list of countries that the current route spans"
              },
              "currency": {
                "type": "string",
                "description": "The currency unit used for calculations"
              },
              "vehicleDescription": {
                "type": "string",
                "description": "The provided vehicle description"
              },
              "fuelPrice": {
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "The cost of fuel in a specified unit"
                  },
                  "currency": {
                    "type": "string",
                    "description": "The currency in which the fuel cost is represented"
                  },
                  "units": {
                    "type": "string",
                    "description": "Measurement unit for fuel cost"
                  },
                  "fuelUnit": {
                    "type": "string",
                    "description": "Measurement unit for fuel"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The fuel cost details used for calculations"
              },
              "fuelEfficiency": {
                "properties": {
                  "city": {
                    "type": "number",
                    "description": "Fuel efficiency of the vehicle in cities"
                  },
                  "hwy": {
                    "type": "number",
                    "description": "Fuel efficiency of the vehicle on highways"
                  },
                  "units": {
                    "type": "string",
                    "description": "Measurement units for efficiency values"
                  },
                  "fuelUnit": {
                    "type": "string",
                    "description": "Measurement unit for fuel value"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The fuel efficiency details used for calculations"
              },
              "vehicleType": {
                "type": "string",
                "description": "The vehicle type used for calculations"
              },
              "units": {
                "properties": {
                  "currencyUnit": {
                    "type": "string",
                    "description": "The currency unit specified in the request"
                  },
                  "fuelEfficiencyUnit": {
                    "type": "string",
                    "description": "The fuel efficiency units specified in the request"
                  },
                  "fuelUnit": {
                    "type": "string",
                    "description": "The fuel units specified in the request"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "A summary of the measurement units used for calculations"
              },
              "share": {
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "client": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "prefix": {
                    "type": "string"
                  },
                  "uuid": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array",
                    "maxItems": 16,
                    "minItems": 16
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "Shareable parameters for this response"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "A summary of the toll API response for the given trip"
          },
          "route": {
            "properties": {
              "costs": {
                "properties": {
                  "tag": {
                    "type": "number",
                    "description": "The calculated toll cost for tags"
                  },
                  "cash": {
                    "type": "number",
                    "description": "The calculated cost for cash"
                  },
                  "licensePlate": {
                    "type": "number",
                    "description": "The calculated license cost for plate"
                  },
                  "prepaidCard": {
                    "type": "number",
                    "description": "The calculated cost for prepaid cards"
                  },
                  "tagAndCash": {
                    "type": "number",
                    "description": "The minimum cost between tag and cash"
                  },
                  "minimumTollCost": {
                    "type": "number",
                    "description": "The minimum total cost"
                  },
                  "fuel": {
                    "type": "number",
                    "description": "The calculated cost for fuel"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The summary of the total expenses incurred for the current route"
              },
              "tolls": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "polyline": {
                "type": "string"
              },
              "hasTolls": {
                "type": "boolean",
                "description": "Value indicating whether there are any tolls along the current route"
              },
              "distance": {
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "The actual distance value"
                  },
                  "text": {
                    "type": "string",
                    "description": "The display value for the distance"
                  },
                  "metric": {
                    "type": "string",
                    "description": "The measurement unit for the distance"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The total distance of the current route"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Route information for the given trip"
          },
          "meta": {
            "properties": {
              "client": {
                "type": "string",
                "description": "The client to which the request was made"
              },
              "source": {
                "type": "string",
                "description": "The source of the request"
              },
              "userId": {
                "type": "string",
                "description": "The user's TollGuru ID"
              },
              "customerId": {
                "type": "string",
                "description": "The user's stripe customer ID"
              },
              "tx": {
                "type": "integer",
                "description": "The number of transactions incurred during this request"
              },
              "type": {
                "type": "string",
                "description": "The type of request made"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "The metadata associated with the request"
          },
          "status": {
            "type": "string",
            "description": "The response status"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "GPSAsyncResponse-download": {
        "properties": {
          "requestId": {
            "oneOf": [
              {
                "type": "string"
              }
            ],
            "items": {
              "type": "integer"
            },
            "maxItems": 16,
            "minItems": 16,
            "description": "The ID for the request associated with the given input.\nThis ID can be used in a request against the `/gps-tracks-csv-download` endpoint\nto download the results."
          },
          "requestedTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp for when the request was made"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "PolylineResponse-download": {
        "properties": {
          "status": {
            "type": "string",
            "description": "The response status"
          },
          "summary": {
            "properties": {
              "countries": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "description": "The list of countries that the current route spans"
              },
              "currency": {
                "type": "string",
                "description": "The currency unit used for calculations"
              },
              "share": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "prefix": {
                    "type": "string"
                  },
                  "uuid": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array",
                    "maxItems": 16,
                    "minItems": 16
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "client": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "Shareable parameters for this response"
              },
              "vehicleType": {
                "type": "string",
                "description": "The vehicle type used for calculations"
              },
              "vehicleDescription": {
                "type": "string",
                "description": "The provided vehicle description"
              },
              "units": {
                "properties": {
                  "currencyUnit": {
                    "type": "string",
                    "description": "The currency unit specified in the request"
                  },
                  "fuelEfficiencyUnit": {
                    "type": "string",
                    "description": "The fuel efficiency units specified in the request"
                  },
                  "fuelUnit": {
                    "type": "string",
                    "description": "The fuel units specified in the request"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "A summary of the measurement units used for calculations"
              },
              "departure_time": {
                "type": "string",
                "format": "date-time",
                "description": "The provided start time for the trip"
              },
              "departureTime": {
                "type": "string",
                "format": "date-time",
                "description": "The provided start time for the trip"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "A summary of the toll API response for the given trip"
          },
          "route": {
            "properties": {
              "distance": {
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "The display value for the distance"
                  },
                  "metric": {
                    "type": "string",
                    "description": "The measurement unit for the distance"
                  },
                  "value": {
                    "type": "integer",
                    "description": "The actual distance value"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The total distance of the current route"
              },
              "costs": {
                "properties": {
                  "tag": {
                    "type": "number",
                    "description": "The calculated toll cost for tags"
                  },
                  "cash": {
                    "type": "number",
                    "description": "The calculated cost for cash"
                  },
                  "licensePlate": {
                    "type": "number",
                    "description": "The calculated license cost for plate"
                  },
                  "prepaidCard": {
                    "type": "number",
                    "description": "The calculated cost for prepaid cards"
                  },
                  "tagAndCash": {
                    "type": "number",
                    "description": "The minimum cost between tag and cash"
                  },
                  "minimumTollCost": {
                    "type": "number",
                    "description": "The minimum total cost"
                  },
                  "fuel": {
                    "type": "number",
                    "description": "The calculated cost for fuel"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "description": "The summary of the total expenses incurred for the current route"
              },
              "tolls": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "polyline": {
                "type": "string"
              },
              "hasTolls": {
                "type": "boolean",
                "description": "Value indicating whether there are any tolls along the current route"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "Route information for the given trip"
          },
          "meta": {
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of request made"
              },
              "client": {
                "type": "string",
                "description": "The client to which the request was made"
              },
              "source": {
                "type": "string",
                "description": "The source of the request"
              },
              "userId": {
                "type": "string",
                "description": "The user's TollGuru ID"
              },
              "customerId": {
                "type": "string",
                "description": "The user's stripe customer ID"
              },
              "tx": {
                "type": "integer",
                "description": "The number of transactions incurred during this request"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "The metadata associated with the request"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "isAsync": {
        "type": "boolean",
        "description": "Whether the provided GPS tracks are processed asynchronously"
      },
      "mapProvider": {
        "type": "string",
        "description": "The map service provider for map matching given GPS tracks"
      },
      "vehicle": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "2AxlesAuto",
              "3AxlesAuto",
              "4AxlesAuto",
              "2AxlesDualTire",
              "3AxlesDualTire",
              "4AxlesDualTire",
              "2AxlesTNC",
              "2AxlesTNCPool",
              "2AxlesTaxi",
              "2AxlesTaxiPool",
              "Carpool2",
              "Carpool3",
              "2AxlesTruck",
              "3AxlesTruck",
              "4AxlesTruck",
              "5AxlesTruck",
              "6AxlesTruck",
              "7AxlesTruck",
              "8AxlesTruck",
              "9AxlesTruck",
              "2AxlesBus",
              "3AxlesBus",
              "2AxlesMotorcycle",
              "3AxlesMotorcycle",
              "2AxlesRv",
              "3AxlesRv",
              "4AxlesRv",
              "2AxlesEV",
              "3AxlesEV",
              "4AxlesEV"
            ],
            "description": "The type of the vehicle"
          },
          "weight": {
            "properties": {
              "value": {
                "type": "number"
              },
              "unit": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "The weight of the vehicle"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "description": "Options to configure vehicle parameters"
      },
      "FileUpload": {
        "type": "string",
        "format": "binary",
        "example": "file-replace-me"
      }
    },
    "securitySchemes": {
      "x-api-key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    },
    "examples": {
      "Example": {
        "value": {
          "from": {
            "address": "Walt Whitman Brg Philadelphia, PA 19148, USA"
          },
          "to": {
            "address": "Ocean City, NJ 08226 USA"
          },
          "serviceProvider": "here",
          "waypoints": [
            {
              "address": "4 Clarks Landing Rd, Port Republic, NJ 08241, USA"
            }
          ],
          "vehicle": {
            "type": "2AxlesAuto"
          }
        }
      },
      "Example-e0820aa8-0cbd-45ec-bff4-36dafd554ff3": {
        "value": {
          "status": "OK",
          "summary": {
            "route": [
              {
                "location": {
                  "lat": 39.90724,
                  "lng": -75.14148
                },
                "address": "Walt Whitman Brg, Philadelphia, PA 19148, United States"
              },
              {
                "location": {
                  "lat": 39.52122,
                  "lng": -74.48604
                },
                "address": "4 Clarks Landing Rd, Port Republic, NJ 08241-9741, United States"
              },
              {
                "location": {
                  "lat": 39.27952,
                  "lng": -74.57579
                },
                "address": "834 Asbury Ave, Ocean City, NJ 08226-3657, United States"
              }
            ],
            "countries": [
              "USA"
            ],
            "currency": "USD",
            "vehicleType": "2AxlesAuto",
            "vehicleDescription": "Car, SUV or Pickup truck without 4 tires on rear axle",
            "fuelPrice": {
              "value": 3.65,
              "currency": "USD",
              "units": "USD/gallon",
              "fuelUnit": "gallon"
            },
            "fuelEfficiency": {
              "city": 23.4,
              "hwy": 30,
              "units": "MPG",
              "fuelUnit": "gallon"
            },
            "units": {
              "currencyUnit": "USD",
              "fuelEfficiencyUnit": "MPG",
              "fuelUnit": "gallon"
            },
            "departure_time": "2024-01-09T11:26:09.385837118Z",
            "departureTime": "2024-01-09T11:26:09.385837118Z",
            "share": {
              "name": "4 clarks landing rd, port republic, nj 08241-9741, united states-834 asbury ave, ocean city, nj 08226-3657, united states",
              "prefix": "4+clarks+landing+rd%2C+port+republic%2C+nj+08241-9741%2C+united+states-834+asbury+ave%2C+ocean+city%2C+nj+08226-3657%2C+united+states",
              "uuid": "5b006e59-6b46-4ef8-aa52-bdbfc96619eb",
              "timestamp": "2024-01-09T11:26:09.385846398Z",
              "client": "api"
            },
            "source": "HERE"
          },
          "routes": [
            {
              "summary": {
                "hasTolls": true,
                "hasExpressTolls": false,
                "diffs": {
                  "cheapest": 0,
                  "fastest": 0
                },
                "url": "https://www.google.com/maps/?saddr=39.907240,-75.141480&daddr=39.868230,-75.102130+to:39.771060,-75.048940+to:39.521090,-74.486166+to:39.521090,-74.486166+to:39.508370,-74.513150+to:39.504790,-74.521460+to:39.279402,-74.575553+to:39.279520,-74.575790&via=1,2,3,5,6,7",
                "distance": {
                  "text": "73 mi",
                  "metric": "118 km",
                  "value": 118646
                },
                "duration": {
                  "text": "1 h 20 min",
                  "value": 4856
                },
                "name": "Garden State Pkwy"
              },
              "costs": {
                "tagAndCash": 6.72,
                "minimumTollCost": 6.72,
                "fuel": 9.12,
                "tag": 6.72,
                "cash": 6.8,
                "prepaidCard": 6.72,
                "licensePlate": null
              },
              "tolls": [
                {
                  "id": 112001300,
                  "lat": 39.513676,
                  "lng": -74.686696,
                  "name": "AEH : Egg Harbor Mainline Barrier",
                  "road": "Atlantic City Expy",
                  "state": "NJ",
                  "country": "USA",
                  "type": "barrier",
                  "tagCost": 4.7,
                  "tagPriCost": 4.7,
                  "cashCost": 4.7,
                  "prepaidCardCost": 4.7,
                  "currency": "USD",
                  "tagPrimaryNames": [
                    "E-ZPass"
                  ],
                  "prepaidCardNames": [],
                  "tagPrimary": [
                    "E-ZPass"
                  ],
                  "tagSecondary": [],
                  "licensePlateNames": [
                    "Tolls by Mail"
                  ],
                  "discountCarDetails": "Monthly Volume Discount: E-ZPass NJ must be used 30 times in 35-day period.",
                  "discountCarType": "All vehicles",
                  "arrival": {
                    "distance": 61553.6,
                    "time": "2024-01-09T12:04:13Z"
                  },
                  "timestamp_formatted": "2024-01-09T12:04:13Z",
                  "timestamp_localized": "2024-01-09T07:04:13-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -74.686696,
                        39.513676
                      ]
                    }
                  },
                  "tagRequested": "tagPriCost",
                  "tagSecCost": null,
                  "licensePlateCost": null,
                  "height": null
                },
                {
                  "id": 112106000,
                  "lat": 39.3230070016561,
                  "lng": -74.6161949840383,
                  "name": "Somers Point",
                  "road": "Garden State Parkway",
                  "state": "NJ",
                  "country": "USA",
                  "type": "barrier",
                  "tagCost": 2.02,
                  "tagPriCost": 2.02,
                  "tagSecCost": 2.02,
                  "cashCost": 2.1,
                  "prepaidCardCost": 2.02,
                  "currency": "USD",
                  "tagPrimaryNames": [
                    "E-ZPass NJ"
                  ],
                  "prepaidCardNames": [],
                  "tagPrimary": [
                    "E-ZPass NJ"
                  ],
                  "tagSecondary": [
                    "E-ZPass",
                    "E-ZPass DE",
                    "Uni",
                    "I-Pass",
                    "E-ZPass Skyway",
                    "E-ZPass IN",
                    "RiverLink",
                    "E-ZPass ME",
                    "E-ZPass MD",
                    "E-ZPass MA",
                    "MnPass",
                    "E-ZPass NH",
                    "E-ZPass NY",
                    "E-ZPass NC",
                    "E-ZPass OH",
                    "E-ZPass PA",
                    "E-ZPass RI",
                    "E-ZPass VA",
                    "E-ZPass WV",
                    "E-Zpass Flex"
                  ],
                  "licensePlateNames": [
                    "Tolls by Mail"
                  ],
                  "discountCarDetails": "Other discounts: 65+ Senior citizens receive a 10% discount on the off-peak rate as Senior Citizen Discount. Vehicles with fuel efficiency 45 MPG and meeting California Super Ultra Low Emission Vehicle (SULEV) standard receive a 10% discount on the off-peak rate as Green Pass Discount. Must have NJ E-ZPass.",
                  "discountCarType": "Cars",
                  "arrival": {
                    "distance": 112411.53,
                    "time": "2024-01-09T12:41:49Z"
                  },
                  "timestamp_formatted": "2024-01-09T12:41:49Z",
                  "timestamp_localized": "2024-01-09T07:41:49-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -74.6161949840383,
                        39.3230070016561
                      ]
                    }
                  },
                  "tagRequested": "tagPriCost",
                  "licensePlateCost": null,
                  "height": null
                }
              ],
              "polyline": "ekqrFfasiM\\yDb@oEBUB[De@F_@Z_Dj@cGT_CH_A\\aD@YTcCXoC|@cJ^eEj@oFZsDXoCf@iFDc@LqATcC^yDTuBL_BLuAn@wGJ_AHs@^cEv@gJd@wEFo@Fe@Dk@LiAJaALqAJw@NcAHe@Lq@R_ALg@J[La@Le@Xw@`@_ARc@T_@Vc@Xc@`@k@^i@V[f@g@h@g@r@o@NMz@s@b@]`@Y\\Up@c@TOz@i@x@g@j@]|@g@j@[d@Wj@Yt@]t@]t@]ZMXK^Mv@]r@[n@WlAg@pBu@rBu@jC_A|@Yx@Wl@SrAc@f@O^KTGf@Oh@Od@Mt@Sd@MlA[dBc@tBg@x@Qz@QnAW`ASp@Mv@O~@Qn@Mv@Mf@IdAQrBYr@K^Eb@Gf@GZCJALCj@Gl@GdBOpBWr@K|AMtBMbBKr@En@ExAInAIt@ETALALAz@G`DS`F[bAIfAItCSd@EnAM~BSbCQdAGr@Er@E~@IrAIh@GTCXCZ?xABbA@j@@lCJt@BbAF`ABTAZC^CVC^G\\GNCn@O~@W\\Il@Q`@MXI`@K^Id@M\\Gz@Kp@I\\E^EjAOXE^GfDg@`AO^GbASXGHCVGp@Sr@ObDu@rD}@bB_@bFmAzBi@hCo@xA_@r@QvD}@VGn@M|Bk@f@KZK`AUf@M`@KjEgAjBa@tCo@|@Sv@Q~@Uj@O~@UhBc@rJ{BtKeCbCm@jG{AbBa@j@MbFiAzCs@zCs@hHcB|EkAnAWlA[fBe@r@Uf@OhDmAb@Qd@SdBu@vAo@b@Ql@Yn@_@j@]tBoAvAy@bCiBtBaBtAmAj@g@~@y@\\[b@c@f@g@v@y@hAmAxAgBt@}@t@aAt@eARY\\g@NS\\c@~AcC~A}BT[xAuB|D{Fh@y@d@u@p@iA~@_Bt@sAt@wA`AoBv@_Bt@_Bl@uAt@gBvBoFbBcE`D_InAwCl@oAv@}ArBeEp@sAv@qA|@eBf@{@rAuBbAcBjAiBp@cAdBaCbAuAdByBfAqAtA_BxAaBdEiEz@y@b@_@h@g@n@k@vAmAf@a@hA}@vAcA`Aq@bCaBfC{AjDqBtBkAxA{@xA{@fDmBhEcC\\STONI|BqA|BqAnBiAjEeC`B_AjDiBnDaB~BcAnDuAbA_@lC}@zC}@lCu@~Bg@xBe@zAYbBY|AWtDc@rBSpAKxAUn@Ej@Ep@Er@CbAEpBG`BCzAEfBAjFEfG@jGD~FA|HEtJ?dCAxBCf@?lA?`DA|A?|@@hFDb@?n@?z@Ar@Ch@?lAA^?XAZCPAVCb@Gt@Ov@SPGXKn@Yh@WZSXS\\Y`Ay@dCaClDeDh@g@d@a@n@i@f@a@h@a@f@_@bAs@v@i@fAs@`CwA~BqATMnGkDnBkA|AiA`Aw@~@_AvA{ApA}A~@oAfAcB`AcBx@cBjCiGfBkEdAeCZw@nA_Dt@eBr@aBx@kBz@kBrAqCnB{D`AmBp@oAx@{A|AoCnAwBjB}CpB{ClAeBpAkBp@cAnAgBfAwAxBqClBaC~AkBpAyAdCkC|CgDfEcEfCcCtEqE|DwDvMkMxFwFzByBvAuALOf@i@fAcA|AgBjCoCrIoIZ[VWdEyDxAsAbByAr@q@l@i@dB}Al@k@l@k@bBaBtBsB~B}BdE_EjDiDrAoAfCeCjCgCfFcFfBcBhBkB|CcDhAoA~@eAzAgB~@iAlBaCrAeBjA_BlAeB|@qAjAgB`A{AjAkBd@w@fB{CjAsBxCkFnFsJnC}Ex@yA~@_BvA_C^o@p@mA^s@dBaD|@gBx@kBv@oB~BcHp@sBJ]Pi@dAcDrAiELc@tBaIP}@XwAH]VwA^mB`@cC^gCrA}KVmBj@sEt@iGt@eGr@_Gf@cEt@eGh@gEf@eEf@eEbAiIh@cEdA{Hz@yF|@wFpA}HbA}FzA}HhBcJtCoMfBsHj@{BZmALg@Li@hAkE`AsDhAyDvA{Eh@gBPm@Ro@~FuR`P}h@fBuFpAyDjBmFfBwE\\cAb@iAnA_Dr@eBz@qBjAiChAcC|@oBtAuChBmDbBcDjBiDpBmDfAiBlB}ClB{CfAcBvB}C`B_CxAqBlBgCbC}ChAuAvAcBxAeBdAmAhBoBzDeElDuDnCsCvSoT`CiCnGyGrBqB~CaDl@m@pDyE~AkBrA{AtAyArGcHRSHIVWdGoGnWoXjHyHb^m_@hCoC|JoKp@q@nBuBp@s@v@{@|AaBtD{D~FiGfDmD\\_@jRcS~_@ia@nH{HjBqBrAuApAuArA{ApAyAnAyAlAwApBeCrBmCvEoG`DuEvAyBdBqC|AcCn@cAd@u@Xc@rC{EbHmLpDgGzEoIT_@T_@rEsHbCwDxBgDx@mArCiEv@mAl@aAtC{E|AgCj@aAnFkJnBgDb@s@fGwJ|@_BVg@hBeDXe@jEmH`@s@T_@bBmCr@cAxA}Bf@y@xEmHdBmC`IuMxE_Ib@s@|GcLvHgMdI_NvFiJxG}K`HkLrDeG|HyMbDyFTa@T_@dDuFl@aAdA_BbA}ApB{CjAiB~@yAdAcBhB{Cr@mAt@qAjAuB|FaKzIoO~DcHhCoEbD_GlMuUTa@Xe@Tc@\\o@\\o@Zi@p@mAr@oAx@yAt@oAz@uAjAiBl@_At@kAf@y@p@gAv@mA~@_Bv@sA~AoCf@{@j@cAl@iAv@wAz@yAdD{FzGqLbBwC`FuIlAwBZk@xAkCtEcIpFqJfD}FrDoGbAiB~@cB~BcElAsBl@eAh@_Ad@w@f@y@n@eA|@wA`@o@h@w@h@w@r@aAx@gA|@kAhAuApCkDpBeCdGqHdFoGjMyOtIoK\\c@Z_@jEoFpHgJdAqAt@}@lLwNxKaNfGsHp@{@dKmMjEoF|EaGxJyL|GoIjIcKlB_CxAkBdAuAp@_Ax@kA|@sAt@kAv@oAt@oAn@gAh@cAfAoBfAqB`CoEfHuMlDuGpK}RfDmG`HmMtGyLrFeKhDgGjC}EdCuElA{BpBwDh@aAj@cA`@s@b@u@P[Xg@f@{@f@{@dAeB|AeClCeExCgF~B_EvCcFv@sAz@sAz@sA|@qAxB}CvDyFvAuBj@_An@aAxC}EtBeDbA}A|AoCfCmEVa@`BqCXa@l@cAnAsBn@gAl@aAR[JOLSHMLSJOLSPWNULQPW`@k@`AuA`B_C~AaC`CmDnB}C|AgChBuC`BiC|IqNpWya@tc@}r@dVw_@~Xyc@~BuDR[PYV_@PWRYZc@PWNSRWPSZ_@|@eA^c@XYVWv@w@b@c@XWVURQ^]h@e@j@c@XUVSTQROTQPMRO\\UPMVSNKNKTOd@[j@]r@a@v@c@TMRKRKZOVMTKTKXMPITKRK\\MVKRIRKRINGz@]^O^Kx@WRGRGRGRGXITGZIZI\\Ib@Kb@MRCXGZGTEZGl@Kh@I^Gj@I`@Gn@Ib@G`@Ej@Gd@Eh@Eh@Ev@Gv@Gh@Ef@E`DUvAKvAKbQqA|D[ZCVCVCVEVCRCTCZEXEh@Il@Ib@I^Gt@Op@MREPEJCPEVGfAWfBMZC\\Cd@B`@B`@Db@Ff@HjEt@ZENCJGLQHOK[_A}C[aAM_@cBeFuAeEyCcJY{@aCwHk@iBoA{D_@mAyBcH_@iAw@cC[aAa@oAoAaEWw@gBsF_@iASm@iF_PoHuUiDoKoGaSqDkLi@cBaDmK{A_FEMOg@i@cB}@qC{@oCa@qAWu@kB}FY}@a@mAY{@uC{IoD_LaF}NoDeKa@mAeA}CwGqRYy@kBqFOe@u@wBOa@s@uBa@mAq@qB}@kC{@aCSi@[_A]aAm@cBe@sACIWs@Ww@i@aBe@wAcAwCISa@iAi@yAOc@Sm@Ws@Oa@K[GOEMM_@GQGSKWGSm@eBgAaD}AwEWw@_AmCa@kAc@sAqAuDqBaGsA_EcA}C[y@c@oAYy@m@gBQi@_@eAsA}DeA}CgA}CcA{C[}@Ww@iBkFcAuCoAeDmBoFqBiG}@eCcBeFCIgAcDWw@k@_Bu@wBiAeDg@wAc@qAWq@Sg@Ue@OYMSSW[a@[_@u@aA}@gAUYg@o@gAqAqAaBsCkDwBkC{AiBqAaBiB{B[a@QW}@eB}DsLyAoE}A{EcCoHc@uAsA_EwH{UuAeEgAeDy@cCSm@g@{A{@oCyAyEYaAe@_BWw@m@mBg@uA[_AUm@_AoCs@uBsBeGu@{By@_CQg@IUYq@]q@OSQSq@i@eBeA_@UkAk@oBaAsAq@aD_BwLeGgG}Ci@WsBeAsAq@a@SWMWY_@c@k@q@k@{@Sg@Uk@k@}B]}Ag@aCaAoECMKk@Ec@CeACcBBk@Bi@DYLeAP_B^yDPeBJkAAgAEsBEe@CQOgAc@aC{@yEq@kDGU_@}BGg@Ca@Bi@Fk@LiAJ}@N{@Fc@Fo@@o@Ac@Aa@EY[qCAMa@eE]kD_@mD{@cI_ANYBY?Aj@e@d@CD??BEd@e@Bk@X?VE`AMz@bI^lD\\jD`@dE@LZpCDX@`@@b@An@Gn@Gb@Oz@K|@OhAGj@Ch@B`@Ff@`@|BDTp@jDz@xEb@`CNfABPDd@DrB@fAKjAQdB_@xDQ~AMdAEXCh@Cj@BbBBdADb@Jj@BL`AnEf@`C\\|Aj@|BTj@Tf@h@z@j@p@^b@VXVL`@RrAp@rBdAh@VfGzCvLdG`D~ArAp@nB`AjAj@^TdBdAp@h@PRNR\\p@Xp@JTPh@x@~Bt@zBrBdGr@tB~@nCTl@Z~@d@tAl@lBVv@d@~AX`AxAxEz@nCi@?oAJ}APoBRiALm@Fa@?[EYKUQSWM[I[E[Aa@@_@DYLa@LWRWXSXOBARGp@MvBWj@Kl@KbAGrCUtAOvAQ|HeAvLeB`AMrASl@I`CW`DYfBM~BMjBIhAC|AAjA@r@@lBHvBLh@DtANdALfAPj@Jr@NrAZd@Jt@RjBh@|@ZtAf@dAb@l@VnAl@lBdAfAl@x@d@fAp@lBnAfBnA~DvCrAbA\\V\\TvBfBd@\\vFbE~C|B`Ap@h@\\j@Z`Af@f@V^R~@b@pB|@n@X~Ah@dIxBtKvCd@L|@VfAZ`G|AtNxDnA\\`@LfAZ~Bt@rAb@xBx@d@PhDnARHdDpA|ChAzDtA~CjAv@X|@Zj@PhA\\dAV~@Tb@Jl@LbAPnARrBVH@nAHx@FjAH|DV`CN~@HdAJrBXbCf@rAZtBl@n@Vj@RfBt@pBz@f@Tl@VvAn@RHh@TbGjCvD`BrAj@nAh@t@V|@XdAXzA\\dBX^Fb@FXBv@Fd@BbAD`BDfA@`@?p@@zA@hA@z@@h@?v@B^@f@?fDD~A@jA@tCDnCFvBN~BPnD^lC\\nC`@`Dn@rCn@rA\\rBl@zBp@rBr@bE`BbDxApAn@tAr@dB`AtBlAtA~@jAv@`CbBtGfFfDnCzAnArB~AnEfDbExCfEnC|ClBhBfAnBjAjB`AzFxCrExBf@TrAl@XNVJlCjAxClAt@XfFfBdDjAdDdA|Cx@nEjAbCr@dBd@hBf@pCt@|Bj@jB`@jBf@f@Nb@N~@\\tBbAb@T|@h@jAr@|BzAn@`@PJhAp@nAv@zCnB|@j@|@f@bIbFzClBXP|@j@|@l@d@\\z@n@n@f@j@d@`@\\jAbAz@x@r@p@~A~ApAtAr@x@\\^\\`@r@z@h@p@j@p@z@hAf@p@`@j@t@fAzAvBpGfJz@nAb@p@f@r@`ApAp@~@l@x@j@t@f@n@j@r@l@v@n@t@j@l@h@h@j@h@~@z@d@b@XV`@\\h@b@d@^`@Zf@^x@l@v@h@p@d@n@`@nAx@~@n@`Ap@bGhE`BjAtEhDbAt@r@f@t@f@j@^t@d@~@j@d@Xj@Zp@^n@Z`@Rh@Vz@`@r@Zj@Tz@\\|@\\n@Tx@Xh@Pt@Tr@Rt@Rx@R|@Rx@Pt@Np@LbFz@xEx@~B^d@HZFVDj@J`AR`ATp@Pr@R`AZx@Vl@RjBr@tAl@z@`@`Af@|BnAl@^^Tj@\\h@^t@h@p@f@f@`@f@`@f@b@j@h@vAtAtAxAtAzA`BdBjHzHfErEjCtC~A`BdAbAl@h@v@p@l@f@f@`@t@j@`Ar@pA|@p@b@p@`@n@^p@^n@\\|@b@fAf@dAd@d@Rn@Vh@Rh@P~@Zz@X~@X`Bf@lA^vBr@d@Pj@Tl@Vr@Zr@\\v@b@~@j@z@j@x@l@dKdIn@f@d@^r@j@rB~AbAv@n@f@r@h@h@^b@Xf@Zj@\\bAl@`@Th@X~@d@\\PZNTJPHXLRHVJVJb@Pp@Vl@Tl@TXJTHZJ|DnAd@Nf@LfA\\x@VVHtDhAb@Nn@Tv@Zp@Xx@`@z@d@l@\\l@^j@^l@b@h@`@`@\\j@f@|@z@l@l@l@p@z@`An@t@t@|@lDjEhBxBhBzBvBjC^b@zBpCjAtAb@bAJ\\F`@Dj@?t@CdAC`A?`@B\\FZJZNRRRTJTDTAVCXMb@g@|@mAZo@x@wANU~AsCvAcCn@gAhAmBn@mAh@_ATa@NW^q@`@s@v@sADIHMl@eAb@u@pGyK@CDG\\m@t@qAb@u@Va@`@q@nBeD`@s@`A_Bl@aAj@gAP[b@eAFQPk@Rs@T_@LYFO^{@\\u@r@mAn@gAb@s@`AyAn@aADGFW\\e@TYLO^a@VWRSRSZY`@]POVSd@]TOTM`@WXONITMNINILGLGNGTITIPGVIt@UlA[nA[p@QXIPGl@Ql@SlAa@x@W`@SRKTMPKLItA}@v@i@TOpBuAjA_Al@e@t@q@p@q@l@u@r@aAzAyBv@kAt@iAf@s@b@k@f@m@h@k@f@i@x@u@t@k@nA{@nA{@|A_AhBaAzAw@p@a@fDyBpBsAzAiAz@i@hEqC`CeBlBuA`DeCvAcAdLaIbBoAtDmCdD_Ct@k@z@m@tB{A~@o@l@_@r@]r@Yp@Sz@Sx@Mx@Gt@Cp@?n@@R@Z@lAFpADj@@t@C`@Cl@In@Qd@Qd@U`@W\\YZ[VYTYXo@bAwA`@m@z@mAp@aAf@q@V]`@m@T[bAwAr@cAx@kA|@oAf@m@jAwAoBmC"
            }
          ],
          "meta": {
            "userId": "developer@tollguru.com",
            "customerId": "cus_Gxf9jTs5iu6FtA",
            "tx": 5,
            "type": "api",
            "client": "api",
            "source": "here"
          }
        }
      },
      "Example-6c89effa-6d74-4e24-a520-8980c6f9d9ba": {
        "value": {
          "from": {
            "address": "Walt Whitman Brg Philadelphia, PA 19148, USA"
          },
          "to": {
            "address": "Ocean City, NJ 08226, USA"
          },
          "vehicle": {
            "type": "5AxlesTruck",
            "height": {
              "value": 10,
              "unit": "feet"
            },
            "weight": {
              "value": 45000,
              "unit": "pounds"
            },
            "length": {
              "value": 30,
              "unit": "feet"
            },
            "axles": 5
          },
          "fuelOptions": {
            "fuelCost": {
              "value": 4.38,
              "currency": "USD",
              "units": "$/gallon"
            }
          },
          "fuelEfficiency": {
            "city": 6.4,
            "hwy": 8.2,
            "units": "mpg"
          },
          "driver": {
            "wage": 30,
            "rounding": 15,
            "valueOfTime": 0
          },
          "state_mileage": true,
          "hos": {
            "rule": 60,
            "dutyHoursBeforeEndOfWorkDay": 11,
            "dutyHoursBeforeRestBreak": 7,
            "drivingHoursBeforeEndOfWorkDay": 11,
            "timeRemaining": 60
          }
        }
      },
      "Example-03a93f56-cc01-4982-a119-ed261038c75b": {
        "value": {
          "status": "OK",
          "summary": {
            "route": [
              {
                "location": {
                  "lat": 39.90724,
                  "lng": -75.14148
                },
                "address": "Walt Whitman Brg, Philadelphia, PA 19148, United States"
              },
              {
                "location": {
                  "lat": 39.27952,
                  "lng": -74.57579
                },
                "address": "834 Asbury Ave, Ocean City, NJ 08226-3657, United States"
              }
            ],
            "countries": [
              "USA"
            ],
            "currency": "USD",
            "vehicleType": "5AxlesTruck",
            "vehicleDescription": "Truck - 5 Axles",
            "fuelPrice": {
              "value": 4.38,
              "currency": "USD",
              "units": "USD/gallon",
              "fuelUnit": "gallon"
            },
            "fuelEfficiency": {
              "city": 6.4,
              "hwy": 8.2,
              "units": "MPG",
              "fuelUnit": "gallon"
            },
            "units": {
              "currencyUnit": "USD",
              "fuelEfficiencyUnit": "MPG",
              "fuelUnit": "gallon"
            },
            "departure_time": "2024-01-09T11:26:37.775096479Z",
            "departureTime": "2024-01-09T11:26:37.775096479Z",
            "share": {
              "name": "walt whitman brg, philadelphia, pa 19148, united states-834 asbury ave, ocean city, nj 08226-3657, united states",
              "prefix": "walt+whitman+brg%2C+philadelphia%2C+pa+19148%2C+united+states-834+asbury+ave%2C+ocean+city%2C+nj+08226-3657%2C+united+states",
              "uuid": "b9e5d18e-c8c1-4ab0-bf58-d76f36b50ebd",
              "timestamp": "2024-01-09T11:26:37.775110434Z",
              "client": "api"
            },
            "source": "HERE"
          },
          "routes": [
            {
              "summary": {
                "hasTolls": true,
                "hasExpressTolls": false,
                "diffs": {
                  "cheapest": 0,
                  "fastest": 0
                },
                "url": "https://www.google.com/maps/?saddr=39.907240,-75.141480&daddr=39.905190,-75.129570+to:39.868230,-75.102130+to:39.771060,-75.048940+to:39.325670,-74.615870+to:39.279402,-74.575553+to:39.279520,-74.575790&via=1,2,3,4,5",
                "distance": {
                  "text": "59 mi",
                  "metric": "96 km",
                  "value": 96076
                },
                "duration": {
                  "text": "1 h 4 min",
                  "value": 3877
                },
                "name": "RT-42"
              },
              "costs": {
                "tagAndCash": 27.1,
                "minimumTollCost": 27.1,
                "fuel": 32.24,
                "tag": 27.1,
                "cash": 27.1,
                "prepaidCard": 27.1,
                "licensePlate": null
              },
              "tolls": [
                {
                  "id": 112001300,
                  "lat": 39.513676,
                  "lng": -74.686696,
                  "name": "AEH : Egg Harbor Mainline Barrier",
                  "road": "Atlantic City Expy",
                  "state": "NJ",
                  "country": "USA",
                  "type": "barrier",
                  "tagCost": 17,
                  "tagPriCost": 17,
                  "cashCost": 17,
                  "prepaidCardCost": 17,
                  "currency": "USD",
                  "tagPrimaryNames": [
                    "E-ZPass"
                  ],
                  "prepaidCardNames": [],
                  "tagPrimary": [
                    "E-ZPass"
                  ],
                  "tagSecondary": [],
                  "licensePlateNames": [
                    "Tolls by Mail"
                  ],
                  "discountCarDetails": "Monthly Volume Discount: E-ZPass NJ must be used 30 times in 35-day period.",
                  "discountCarType": "All vehicles",
                  "arrival": {
                    "distance": 61553.6,
                    "time": "2024-01-09T12:05:34Z"
                  },
                  "timestamp_formatted": "2024-01-09T12:05:34Z",
                  "timestamp_localized": "2024-01-09T07:05:34-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -74.686696,
                        39.513676
                      ]
                    }
                  },
                  "tagRequested": "tagPriCost",
                  "tagSecCost": null,
                  "licensePlateCost": null,
                  "height": null
                },
                {
                  "id": 112106000,
                  "lat": 39.3230070016561,
                  "lng": -74.6161949840383,
                  "name": "Somers Point",
                  "road": "Garden State Parkway",
                  "state": "NJ",
                  "country": "USA",
                  "type": "barrier",
                  "tagCost": 10.1,
                  "tagPriCost": 10.1,
                  "tagSecCost": 10.1,
                  "cashCost": 10.1,
                  "prepaidCardCost": 10.1,
                  "currency": "USD",
                  "tagPrimaryNames": [
                    "E-ZPass NJ"
                  ],
                  "prepaidCardNames": [],
                  "tagPrimary": [
                    "E-ZPass NJ"
                  ],
                  "tagSecondary": [
                    "E-ZPass",
                    "E-ZPass DE",
                    "Uni",
                    "I-Pass",
                    "E-ZPass Skyway",
                    "E-ZPass IN",
                    "RiverLink",
                    "E-ZPass ME",
                    "E-ZPass MD",
                    "E-ZPass MA",
                    "MnPass",
                    "E-ZPass NH",
                    "E-ZPass NY",
                    "E-ZPass NC",
                    "E-ZPass OH",
                    "E-ZPass PA",
                    "E-ZPass RI",
                    "E-ZPass VA",
                    "E-ZPass WV",
                    "E-Zpass Flex"
                  ],
                  "licensePlateNames": [
                    "Tolls by Mail"
                  ],
                  "discountCarDetails": "Other discounts: 65+ Senior citizens receive a 10% discount on the off-peak rate as Senior Citizen Discount. Vehicles with fuel efficiency 45 MPG and meeting California Super Ultra Low Emission Vehicle (SULEV) standard receive a 10% discount on the off-peak rate as Green Pass Discount. Must have NJ E-ZPass.",
                  "discountCarType": "Cars",
                  "arrival": {
                    "distance": 89825.66,
                    "time": "2024-01-09T12:22:42Z"
                  },
                  "timestamp_formatted": "2024-01-09T12:22:42Z",
                  "timestamp_localized": "2024-01-09T07:22:42-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -74.6161949840383,
                        39.3230070016561
                      ]
                    }
                  },
                  "tagRequested": "tagPriCost",
                  "licensePlateCost": null,
                  "height": null
                }
              ],
              "polyline": "ekqrFfasiM\\yDb@oEBUB[De@F_@Z_Dj@cGT_CH_A\\aD@YTcCXoC|@cJ^eEj@oFZsDXoCf@iFDc@LqATcC^yDTuBL_BLuAn@wGJ_AHs@^cEv@gJd@wEFo@Fe@Dk@LiAJaALqAJw@NcAHe@Lq@R_ALg@J[La@Le@Xw@`@_ARc@T_@Vc@Xc@`@k@^i@V[f@g@h@g@r@o@NMz@s@b@]`@Y\\Up@c@TOz@i@x@g@j@]|@g@j@[d@Wj@Yt@]t@]t@]ZMXK^Mv@]r@[n@WlAg@pBu@rBu@jC_A|@Yx@Wl@SrAc@f@O^KTGf@Oh@Od@Mt@Sd@MlA[dBc@tBg@x@Qz@QnAW`ASp@Mv@O~@Qn@Mv@Mf@IdAQrBYr@K^Eb@Gf@GZCJALCj@Gl@GdBOpBWr@K|AMtBMbBKr@En@ExAInAIt@ETALALAz@G`DS`F[bAIfAItCSd@EnAM~BSbCQdAGr@Er@E~@IrAIh@GTCXCZ?xABbA@j@@lCJt@BbAF`ABTAZC^CVC^G\\GNCn@O~@W\\Il@Q`@MXI`@K^Id@M\\Gz@Kp@I\\E^EjAOXE^GfDg@`AO^GbASXGHCVGp@Sr@ObDu@rD}@bB_@bFmAzBi@hCo@xA_@r@QvD}@VGn@M|Bk@f@KZK`AUf@M`@KjEgAjBa@tCo@|@Sv@Q~@Uj@O~@UhBc@rJ{BtKeCbCm@jG{AbBa@j@MbFiAzCs@zCs@hHcB|EkAnAWlA[fBe@r@Uf@OhDmAb@Qd@SdBu@vAo@b@Ql@Yn@_@j@]tBoAvAy@bCiBtBaBtAmAj@g@~@y@\\[b@c@f@g@v@y@hAmAxAgBt@}@t@aAt@eARY\\g@NS\\c@~AcC~A}BT[xAuB|D{Fh@y@d@u@p@iA~@_Bt@sAt@wA`AoBv@_Bt@_Bl@uAt@gBvBoFbBcE`D_InAwCl@oAv@}ArBeEp@sAv@qA|@eBf@{@rAuBbAcBjAiBp@cAdBaCbAuAdByBfAqAtA_BxAaBdEiEz@y@b@_@h@g@n@k@vAmAf@a@hA}@vAcA`Aq@bCaBfC{AjDqBtBkAxA{@xA{@fDmBhEcC\\STONI|BqA|BqAnBiAjEeC`B_AjDiBnDaB~BcAnDuAbA_@lC}@zC}@lCu@~Bg@xBe@zAYbBY|AWtDc@rBSpAKxAUn@Ej@Ep@Er@CbAEpBG`BCzAEfBAjFEfG@jGD~FA|HEtJ?dCAxBCf@?lA?`DA|A?|@@hFDb@?n@?z@Ar@Ch@?lAA^?XAZCPAVCb@Gt@Ov@SPGXKn@Yh@WZSXS\\Y`Ay@dCaClDeDh@g@d@a@n@i@f@a@h@a@f@_@bAs@v@i@fAs@`CwA~BqATMnGkDnBkA|AiA`Aw@~@_AvA{ApA}A~@oAfAcB`AcBx@cBjCiGfBkEdAeCZw@nA_Dt@eBr@aBx@kBz@kBrAqCnB{D`AmBp@oAx@{A|AoCnAwBjB}CpB{ClAeBpAkBp@cAnAgBfAwAxBqClBaC~AkBpAyAdCkC|CgDfEcEfCcCtEqE|DwDvMkMxFwFzByBvAuALOf@i@fAcA|AgBjCoCrIoIZ[VWdEyDxAsAbByAr@q@l@i@dB}Al@k@l@k@bBaBtBsB~B}BdE_EjDiDrAoAfCeCjCgCfFcFfBcBhBkB|CcDhAoA~@eAzAgB~@iAlBaCrAeBjA_BlAeB|@qAjAgB`A{AjAkBd@w@fB{CjAsBxCkFnFsJnC}Ex@yA~@_BvA_C^o@p@mA^s@dBaD|@gBx@kBv@oB~BcHp@sBJ]Pi@dAcDrAiELc@tBaIP}@XwAH]VwA^mB`@cC^gCrA}KVmBj@sEt@iGt@eGr@_Gf@cEt@eGh@gEf@eEf@eEbAiIh@cEdA{Hz@yF|@wFpA}HbA}FzA}HhBcJtCoMfBsHj@{BZmALg@Li@hAkE`AsDhAyDvA{Eh@gBPm@Ro@~FuR`P}h@fBuFpAyDjBmFfBwE\\cAb@iAnA_Dr@eBz@qBjAiChAcC|@oBtAuChBmDbBcDjBiDpBmDfAiBlB}ClB{CfAcBvB}C`B_CxAqBlBgCbC}ChAuAvAcBxAeBdAmAhBoBzDeElDuDnCsCvSoT`CiCnGyGrBqB~CaDl@m@pDyE~AkBrA{AtAyArGcHRSHIVWdGoGnWoXjHyHb^m_@hCoC|JoKp@q@nBuBp@s@v@{@|AaBtD{D~FiGfDmD\\_@jRcS~_@ia@nH{HjBqBrAuApAuArA{ApAyAnAyAlAwApBeCrBmCvEoG`DuEvAyBdBqC|AcCn@cAd@u@Xc@rC{EbHmLpDgGzEoIT_@T_@rEsHbCwDxBgDx@mArCiEv@mAl@aAtC{E|AgCj@aAnFkJnBgDb@s@fGwJ|@_BVg@hBeDXe@jEmH`@s@T_@bBmCr@cAxA}Bf@y@xEmHdBmC`IuMxE_Ib@s@|GcLvHgMdI_NvFiJxG}K`HkLrDeG|HyMbDyFTa@T_@dDuFl@aAdA_BbA}ApB{CjAiB~@yAdAcBhB{Cr@mAt@qAjAuB|FaKzIoO~DcHhCoEbD_GlMuUTa@Xe@Tc@\\o@\\o@Zi@p@mAr@oAx@yAt@oAz@uAjAiBl@_At@kAf@y@p@gAv@mA~@_Bv@sA~AoCf@{@j@cAl@iAv@wAz@yAdD{FzGqLbBwC`FuIlAwBZk@xAkCtEcIpFqJfD}FrDoGbAiB~@cB~BcElAsBl@eAh@_Ad@w@f@y@n@eA|@wA`@o@h@w@h@w@r@aAx@gA|@kAhAuApCkDpBeCdGqHdFoGjMyOtIoK\\c@Z_@jEoFpHgJdAqAt@}@lLwNxKaNfGsHp@{@dKmMjEoF|EaGxJyL|GoIjIcKlB_CxAkBdAuAp@_Ax@kA|@sAt@kAv@oAt@oAn@gAh@cAfAoBfAqB`CoEfHuMlDuGpK}RfDmG`HmMtGyLrFeKhDgGjC}EdCuElA{BpBwDh@aAj@cA`@s@b@u@P[Xg@f@{@f@{@dAeB|AeClCeExCgF~B_EvCcFv@sAz@sAz@sA|@qAxB}CvDyFvAuBj@_An@aAxC}EtBeDbA}A|AoCfCmEVa@`BqCXa@l@cAnAsBn@gAl@aAR[JOLSHMLSJOLSPWNULQPW`@k@`AuA`B_C~AaC`CmDnB}C|AgChBuC`BiC|IqNpWya@tc@}r@dVw_@~Xyc@~BuDR[PYV_@PWRYZc@PWNSRWPSZ_@|@eA^c@XYVWv@w@b@c@XWVURQ^]h@e@j@c@XUVSTQROTQPMRO\\UPMVSNKNKTOd@[j@]r@a@v@c@TMRKRKZOVMTKTKXMPITKRK\\MVKRIRKRINGz@]^O^Kx@WRGRGRGRGXITGZIZI\\Ib@Kb@MRCXGZGTEZGl@Kh@I^Gj@I`@Gn@Ib@G`@Ej@Gd@Eh@Eh@Ev@Gv@Gh@Ef@E`DUvAKvAKbQqA|D[ZCVCVCVEVCRCTCZEXEh@Il@Ib@I^Gt@Op@MREPEJCPEVGfAWxC}@zAi@|Ai@vAg@`Ae@\\O^Qb@QbB{@nAs@j@[pAy@~AgAlA{@nA_ApAgArAkAnAkAnAmA|BiC`@e@X]nAyAjBgCdA_BbA}AbAaB`AeBf@aAd@}@jA_Cx@kBjB{EL]Tm@Pc@To@\\eAhAoDjCwIh@eC`@iBhFcUt@eDpAyFnQcw@pH{[j@eCz@uDf@qBj@qBn@qBJWf@wAZw@p@eBZy@|@gBv@cApAwBR[b@s@n@cAV_@X_@`@g@t@}@fAoAhAmAdAcAbAaAjAeAdB{A`CyBf@g@r@q@dC}BdC}BxAuAxA}AhAsApAaBjA}AfAaBhAkBbAkB`AoBz@mBz@uBz@}Bp@kBp@gB`AiCPc@Pc@~AoErByFpAoDnAiDnAgDt@oBhBcFv@sB^cAfBwErGaQnAiDp@iBbCuGf@o@\\i@TYj@m@|@s@nB}AxAmAv@o@t@o@^Ub@_@`@Ur@a@j@[TMXMpAc@l@Mt@Kh@Gx@Ah@@n@DjARzAZv@NdAP~AXbARfAThB^dATh@H`@Fd@DrAJhBf@pCt@|Bj@jB`@jBf@f@Nb@N~@\\tBbAb@T|@h@jAr@|BzAn@`@PJhAp@nAv@zCnB|@j@|@f@bIbFzClBXP|@j@|@l@d@\\z@n@n@f@j@d@`@\\jAbAz@x@r@p@~A~ApAtAr@x@\\^\\`@r@z@j@p@h@p@z@hAf@p@`@j@v@fAzAvBpGfJz@nAb@p@f@r@~@pAp@~@l@x@j@t@f@n@j@r@n@v@n@t@j@l@h@h@h@h@~@z@d@b@XV`@\\h@b@d@^`@Zf@^x@l@v@h@r@d@n@`@nAx@~@n@`Ap@bGhE`BjAtEhDbAt@r@f@t@f@j@^t@d@~@j@d@Xj@Zp@^n@Z`@Rh@Vz@`@r@Zj@Tz@\\|@\\n@Tx@Xh@Pt@Tr@Rt@Rx@R|@Rx@Pt@Np@LbFz@xEx@~B^d@HZFVDj@J`AR`ATp@Pr@R`AZx@Vl@RjBr@tAl@z@`@`Af@|BnAl@^^Th@\\h@^t@h@p@f@f@`@f@`@f@b@j@h@vAtAtAxAvAzA~AdBjHzHfErEjCtC~A`BdAbAl@h@v@p@l@f@f@`@t@j@`Ar@pA|@p@b@p@`@n@^p@^n@\\|@b@fAf@dAd@d@Rn@Vh@Rh@P~@Zz@X~@X`Bf@lA^vBr@d@Pj@Tl@Vr@Zr@\\v@b@~@j@z@j@x@l@dKdIn@f@d@^r@j@rB~AbAv@n@f@r@h@h@^b@Xf@Zj@\\bAl@`@Th@X~@d@\\PZNTJPHXLRHVJVJb@Pp@Vl@Tl@TXJTHZJ|DnAd@Nf@LfA\\x@VVHtDhAb@Nn@Tv@Zp@Xx@`@z@d@l@\\l@^j@^l@b@h@`@`@\\j@f@|@z@l@l@l@p@z@`An@t@t@|@lDjEhBxBhBzBvBjC^b@zBpCjAtAb@bAJ\\F`@Dj@?t@CdAC`A?`@B\\FZJZNRRRTJTDTAVCXMb@g@|@mAZo@x@wANU~AsCvAcCn@gAhAmBn@mAh@_ATa@NW^q@`@s@v@sADIHMl@eAb@u@pGyK@CDG\\m@t@qAb@u@Va@`@q@nBeD`@s@`A_Bl@aAj@gAP[b@eAFQPk@Rs@T_@LYFO^{@\\u@r@mAn@gAb@s@`AyAn@aADGFW\\e@TYLO^a@VWRSRSZY`@]POVSd@]TOTM`@WXONITMNINILGLGNGTITIPGVIt@UlA[nA[p@QXIPGl@Ql@SlAa@x@W`@SRKTMPKLItA}@v@i@TOpBuAjA_Al@e@t@q@p@q@l@u@r@aAzAyBv@kAt@iAf@s@b@k@f@m@h@k@f@i@x@u@t@k@nA{@nA{@|A_AhBaAzAw@p@a@fDyBpBsAzAiAz@i@hEqC`CeBlBuA`DeCvAcAdLaIbBoAtDmCdD_Ct@k@z@m@tB{A~@o@l@_@r@]r@Yp@Sz@Sx@Mx@Gt@Cp@?n@@R@Z@lAFpADj@@t@C`@Cl@In@Qd@Qd@U`@W\\YZ[VYTYXo@bAwA`@m@z@mAp@aAf@q@V]`@m@T[bAwAr@cAx@kA|@oAf@m@jAwAoBmC",
              "territoryMileage": [
                {
                  "territory": {
                    "name": "New Jersey",
                    "code": "NJ",
                    "type": "state"
                  },
                  "distance": {
                    "text": "59",
                    "metric": "95",
                    "value": "95032"
                  },
                  "trafficTime": "1 h 3 m",
                  "tollDistance": {
                    "unit": "meter",
                    "value": 66507
                  }
                },
                {
                  "territory": {
                    "name": "Pennsylvania",
                    "code": "PA",
                    "type": "state"
                  },
                  "distance": {
                    "text": "0",
                    "metric": "1",
                    "value": "1044"
                  },
                  "trafficTime": ""
                }
              ],
              "hos": {
                "status": "OK",
                "summary": {
                  "total_drive_duration": {
                    "text": "1h 4m",
                    "value": 3877
                  },
                  "total_break_duration": {
                    "text": "",
                    "value": 0
                  },
                  "total_duration": {
                    "text": "1h 4m",
                    "value": 3877
                  },
                  "total_distance": {
                    "text": "60",
                    "metric": "96",
                    "value": "96076"
                  },
                  "rulesParam": {
                    "rule": "60",
                    "dutyHoursBeforeEndOfWorkDay": "11",
                    "dutyHoursBeforeRestBreak": "7",
                    "drivingHoursBeforeEndOfWorkDay": "11",
                    "timeRemaining": "60"
                  }
                },
                "break_points": [],
                "stops": [],
                "data": [
                  {
                    "instruction": "Start from Walt Whitman Brg Philadelphia, PA 19148, USA"
                  },
                  {
                    "instruction": "Drive",
                    "duration": {
                      "text": "1h 4m",
                      "value": 3877
                    },
                    "distance": {
                      "text": "60",
                      "metric": "96",
                      "value": "59699"
                    }
                  },
                  {
                    "instruction": "Arrived at Ocean City, NJ 08226, USA"
                  }
                ]
              },
              "driver": {
                "billedHours": 1.25,
                "wage": 30,
                "total": 37.5
              }
            }
          ],
          "meta": {
            "userId": "developer@tollguru.com",
            "customerId": "cus_Gxf9jTs5iu6FtA",
            "tx": 4,
            "type": "api",
            "client": "api",
            "source": ""
          }
        }
      },
      "Example-e434beda-8ae9-4b1b-86ab-9c3ef09643f9": {
        "value": {
          "polyline": "kdzrFpbwiMC`@EJGLIHOHi@Gs@KOAI?K@EBGDGHGJENCRCZKhAK`BQtCI`BIp@W|CGp@Ex@KrBIpAMbCCLIvAEr@Gz@Ef@Cb@YxEMhBYbEQfCQlCY~Ei@|HOxBMhBUnDOzBATAROlCCl@En@ARC\\i@Kk@MeASUEg@S[MWIiASuAGgAB_@BYDe@F_@HYHa@LuAjAo@Zu@\\]P_@TOHk@\\mAv@iAt@s@d@i@`@a@Z_@Ze@`@q@n@u@r@yAvASRURi@d@eAz@oAbAu@t@QReAlAmCjDkAzA_@f@[b@SZS\\S^S`@Q^Q`@O^Sj@mAvDUr@Yx@Sh@O^KTKTMVOXMR_@l@_@j@m@t@i@l@c@`@a@\\k@b@q@`@[Pc@Tc@Ra@Na@LUFg@LUF_@HeGlAkDp@]Fe@Ju@Nk@Lo@Na@J_@Jg@PYLMFSLSNOLUTQPOPQTQVMRMTKTKVO`@K\\Kb@GZId@Gb@I|@MrAYbDKfAK~@M`AMx@Mt@Mp@Qv@Mf@Oj@Sv@KXITIXOb@Uj@Uf@Wh@Yj@U^_@t@y@zAi@~@eBtCYh@MRyCjFy@rA_AnAaAdAqA`A]T_@Te@RkA`@_@JYFUDm@HUB_@Da@Bg@ByABk@?k@AyAIo@Gi@Gk@IaB]mBk@i@SoAi@mAq@e@Wc@[eCqB_A_Aq@}@s@aAQYw@mA]m@Yk@g@gAc@eAa@cAm@}AM_@k@yAs@cBw@cB{@_B_A_BaAyAaAwAaAoAmAsAmAmAo@k@a@_@sAgAuAaA{@m@a@Y]So@_@qAq@oAk@UK}@]k@SwAc@yAa@iCs@qAWs@OwAWwASuAMsAKuAEk@Ak@@k@Bm@Fs@Ne@Jk@Vg@TSLc@\\[Ta@\\UTSRQRORMPQXS\\Ud@O\\MXSd@Uj@KXKXM`@Qj@o@vBy@zCmArEYfAm@|Bu@tCyCnK_@nAwAjEs@jBSh@gBhEYp@[r@gCpFwAtCkArBYf@e@z@a@r@Wb@[h@qA~BkBdDOXq@hAg@|@]l@Wb@U^e@t@_@j@]f@a@h@c@h@Y\\STc@d@WVg@f@g@d@_Av@_@Xw@j@_Al@{CjB}@j@qA~@cAx@o@l@k@l@e@h@[^c@j@]f@a@l@U^[h@]n@Q\\S`@a@x@Yj@]p@Yl@_@v@s@zAaAnBoAlCy@bBYn@Wh@g@fAa@|@]|@w@zBSj@y@tCeArDs@bCk@hB_@`A]z@k@tAk@fAq@pA}AbCcAvAcAtAgCjDoBlC_ApA_@h@e@t@i@~@U`@S`@OZYj@]v@kClGWj@_AzB_@z@a@z@Yh@a@r@_@l@W^[`@Y^Y\\e@f@g@f@_@\\mB|A_At@u@n@g@f@c@b@a@d@W\\SXYb@e@t@Ub@Yl@Yp@KXa@lAq@pB{@hC[bAk@`B]x@Sd@]r@Yf@_@l@c@l@o@v@_A`AoArAoCrCuCxCc@d@u@t@[\\e@f@]`@c@h@W\\W\\W^]f@]j@g@x@Wd@c@x@q@pAc@z@]p@c@z@i@dAo@lA[l@g@~@i@fAk@dA]j@}@vAa@j@m@x@g@l@o@t@o@p@u@t@cDfD_NbNmCpCyC|CyBzBaSjSuGxGeBfBqFtFeDfDsDtDeEhEuExEaA~@aA~@sAhAe@^k@b@iAv@uA|@_CrAaBx@{CvAqB~@kD~AuCtAcBz@sAz@e@^c@^g@f@WXg@n@[b@[f@_@n@Yj@c@`AQb@]~@Ut@Sx@YjAIn@QlAGh@Gt@IlAGhAAh@?pB@r@F~@HpAHx@J|@TzA\\jBb@vBlArGhAxFl@|C|@jEp@pDHf@Nt@PlALbAT|AVrB`@jDVxBd@xDNrANhAP~AH~@N|APlBNbBHhAFx@F|@JxAF~@HzADp@HpADl@Dp@FdADt@FdABd@HtAFt@H`BF~@B`@Dl@LfBFz@T`CL~AN~APbBP|A`@fDZdCJv@VpBl@fF\\pCTrBLpAFx@Dj@Fx@JjBJ~BBj@FlAF`AHfAJfATzAPpAPzAh@fEBLFZFZF^FXRjAh@rDFb@J|@BVBRD`@BZ@L@T@X@R@TBn@?v@?dACp@Ah@C`@K~@WzAMv@Ib@Qv@Mh@St@Ur@Qd@Qd@]t@q@|As@xAo@pA{@hBc@|@[r@_@|@]~@Qj@Sr@Qp@Qv@Qz@O`AIn@Gh@Gp@G|@IrAIzAIbBIpAKpAIx@Gj@M|@Id@Ot@U|@Ux@Qj@k@xA_@v@g@bAMRSXSXo@x@u@|@_@b@q@t@yAdBiApAaDvDi@n@[`@i@r@q@bAa@n@]j@g@|@y@bBg@hAWl@_AfCc@pA[dAU~@]vAS~@Mn@GZQfASvAQrAIx@MrAKrAEn@MxBMjCs@nNGhAWzE_@zHMbCKpBIbBI|AMbCQ|CGjAIhAIlAMzAUbCYtCK|@OrAc@tCu@fFi@vDmA|I}@pGeAxH_AzG_@hCYtBYfBoAbJaAhHgA~Ha@hDU`Bg@jDU~ASpAWbBSzASvA[tBYxBa@vCi@`DYzA[|A]zAc@fBc@~Aa@rAs@rBKZSp@Uj@KZEJs@jBUl@gAnCc@dAw@pBaAbCSd@[v@o@~A}@|BaAbCg@jAi@dA}@pA[b@[d@o@jAcApBm@xAc@~Ai@jBe@dBg@`BUl@Wn@iBxDm@nAg@tAs@zAm@lA_@f@STQNUNWL}@`@o@TQFIBSHSHYJODQDG@K@I?KAKCKEKGGGEGEIEKCICMAIAM?I?M@Q@IBKDMDIHMFGHGHEHCFAHAF?H@F@HBHDHFFFDFHNFLFPJ^Lh@F\\FZR`AZnATxAPfATrAXbBn@rDx@zEb@nCJh@FZLv@DXZhBpAvHjAfHxAxIzA~IdEvVRlATnAx@pE|@nFZjBfBpKdEpVzGva@vCdQ~@zFvAfIn@`E~@`GXnB\\jC~@`IVjCRzBXdER~CPtCLjBXnEh@pI`@nG^|FVdEJ~AR|Cd@nH\\lFV|D^tFj@jJ|@pN^|FdAjPTjD\\vFbAzOLnB^~F^bG|@hNNfCJvBDdAB|@BhB@hA@jBAfDAdAEhBGjBIfBI|AIfBS~DKzBE`AElACz@EjCAlA?~B@dC@|@DhBLhDPbDLdBPjBT~BP~Ap@hGfAhKf@xE~@xIbAnJfBnPb@bEPdBH~@JrAF`ADx@FvADrABfAB~A@`A?vBA|BCvAGfBMvCQnCGn@SrBW`CaA~HWrB[nCUhBw@~GUtAWnBQ`Ba@rDcAxIy@~Gy@bHK|@Il@c@rD[lCKx@Iv@OjAS`Bg@dEc@tDYbCMbBIrAC~@A|@?~@@v@DfAHhAHbALfAV~Ah@xBn@rBZx@nAbDt@lBf@pALZt@lBjBzEx@tBdCrGjB|EfBrEjBvEv@vBbApCr@jBn@lBFRx@|Cf@vB`@|B\\|BXjCPtBLxBHvBDvBHhHDtDDxDL`EJzBDx@Fp@Fh@NhAN|@ZxAPt@Pn@Tr@Xx@Vp@Zt@Zn@j@dAh@`A|@vAHNrA|B~@|A|AlCz@fB`@~@f@vAZdAf@tB^tBXzBNvBD|@DnA@fAHzJDjGB`DHfJBhEBhD@|ABnCFlIFzGBdEFhGBlFB|CBzAFtI@vE?|BApCChBI~EGdCIbCKdCMfCWjEOxB[|DEf@U|B[fEKbAEx@EdAC~@A~BBjADrADr@Bb@Fr@NxALz@`@vBd@pBTv@Vt@r@fBz@dB|@|AbAzAfBfChBnC|@|Ah@jA^`Ah@fBf@vBXfBRvBJxBBpBCbBC|@G`AO|AGh@_@zBOp@W`AUr@Wt@Yr@w@dBu@xAuApCYl@]p@gBnDu@|A]v@Un@s@tBa@`Ba@lBKn@WpBMtAIxAE~AA`A?nA@bADvAF|ALxBR~DDp@XhFXvFP|DJbEDbCBfC@fCCvEE`EG|BO`EKbCWbEOpBWtCUzBYdC[`C[|BgA~H}@lGq@vEObAWhBMz@UrBw@tFk@fEi@xDUvAQvAs@|EQlA{CnT}Er]yClTe@fDy@xFk@|Dk@~Dw@bGs@`Fc@`Dy@|Fu@tFi@vD{@bG_@bCc@dCg@bCk@|BcAvDWx@i@~A{@bCqA`Dw@dByArCwB~DyAnC{ArCaBxC_BzCaAfBcB~CcB~CeCtEaAjB{@~AgArBo@nAk@rA]v@Yx@Yx@q@vBi@tBe@vBa@vB]tBo@hFYzBOlAOfA_@zCe@xDe@vDs@vFu@bG[`CO~@i@rCa@|Ak@nBq@lBu@hBy@fB_AbBeA~AgAzAiBbCmE|FqAfBuCvDcBzB_C~CaC~C_BxBaBxBc@j@cApAcB|Bk@t@Y`@[`@a@j@]h@]j@u@|AYr@Sh@Wz@Qp@_@bBUlAQrA_@~C_@zCu@nG}@zH_A~HSbBe@|DWjB]pBa@pBe@tBiA|Dk@bBQf@]|@c@fA}@lBs@tAw@tAy@pA_AvA{@hAgApAgAhAgAdAaBtAaAt@o@b@g@ZmEfC{CbBmDnBkBdAmDnBsDtBgB`AoCzAaDfB{BnAu@b@aAh@aCrAoAr@eAl@m@\\{@j@_Ar@k@h@_@`@}@dA{@pAc@v@[p@a@~@a@fAu@xBcAzCa@lA[|@eD|JkBxFg@xAcBbFi@~A_@jAcAxCq@rB[`Ak@bBuAbEw@~Bi@`By@bCi@xAWr@s@xBy@hCe@vAUp@Wt@[`AELiAfDOb@_@dAq@dBsA|CmAbC{AnC}@vAeBlCiAvAoAzAiAnA{CzCyCvCwBrBqBnBqCpCyDtDqCnCkBlBa@`@e@f@eBnBcBnBaBrB}@jA{@lA{B~C}A`CyA~B{@zA}@|AaAfB{BnE{@fBEJe@bAm@rAuAdDu@lBoAdDkAjDi@`Be@zA_A|Cg@hBe@bBcCxJeB`H}BtJk@zB}@tDiBtHgBpHeAjEa@nBQ~@O~@[~BK|@I|@OzBMxBWlFWnFYnFWrFStDQpDQjDOnB]hDYnBYfB_@fBo@pCc@~Au@vCw@vCu@vCYfA[lAw@xCg@fBc@hBa@hBMv@Kx@UrBEz@I|B?~@?~@B~@D~@F~@H|@J~@h@~D^fCZ|Bj@dEjApIl@jEf@fEHbALfCFhC?hCEhCMjCWlCE\\OnAa@hC[vA_@xAi@bB_ArCcDxJuFxP{AtEkEvM}K`]cCpHuC|IuAfEaChHi@~AUr@_@bAELYt@M\\uAzEe@jB_@zAY|AY|A_@hCKhAAN]jEUdDItAMfBK~AO`CEl@C\\CZMlCWjEc@tH_@xGeB~ZGfAKhBMjBUdDKfAe@|Cc@tBGXo@|BeAnCy@fBe@x@s@fAcBzBsCbD{AdBiBvBkFjGkGhHOP}BrCSXiAvAkAdB{BnDwAfCsAdCmBbEkAtCaAbCcBbFsB|GyB`ImG`UwB|Hm@vB[hAKf@k@tCWdBM|@Kx@Gv@GfAKlCCpA?l@?~B@v@HvBHnAZdDN`A`AzGb@~CzCvSbEbYjEpYz@fGZtCTpCR~CL|CHpDDlD?xCEzCGpCMzCQlCU`DYjCUhBe@`D_@tBWvAs@fEMr@y@nEc@rCYbCQjCCf@GhBC~CDnC@`@DhAN|BV|BR|A`@|Bd@pBf@jBt@zBtA|D|@jCl@hBj@jBh@|BVtAVnBPvBHhBDrB?hBGnBOdCU~B_@|Bk@pC]hAc@lAq@|Ay@bBeB`Ce@r@mAxAeE|EuGtHsCbDoNhP}CnDiArAsA`B_BvBqArBiAtBaApBeDtHyAfD_ApBiArBaA`BeA|AoA|Aw@x@i@n@y@t@sAjAqA~@mBjAiFdDaF`D_BbAgBbAsChBcC~Am@b@mAz@kClBwBdBiB~AcB|AwAtAqArAc@d@eBhBi@n@o@r@k@r@eAnAoBjCgCjD{DpFuL`Q}GtJeA|A[b@_@h@_@h@qDjFeAzAiBhCeBbCy@rAo@jA_AnBi@tAq@pB_@rA_@dBc@zBYpBQ`BOpBKjBGzCCnFKvKSbYObSEnCGnCCp@E`BQtEOvCK`BCh@ShCSlCIbA]tD}@lIiApJaCfToDt[wBlR}Hjr@WxBIt@UpBOlAIz@y@hHOrAa@vD[hCKx@ALU~ASvAw@zFs@jE_AnFiAxFo@zCa@dBy@jDa@bB[lAq@hCw@tCmAfEgAvD}AzEe@tA}A|EgAfDu@~BKZcB`F}@lCs@zBe@|Ae@fBs@tCg@bCc@`Cg@`Dc@bDcF|`@qFnc@q@lFg@vDe@xCi@`Dq@tDw@zD_AhEgCzKeF`Uo@rCi@bCAFWdAqAtFe@hB[dAi@zAq@vAi@bAm@z@}@jAw@v@o@f@}@n@_Ah@o@Xu@XcBf@{A^SFWFsBl@_AZcAb@u@`@g@\\m@b@g@b@i@f@a@b@g@j@k@v@g@z@q@tAm@vA_@nAQp@Sz@WvAYtBOpAoAbLe@lE[nC}@jI]~CKz@MdAK~@QbBKjAQlBShBs@zG_CjToA`Mw@vH_AvIe@dFUhDQbDm@rOIdBI|BK`C_@tJMhEIdCu@vR[rJc@dLMpCObEI~BEfCGdFCrHCdCCxC?jD?bCEbEAtJGbNC~H?v@C~IGdKKjUC~EEdEAfLIpUKn[IfWAnKAfC?X?f@@nFD~EJ|FHjDNnET|ERtD\\vF`@rFv@rJlCpZ`@fEn@pHTfCd@`F`BnR|AlQf@dGd@nFVvC\\vD\\rD`@pDdArIJz@TbBv@hG|CdV`AfHh@dE`@fDVhCZnDTnCZpEvDpj@jD`h@xAlT^hFXfEZbF^pFVnDTvDTjDN|CJ`DJjDHdDD|BBvDDtIBvIBzMFfQN|h@BnFF`DHlDF|BJpC?DD`AJvBNvCPfCLlBNrBThCVzCPtBr@jIx@jJx@nJr@vIf@tFb@jFv@dJj@dHTdDJtBVvGPbF`@pMLfEFvB?JFlBJbDd@lNJdCL`DJhBLpBRtCNjBRvB\\zDl@rGTvBHz@Fn@Db@ZjDVnCPhBPnBVnCRxBFr@ZfDXvCVvCPzBJvALtBHvAFlAFnAJ~BJdDHbDLhGNxGHfDDjBD~ABpABnALrFDzAFzCJ`EBnADhBDtBF`CDpBHpDDhBFrCJpEHdDFtCFpCDrBHlDFhCH~CDxBDhBDnBDbBDdBDrBDdBD`BDhBHlDBdABlAJrENjGJvCJ~BLhCL|BPfCNjBZzDV`DZzDR`CRdCTlCV`DNnBPpBJtALvAJtAPxBZvDFr@NhBRbCJpALzANjBLxAHdANhBRdCJnARbCNfBNjBRbCNhBRhCFr@RbCNjBRbCJpARfCRbCJbBDdA@jA?nAGtBGbAKfAIr@Ij@SjAWjA_@rAWv@Yr@[t@u@tAc@r@k@v@aAfA_Az@YToA|@uA~@_BhAaAr@w@p@o@n@q@x@e@n@g@v@i@bAa@z@i@tAM`@Ql@St@SbAUpAOdAO|AGhACj@Cz@CnBAt@ApAAbAAhAAbAApAAz@?|@ATApAI~HGlGCjB?N?VEbFCvBCvCG~FChCAfD@hBBfAJ`BJbBRrBb@~Er@~HVlCZnDTfCb@|ER|BHbAT|EFrBBdABzA@z@@`C?pC@fFAnJ?fI@bHDtDLbEXbFV`EZxDjArPjAtQf@pHJrAX`ERfDNjEDvFAnGObF[xF]fE}@zIcA~J}@|IMlBMfDCjE?lBBrB@pAHpCP`Ff@dLv@pQ~Ap^DdALlCd@zKn@rOTxFXfFXtDd@tDr@bE\\`Bd@jBx@nCd@pAh@vAv@dBv@dBjBfDhCtEzK`SzEzI|@~AbAjBFJxDbHpDxG`P|YvCnFTb@~AbDnAzCl@bBZz@Vr@f@bBh@jBR|@v@bDl@tCZhBTrAX|B`@|CFr@Dj@RfCNhCLbCJnFFnNBbHHhDNfEd@nGnA`NvAzOv@|ILxA\\nD`@~EVdEP~CLdDNtEH`EFnD@fI?|@DfOF`KBnCBtE?h@DbLDbJ?XD|JFxQDnK@jEDxJF`N?\\@fDDxJ@jHGjHEtCGvBEhBMzCKnCa@jH_@~Eo@fHy@rJWrC_@|EY~ESbFQvEEhBCfBGjEAnE?dA?hCBxC?`@FlDD|BHfCRxEVdGDbAd@vIj@|KPhDh@~Jd@jITxEb@xId@tIPnENnEL~EF|DBpGAnEAfCChCEfCIhCOnESlEOhCAHQ`CYhEm@nGs@lGWdBs@dF{@jGK~@MdAE^KbAGfBClADbCDdAFbATbBV|AP`AR`AV|@Xz@t@vBf@`Bb@vAn@zBl@|Bh@|BR~@^dC\\dCf@hEr@nGp@lGt@hG`ApIr@lG\\pCTzBJ`AJfAPfC@r@HzCAhCCvAIrBUtD]hEMdBSfCSlCAPQ|B[rE{@xL]xESnC[tDSbCKnAGr@AFWnCUvBSzA[zB_@lCa@hCe@jCkArGg@jCy@nEy@nEy@nEa@hCa@lC]lCYlC[nDE`@IfAW|EMtCKpCI|EAfA?rC?pCAtA?|@?rC?pC?~E?x@?H?hA?\\?tB?rD?bA?`BAbCC~IAtB?tB?v@CxMAxIAhD?jB?nE?tGC`EAtAElEGfGCbCAxBC|BKpIE|DItGAbAYb\\EfEAxAKtHIlICdCCdCGdCGxAAXCh@IrBObE[bGYdEi@bGo@dGcAfKc@pEkAxLu@dIwAfOw@dI_@~Da@dEIv@c@nEw@hIW`Cu@dIi@~EObBEd@MdBGdAGlAGrACl@Cx@CfAAhA?rA?p@?~@BtB@l@@b@Bv@Bj@JvBLzB@PV`Ed@fIh@zIJdBJhBLnBRdDPvBXjCBTHj@RdAT|@Pn@h@|Ap@zAf@`Ab@t@X\\b@l@r@v@`D|CPPzEnEr@p@rAnAx@v@`@^`A|@dSfR~CvCrHdHjIzH~EvENNbAfAj@r@X`@f@r@v@pAr@vA~@`Cn@nBl@bCj@fDZfCTlCPlC^zF\\bGLlCHpCJ`EH`G@dD?p@CvFKjFEbCQjEMnCUfDi@fHg@xEa@fDmAbIe@xCc@~B{@bEy@nDm@hC{@zCoAfEsAfEcAhDwB|GgChIaAxCmAnD}BtHu@dCw@nCk@bCu@hDq@zDo@~C_BbJmA|GWtAiAjG{CfQq@fDw@jDq@fC_AzCy@~BiAfDkAfDe@rA_AnCm@dBYz@k@~Ae@rAIVMZi@zAi@fBSv@Kd@g@hCM|@]bCShBQrBGz@CTEfAEr@Et@?L?PAz@?f@?v@?|@@|@BxAB~@DnAJzAHfALjARbBLbA@DBLJf@Lr@Jh@Px@T`AV`AZhAd@zAt@`CvB~G~BpHnA~D|@rClBhG~BpHrC`JlAzDnA|DX|@|@rCbDhKtDpLDLDL~@xC|@vCn@rBh@jBj@nBv@|Cj@~Bn@pCr@dDt@nDjBdJR~@pAjGtAxGt@rDfAdFrBzJhArFx@`ENp@Jb@FZ^nBf@dCnA~FdAdFl@zCb@lC\\nCV`CP~BJjBHtBFnBBbB?hECfCMxDMnBM`BY~C[jC]zB_@vBw@lDkAbFu@jDw@jDmAbFo@xCc@nBm@hCc@nB{@xDeAtE_@bB_@jBY~AW|BOzBIjC?~B@tABx@D~@LdBTnBRpAd@|Bn@fDr@nDtChObAhFtA`Hp@nDn@lD\\rB^dC`@zCVtBXjCh@tFf@tF\\|FVfFR|FJxFD`CBfC?`FAlCAvAEtDG`DEjBA\\MpDCn@KdCQnEG~AGjAAJE~@SzDU|ESjEEpACb@E|@IjBWtFUvFK|BK~BG~BE|BE|BA|BCxD?vD@zBFrJJnKHvNF|JH`M?`@DdFBfFDtFBxBDfG@hCBjCDrFBpFFnIBrCBzDBpEDbFB|DAdDGvCKjCQdCUxBOnA]bC_@rBw@jDw@fDgA~EiA`FeA|EiA`FgA`Fw@jDgA`F}A|GqB~ImAlFkAlFoBzIeBtHgGpX_b@dkBiEnRi@~BWhAg@zBeAxEaAlEGXc@rBsAbH_AbF_CbMaBvIoBhK_C`MkB~JYzAaAhFs@vDI`@q@lDyAbIoBhK_A|E}AnI_A~EmBbK_A|EaBxIoAxG{@vEgAbGm@`DiA~Fy@jEw@hEgAxFUnAmApGeAtFKl@}AnIk@tCiA`Go@dD_@nB_A`F{@zE[nBg@fD[rBe@lDYrBWtBWpBUpBSpB]jD[fDOpBYhDUhDMnBKpB[|GOlDIvBKzBEfAMxEGlDCpDAvBAlF?vB@vB@nFDpIDbE?\\BjE@lCDtE@lBFvJ@jB?`@@~A?TFvDBrBJpDHfCHlBDfA?HDlANjCJpBPjCVfDHhARhCn@dGFj@NpAR~AFj@b@jDVlBl@xD|@rFpA|H`AbG`@bCnKnp@lLls@v@zE~ApJr@pETtAt@vEd@vCjAdH|AlJpBxLtCnQbCbOnBxLdApG^xBRnAbAdGnBvLzAnJpBvLdCdO|ApJ~AnJzApJfB|L`AhH~@jHh@lE~@~HpAdM`AxJ|@|J~@tLd@fG^pFj@hJf@jJRnEd@tJ@XBn@RvET`HR`HRlJTvLJdHHbHJvL@f@JvKHxG@t@DjEHpIHzGBzBHpGD`FNdMLxMN|OHlGDlDJbJ@pAV`YJlJJrI@r@DlDLzJ@|@@xADtDHnILbMLzMRhRJvIN~MJ~JFjFBpBDdFFrGDlEPfPL|KL|KJjJF~FL|KL|MJtILtKLxMF~FHzGNxOP|RB|AJxILrKNxMN|OL|N@`B?PDtCHnJ@~@BdA@hCHdIJhIBhA@p@LlDBv@DdCNfEPhEN`EPxDNfCPrCb@hG`@bGPvBLtA^dEj@fGH`AbAjKpAdNl@rGpAvNt@zHt@bIfAlLVvC`AbKhCdYvBvTpCvZtBtUd@xE|@hJ|@|JnAvMpAlNbChWlCnYtAnOh@zF`AdKbBzQz@xIn@tFp@rGzA`QbBpQ`BfQnDb`@PjBN|A|@nJpBbTpAhN|Cn\\jBfS^~Dr@tHjB~R~Dvb@n@fHr@nH`BtQf@dF|@pJ~A|Pd@dFFj@`BjQhBvRh@zFLrAf@lFr@vHTfCFh@dAxKt@dI`@jEf@nFbArKvApOnA~MxBtUdC~Wn@zGz@fJJbAVnCp@nHj@hGHv@jAbMb@jELjAN|Ah@dGf@pF~AzP`AfKx@tI`@lE^`EhApLr@vHhAvLrAtN|@hJ~@bK\\tDTdC|@vJh@vFhApLhAvLhBtRfBlRhAvLr@xHr@tHfAdLh@~Fv@hIRxB@H\\rDj@|FbAbM\\tDj@|Ft@hG^pDZrB@FJr@Hh@ZbBZ~A\\bBt@tCz@tCh@fBj@hBl@bBr@bBfAbCdAxBp@zAf@dA\\v@l@tAZp@lAfC`BlDRb@tAxCVl@jCvFFLDHt@~AnArCl@rAt@`BtAxCZp@~@rBdA|Bp@xAt@`B\\t@f@fAb@`Ad@dAb@`AZr@Vj@Zr@Rd@Rd@Rd@Vn@Zx@Pd@N`@Pf@Rl@hAnDnHxVvAzEl@nB^jA`A~CbAlD|@vCn@tBp@bBl@pAh@|@j@~@r@x@nArAr@n@|@|@vAdAtC~BxBhBlBhBp@t@v@bAh@~@f@x@`@~@^~@f@bBd@lBPjARxALfAHrADzA?tAAjACbAKtAGj@CRKfAQdAW~AMh@e@tAm@lBaAtCyBtG_EjMiErM_KxZaBdF]dAo@nBuAfEkTvo@qOff@_AtCy@fCiDfKuBtGa@pA_ArCgA`D{@nCe@`B_@zAKn@QtAK~@YbCC~@EnA@fA@nAFlAHnBh@rJRlD~@bQdAtRNpCNhC|@zPXrENbCXnCZ|B^nBr@tC`@tAf@tAf@nAnAdCzBlD~OlUrUz\\jDbFzK|OxKfPdLnPjT~ZtDnF`E~FhFpHlCxD~FpIlFzH|FlIjC|DdDxE|BrDpA`C~@nBdB|DrArDdBzF|@pDp@~Cz@fFvCxS~CtT~CxTVhB^fCvCpS~AxKr@zEz@|EhA~FvBlJdAdEb@zAj@nB|@vCx@fCPd@JXZv@lBdFpAzC|ArDjCrF|A|CdF~J|FdLtJrRpBxD`O|YhNlX|BvEhDvGjA|B~FjLbQf]~G`Nl@jA|A|CXj@BFTb@jG~LjA|BJRFLfBlDrAjCf@`A|CbGh@fATb@jErIzCdG|A~C`@r@t@rAx@pA~@nA`BbBvBjBdDjClA`At@r@n@n@n@z@l@bAn@xAj@dBd@|BPhAJdBB|@@X@tAExAEp@CTSnBOxAUrBWdCUvBOtAOzA[tC_@nDYnCQfBGf@[xCSlB[tCYjCSlB]dDa@|DOxAIr@SlBc@bEa@|DYlCa@tDUvBYnCW`Ca@|Dq@pGK`AIx@Gf@]fD_@lDSrBMdAE`@Ix@WxCEf@Ev@E~A?pA@p@?TBx@D~@H~@PfBTrAh@bCb@xAj@xAv@~A|@xA|@lAz@~@zA`BlEtE|HlIJJpCxCpHbIvNpOlMdNdDnDhBzBfAfB`AnBx@fB`@`Ab@lA~@|Cr@~Cj@`D^~CTxCPvDDfD?~@ErCOdDW~Ca@fDs@rF}@`HO~AGv@GbAGdBCbA?rA@p@Bt@FpAXrDhAbLt@fHvC~XbBzPtBrSd@nEFb@DX^vBRbATz@Vx@Zx@Xt@h@hAp@pA~ClFnHjMxFxJx@vAnBhDdAnBt@`B`@rAZnA\\pBLvAHpB@zAI~BShBSvAi@vBm@lBgAdDm@lBi@tBa@xBU~BIbC?dCHvBJrATdBRdAVdAX~@Xv@l@tAbAlBjE`IbAhBpF|JpA`CXf@xB|D~AbDf@nAj@hBpAvEz@xCf@vAd@lAj@hAp@jAdBtCz@tAd@~@Rb@LXN`@Nb@Nf@J`@Jd@Jd@DRJh@b@hCTrAHd@Hd@Hd@Hb@FZH^FVNj@J\\L`@L^N`@HRJTJTR`@Tb@PZR\\NTV\\RVVZRTRRRRXVXVh@b@x@p@~@t@|AnA`BpAnDpCvFlEpDrClBxAFDd@`@bBrAZTpCxB`Ax@z@n@v@l@p@h@xAnA`BfB|@hArApBdAnBv@fBbApCbBxEpEnMlFtOnCbIv@nCb@jB`@vBZhBZbCnAxL~@lJjAvKVbCbAxJf@vEd@bDl@fDbAbEfB|FpBvGbAtDl@`Cb@bC^~B\\xCR|BTbEHpEAhEOxEUzD]bDu@~Eg@bCo@jCaBpFqBjGuGjSeAdDeCbIqAfEgAfD_EhMy@jCwArEu@|Bg@fBc@rB_@`CQjBInBC~A?nABvAJtBNzARtANv@TbAHZnAjEhBrGl@|B^jBRnAFl@FzABhBCbAEtAMnASlBShB]xC]lDInAExAArBDfC^xN@jBEvBInBMdBWpCi@dFsA|LOrBAVCbAA`A?rAB`AFrANlBb@pDt@dFZjCJdBHbBDbCAtBEdBMbCS~B]fCe@xBq@xCUx@mAjDWp@yBbGaDzIUn@iBbFsC`IyBjGcBlE]z@Q`@cAxB}AvCaBvCeCdEs@lAoC|E{@|A]j@gBxCw@~A{@bBm@zAs@dBcAxC}@|CaC~HkCxImAzDENy@rCmBrGaDpK{@vCoAbESt@_A`D_@tAIVa@nB[pBKnAIfACdAEnC?LDzBF|@Df@LpAXtBd@rBl@pBXr@Zx@Xj@p@pA|@nAdDtDbEhEbCdCvBxBbCtCrAjB|AhCbBjDhAtC|@jCn@|Bb@nBj@rCp@|EVvBb@hDhBdPxBlQj@jEd@|Bh@~B\\jARp@v@xBbA~BpAfCt@lALPl@|@n@z@n@t@rQnStEhF~BbCtApA`BrAhChBnC~AvC~AlC|AtF~Cn@^nC~AvDtB~@h@l@b@j@`@j@j@h@h@h@r@b@h@`@t@b@x@Xr@Xv@XbAd@nBNbAL`ALzBDfCEhCe@bKg@`LOpDQdEItBi@vLi@|La@lKGzA@nA?~@DbAFjARlBPbB`@hCn@dC`IlWFRr@fCl@lC@Hv@nEVzBRfBf@vFJlAn@`HXbDl@tGb@lEXhCdA~HdAdGhBzIlAbFnApErAhEj@fBjA`DhBvERf@tA|CtBnEhE|IdGfM|CrG`@z@BFv@`BpAjCdCfFtFjLpEhJvBpEt@bBv@xBd@~Al@|Bf@xBf@pCr@|E|@pGh@lDPjAXdBp@hDf@lBj@jBr@rBz@zBt@bBr@rAnAvBv@lAxAlBrB|BtBhBxAhA`ExCxEdDrI`GbD~BnCnBlAdApAhAvAzAfAfAnA|Ax@dAxB|Cv@dAlFpHxOpTxArBzCdEbC`DhCxCjDnDpDbDbFfE`CrBlCzB|HvGrAfA~ClC~BnBnAnAjAvAnA~Ar@lAr@nAZv@h@tAf@zAh@|A\\vAb@jBRrAJn@NfAN~ALvALfDBpB?j@AbAGdDQfCQjBk@|DOhAc@rBq@xCe@vBCN}@|Ei@`Dc@bDa@bD_@`EGv@Gl@Cb@Eb@IpAM|BErBCdCMbI?xEDjE?RB~ABlAJlEFz@X`EXbEJ`AXdCTtBVbBDVJp@j@bDzAdInAxGvFbZd@`CnAxGn@~Dd@rEZ~EHzCBzEGdL?|KAvC?tBGtBGtAGfAOdB[dCIj@Mr@QhA[pAq@xBm@nBwAvE_B|Ek@|BGV_@fBi@hDWvBOvBM|COdGSzIQ`HIhBIdBQdBMjAWtAUnAi@nBgAzCeChHyDtK{AfEk@fBYz@k@dBi@fCc@tCKjAM`CErEArJCnJ@z@C~AIxAO|AM~@UnAc@bB]hAg@lA}@rB}AnDoAtCkIhRSb@KTIPIP_@z@w@fBWj@Sd@IRMZO^M\\Ob@Od@K\\IXK^GVKb@Kf@G\\G\\G^Gb@Kz@[rCm@hGKbAIv@Gh@Gh@Gf@Ij@O|@Ot@Op@Qn@Of@M^O^O^Q`@Wh@}AtCc@t@a@t@Wh@S`@MXSd@KVSj@Qj@St@S~@UjAO|@Mx@Kt@wAhKWhB_CrP_@lCUdBGf@Iv@Eh@Ej@Ep@Ch@AXAd@AfA?v@?p@@f@@^Bl@Bp@@V@R@RBf@Bf@FrAVnFp@rM\\|GHlC@lCCnCKhCOpB]zCaAzF_BlJaAbGYzBObBKvAAREt@Cn@MpCgAlXUzFU|FYrHSzCMfAEd@QhBc@tCYpAa@bBy@~Cc@jAABg@pAgArB{@fBsAbCgB`DgB`DsDtGoC`FoAxByB|Du@tAq@zA{@dCk@rBc@vBa@vCIv@MrAGtAE`CGtDIjCMpBIvA]pCQjA]`BiA`FcAjEy@tDS`AQ~@K|@OvAGdAGhBArBDlBHtAZvCVxAZnAZpATr@\\|@f@fAbAfBf@r@n@v@x@z@l@h@v@l@dAl@jAj@fCfAnChAnAh@l@\\j@Z|@r@`At@fAhAz@jAr@bAp@jAt@xAd@jA\\`Af@fBf@tBZvBVnCN|BXrENdCn@|Jj@nJp@bLVpDHnABv@FlB@rA?pAKfCOdBOxAUrAUtASx@Uz@i@tAg@rAs@pAq@nAmAdBmAbBOT]h@}FzIsChEaClDsB|C]f@gA`ByCjEkBzCc@x@w@nBk@hBQt@WlAQbAKx@ShBCd@A^EdAAjC@lI?|F?T?bH@~M@~N@~S@lI?V@zD?z@?^AbCCbCEnAC`@KtAQhBOpAUrAIj@Qx@YnAu@nC{@`Cw@fBu@vAu@jAm@`A}@hAw@~@qBlB{IvHkBhB_BdBsAbBKLkBbCgB~BuFrHsGxI_EpFeCfDwBtC}DlFgBbC_BvBoBtCqAvBmAzByA|CcAdC]z@Sf@Yz@Up@kArDwFrQqA`EqAxCw@|A]l@Yb@k@z@}@jAi@p@u@t@gA`A}@v@QNKJ_Av@}AtA_BtAiAhAkBrBuAbB[^sCfDwAdBiD~DoCdDa@d@a@d@UVSRg@d@i@b@k@b@{@l@w@h@y@h@aAn@i@\\]R[Pa@Rk@Vq@Va@Le@La@Je@JuDx@g@L]Jg@Ps@Xk@Ve@Tg@Xe@Zk@\\e@Za@Zk@f@i@f@e@b@w@v@y@z@a@b@qAtAq@t@_@l@]f@e@|@EF]v@[p@CFu@rBGP[nAUdA[lBWvBIhAALGnB?l@Av@@dBFbCJzCLpDD~@B|@P`GJ`EJlDB`ADrCCtBIlCA`@Cp@a@rJCf@Cf@m@xN_@jJUbFSbFG|C?PCnB?nB?fCFtC@x@JfCLbCTjD\\nD`AzKd@rFj@zG|@dKvAfPt@fIn@fIX~C^rCj@|Cp@tChArDv@rBt@`BdArBlAnBx@lAfAnArF|FPPjEjE|AbBl@n@VXfBhBjDnDvG|Gf@f@lLxLrM|MtObPvBxBhMtMPPj@l@zJdKrFxFp@p@~KhLlCrC`@b@nErEzE`FFFhBjBrC|CvAzAj@z@|@nA~@|Ar@lAr@zArArCnCzFpBhE\\t@|EhKLXLV`@z@dLfVh@hA`BnDt@~AlCvFrAtC^z@j@bBPr@Px@Lx@LfAD~@B|@?~@CtAKtAGh@G`@Kl@YlAa@nAa@`Ag@z@c@n@k@r@w@r@}@j@eAf@}@X}@P}@HsBHmCDqAFkBRo@J_ATsAd@_A\\u@`@kAp@o@b@y@r@e@`@OP[Zi@j@_@h@w@jAq@jAo@tAGL[x@c@nAa@pAQr@_@lBWdBWzBMvBGnC@jCFzBNtBTtBT|AXfBj@xCZlBF`@r@jEj@jDHd@~@vFV~AbAdGxBtMjAjHtBlMjAbHRdA~AxJ`AxFjBbLt@nExA~IrC~PbB~Jz@`Gh@`F`@pFJ`BLfDN`IJlGd@tY\\rTj@l\\NvJNrIH~DBj@@f@HdDNpCRrCNjBV|BX|B`@vC^~Bf@jCf@`Ct@`DfAxDnAzDdBtE`AzBhA`CvAlCtA~Bb@p@bBhC|ArBdApAfDtDxFxF|AxAxH`IrMtMf^j^~H`IfEhEfFhFrCrC~A`BlAtAz@bAdA~Ar@nAvAvC~@fC|@vCf@`CFZZjB^|CFb@ZjC^rDx@tHxElb@fFld@vEpa@tBvRtAtLlBxPr@fGNjALjA@Jl@nFrAvLvAdMp@`GZrCPvAF|@LtA@PDdAFnB@zBCbCKzCOrDe@jMKlCUdGUzFWhEO~AUzA]fB]vAc@vAm@~AyBdFgCzFoChGkNr[gDtHuCvGmArCiC|FiAfCWh@w@pBg@~AYtAWfBKlAIdC@|AJvBPhBZbB\\pA\\dAZt@\\t@f@z@`ApAtA~AzAfB|@hAp@jAz@fBpAnC`AnBh@t@h@p@v@v@dAfAx@x@~@`ApAzAZ`@pAlB^l@l@lAdApBx@lBzA~C`AvBbBjDxAhCh@bAt@lAv@lAnAfB|AtB|@jAt@~@Z`@X`@`@f@|AvBx@fAZ`@Z^RTZ\\\\\\VTLJRNVP^T`@T`@Tn@\\bB|@fB~@dB|@jB`ApAp@hCrAjB`AdCpAtBfAhAl@v@b@\\R`@VVPXTTRVVXZVZNRPVRZR\\T`@\\p@b@z@Vf@PZNVLRRXNRVZNPPPPPVTVRXRTNPJRJVL^Pn@VvBv@tBv@nAd@`A\\`@LrG~B|CnAb@PlC`AjBv@dBdAd@\\h@f@p@n@z@nAd@p@\\t@Xn@Xz@Z|@d@pBZvBHfAFl@BjA@vBCbACx@KfAIv@Kz@UdAQz@Y|@Wz@Uh@c@z@a@t@m@dAc@b@e@d@gC`C_ExDcCbCsCnCwA`BkCzCcChDmA~AcBxBu@bAs@`Aa@n@k@bAWj@Qd@Yx@a@|AQr@S|@YpASnAM~@I|@GfBAvBFbBJrAZvB^`Bf@|Ar@~Ap@fAz@lAzAlBrBhCh@n@vBnC~BxC`D`EpAbBv@bAvAfBj@z@NTj@hA^bAXfATxAFj@D`@B`@Bz@?d@?n@Et@Ef@AFCb@Il@Q|@Ob@g@bBaB|EsClIyCzIeBfFaFxNaN|`@qIxVc@pAc@nAa@jAUp@a@lAeAxC}@dCUn@_BnEiAfDcAdDo@tBk@bCe@hCQpAWtBQzBIbAMxAM`Ba@lFGt@u@zJiBxVqCz^}B|ZY|Du@~JaEbj@_Cb[_AnMUtCm@`Iu@zJkC~]}@tLeAzNqArPc@dGYzDKzAg@tG}@xJq@|Fg@|De@|Cs@bEe@jCo@`DWnAMf@}A~GeBfHoDzNcE|PeJv_@cE~PcBjHeAnFg@nCm@jDm@|Dc@xCAJ]pCeAjJqCjWqDp\\a@xD}@dIe@zEgBbPkBtPcA~Io@~Fc@zEWhDSrDQpDOlDYnHYvHiAtZa@`KYlHSjGS`Fa@hOQfHUpJY`MMlFIvDMzEQpIGvBYrMEtAMrFYrMMtFIdBKdBKfAQ`BU`BUzA]dBkBlIyDrPsDfPqDhPWdAmBjI[tAyDnPe@vBiBdIa@dBMh@o@fCo@pBe@nA}@lBs@nAeAvA_@f@{A`BeD~Cm@l@qAtAg@n@o@z@y@vAi@bAk@pAk@|Ag@bB[rAYtA]|Ba@tC{@pG{@rGmAnJqA~JeApH_@rCYrAm@|B_@lAUn@Sb@KTYp@}@hBcAvA{@dAo@r@sApAsCjCiK|JyGpGcHzGuElEmCjCoArAi@r@u@fA{@`Bw@`By@|BuAxEy@pCk@`B[`ACFAD]fAgAjE{@xCeAvDqAvDYv@g@dAu@zAk@~@m@bAqAbBqBtBs@l@{@n@oCpBy@l@e@Z_BhAqCfBqBtAiD|BeCfBiD|BiChBaCnBcB`ByA|AkDzDeFdGcGhHiFdGiEfFoC`DiBxBqA`Bk@r@a@r@_@n@Wp@_@z@c@pA]vA]vAWbBWdCK~BAxA?vA@`@@h@NjDPjDL`D?pBCtAGpAU`BYvAc@jBk@~AoA|CwBxEq@~AyAnDc@~@O\\u@pAsApBo@r@}@|@YT[T_Ap@}B|A}DnCcC~Am@b@kAz@oCjBsDjC{BxAuCtB_CtBaAdAo@`A_BjCKPcBvCsBlDwAdCqBhDgAfBmArBgCpEeAlBg@lAs@vB[pAMj@c@pCu@hFk@pCW~@Yx@]x@a@x@s@hA]`@w@x@mAz@_Bz@sBr@oCv@qAb@w@No@Xw@^q@b@m@b@}AvAoAzAmApB}@hBq@pBq@fCo@jDwAbKkAhIoC~Q_ArGm@dDq@pC}@jCaAtB{@xA_ApAcBnBiBdBgDrCoCfCyBjBaCzBmAnAy@bAm@v@iAjBqAdC_A|Bw@bC_ArDe@jC[bCY|CKzBEfC@rFFtEHvJFnH?rEGtCSdEM~BW`Cw@|Eg@fCo@bCkArDuAlDeA|By@xAaA`B{CpEgCnDc@n@}AzBcCpDkAlBw@dBM\\k@`B_AfDqAtEOj@_B`GcBlGoAtEaArCy@dB}@zA{B`Do@~@oAjBeAvA_BhBWXi@h@aAr@uA`AuBnAcBr@sAb@}Ab@uATkBReBJeB@eBEgEUyFWiESiESsACaAAcBFaBPqBd@oA`@}At@wA|@sAfAg@f@mAvAaAvAaAfBy@rBm@lBs@xCi@pCkArGY|Ae@bCsCbOyDjSiBrJeAlFSdAY`BMfAIl@MfAG|@IvAC`@Ch@CvACzBD|BFzBN~BTxBVlB\\tBz@pDbC|I`@~A`AtDjAbEr@jCb@~Af@pCTpBJtBDrB?rBGlAKnBQ~A]xB_@`Bk@fBo@bBw@|AiApB]j@e@z@gAjB}@~AcAbBq@lAo@hAy@vAGHaAdB}@|A_A`Bw@lA_AtAu@`Ao@x@_BpBc@j@c@l@a@l@_@n@_@n@y@dBs@lBm@pBe@rB_@xBWxBS|BQ|BS|BSzBW|Ba@vBe@tBm@rBq@nBy@nBoArCy@fBgA`C{@jBg@hAIPQb@Yr@m@lBm@rBe@vB_@xB[`CSpBg@rGi@`H_@bFCVc@xFMzBCbBAV?JAzD?lC?`@?bB?jDEbBCv@WdCUrAa@~Aa@jAq@xAi@|@}@lAoAlAk@^m@\\wAl@iBj@kA\\yAb@eAb@y@`@gAn@sAhAgAjAgArAy@vA_ApBs@jBy@bCWt@g@zAM`@{@bCYv@[|@cCjHc@nAmAlDo@jBY~@_@vAUdA[|BK|AEdA?vABfAH`B^rC`@hBn@jB|@rBh@hApDzHrCbG`ErIjB~Dr@bBh@`Bh@lBb@rB^pC\\xDHdAr@hJZdEf@fGpCh_@bBrSp@lJt@|In@`Jh@dHj@fHVnD`@hFZpDXpBXvBZbBf@lClBtKdAfGlCvOt@~DN~@`F`YRjAl@fDbHr`@|DzTnAnH`@bCt@jEzAdJx@bFl@zDv@pEb@~Bf@bCd@lB\\lAp@zBt@vBv@nBx@jBh@bAR`@dB~CjAnBv@nA~@`Bx@dBn@jBd@pBXrBPtBFnB?bBGrBQdBUrBc@~Ck@fEk@rDS|Ai@pDOr@WdAo@xBu@`COb@Y|@Un@e@pAwA~DuBpG}A|EuC~IyAnEa@jA}@lCgAbDy@nCa@pA]bAKXc@rAkAjDgAdDcA~Cq@jBy@pB_A`BeAxA_AhAmAnAmAdAoAr@u@`@QFy@^iA\\oAXqB\\_BRgBTuATiAX{Ah@eAh@MHs@j@_@Xe@b@e@f@q@|@}@rAqC`F]l@}D~GoDhGcAbB{@zA}@xA}@tA]`@g@n@c@d@s@p@w@l@e@Xq@^qAj@o@Tq@Pi@J_BTyANq@Fs@DsAL}AL{ALmBNyCXqCT}BR_@DgANwAT_Bb@uAl@mAt@mA~@kAhAcAlA_AxAy@zAu@fBo@dBm@fBaBfEm@`Bm@bBkAxCiB`EEJyCbHsBtE}@pBKRWj@a@~@c@bAcA|Be@bAs@zA[j@MRq@fAw@dAy@`Aa@f@]b@MPa@^i@l@}@jA_A|A}@`B{@~AcA~Aw@dAs@t@{@r@iBjAy@f@qAt@g@XYP{@j@e@ZkA~@kAbAQN_CpBqAhAoBhBy@`Ag@r@_@p@g@fA_@dAYbAS`ASvAIfAEjAAf@?tBF~BHzBFtBLfDBh@L`BPbB^~BPfAv@nE\\fBTlATbAXfAp@jBr@vA`AxART^`@z@|@jAfAlBjBv@z@`@j@h@|@t@`Bd@zAZ`BL|@JrAFbBBjCB~C?xB@pABdHBdIBzIIpDK~AWxB]|CaAtGa@lCWdBIh@YjBy@nF]pBYpAMd@_@jAWv@Wd@i@hAu@lAuDvFMRQXQZ[j@Sb@Wn@M\\Ur@Oh@K^K`@Kb@kA~FGVI\\GTQj@GPKXQf@KXMZQb@Uh@m@tAgC|F_InQc@bAYn@Wl@wB`FUf@Q`@Qb@wA`D}@pBoA~B{@vAoA~AoAnAy@r@_@Z{@l@}@n@a@Vo@`@eBjAg@\\q@d@{@r@i@d@w@~@_@h@i@|@m@pAq@lBe@xBo@bE]fCOlAk@pEYxBUnAIf@_@xBk@rBo@zB[t@e@bAkCjF}CjGqDjHgAzBcC|EcEfIwBbEuBdEyDvHkAnCeAxCaAzDsCdNiChMqAlG}@vDs@`CqAlEcEpMiBvFq@zBOh@m@jBo@lBcGbRwB|G{@jCk@`Bm@nAc@|@{@rAo@v@k@r@e@b@k@f@s@b@}@j@aBx@gCpAwDnB}BlAuAr@y@l@eAt@u@p@cA~@y@~@w@z@yArBmApBmAbCy@pBy@`Cq@zBy@nDuBjKcAjFkA`Gk@fCc@bBu@vBwAdDaDnHsFpMuI~RaBxD}GvOyB`FeFpL{EfLmD`IaBlEsAhEu@vC}@jDEPaCvJUx@u@rC{@nCe@rA[z@sCpHqEfL}B~FiFxMeBlEq@vBk@rCSpAO|AObCEz@AxCBpE@vC?\\DlF@vBArD@`CA|@GfAIz@OhASpAUdAYjASl@Wp@k@pAg@dAg@v@{@hAcAdA[VIFuBbBKHm@d@SNm@h@[Zk@r@c@r@c@x@g@nA[`Ae@`BsA|EMf@a@rAWx@[v@q@zAWf@QZ[h@a@l@]b@[\\[\\YXu@j@UPi@b@QJ}@l@a@X]V_An@cCdBaDxBMHiAx@yAlAgAjA{@~@GHKNKL]h@o@`A}BzDyAhCa@v@Wb@U`@aBvCoAzBqBrDwD|GyEnIcD`GkCtEgBbDgAlBqAhBm@t@oApAo@j@WRk@f@u@n@yAdA_Ar@aCbBqBzAgAv@mA~@eAr@a@Zm@d@q@j@g@`@k@j@e@f@g@l@qA~A_A`Bi@fA[x@o@bB_@pAU|@UbAWbBUlBSvBQnCStCSjB[`CWxA]`B]zAa@pAi@xA_@dAs@vAiAzBaApAy@hA]`@w@x@{@|@o@h@q@h@gAr@}@l@s@^eAl@iAn@uAv@k@^}A`AwBlAkAp@qBjAq@b@gAp@_Bz@{A~@}@f@oAp@}@^_Bf@s@L{@L{AJaADuAB_A@_HHoCByA@[?iAFu@H{APs@Ny@VcA^c@Ro@\\q@^k@d@q@j@s@t@m@p@}@rA[b@m@hAi@|A_@jAa@|AYfAWvA[`BWjBeAzGqEnYw@xE}@pFu@bF[lBu@xEmBbMcAvGk@~C_@dB[hAm@bBo@rAe@x@e@r@i@v@m@p@c@d@o@j@}AfAy@d@SLk@Te@Pq@PSD[Fs@Jq@BmBLgADeCJuBHiENmHVaBF{J\\yMd@wK`@gGPqOj@qCJ}ENuERiJZaF\\iBNsANmBZkAPuCf@cIjAgG|@yCb@{Et@oFz@iFr@yInAsDn@oCl@gAXeA\\oAd@y@^aB|@oAr@}@n@[Tc@\\k@d@i@d@UR]Zw@t@WVgEbEoBjBURSPOLWRUPQLOJGD_@TYNWLQHUJSHUHWHSFUFWFSDUD[D_@DYBO@W@c@@W?w@AYAg@C]Ci@GuC]uBYqAOq@Cs@Cu@@o@@w@F{AVaBb@o@Ts@XgAl@kAz@eAt@kBtAaAt@qHnF_CdBgGnEoHlFsJfHkE`Di@`@mDnCmBvAwAbA}AjAaBjA}@n@k@b@a@XmBtAwAfAoAz@k@^m@^sAt@qAl@e@PmBr@kCr@eB\\}@LcALy@H{AJ}@B{ABu@?qBEm@CmAK}@Gs@K{AU{A[oA]aAYo@WwAm@uAq@uAw@mAy@aBkA{B}AuEeDcCgBeGgEqA}@_B_AoAm@gAe@mAc@eBm@c@O{@[mDmAcCy@mAc@mAe@{BkA_BaAkA{@gDgCaGkEeDeC_BkAwAeAyAeAm@c@oAs@}As@s@WaBa@_BWu@GmBI_DC_AA}EEiBCuCC}DEcCCoEEqBCiAAuAA}@Ao@Ai@Cm@CkBOy@Mc@Ik@Ks@Q}Ae@{Am@o@[kBeAcAm@cAm@gBcA_DiBWO_@Q]Oc@Si@Qo@Qw@Ok@Go@Ei@Cw@?s@Bw@Fs@Ji@Jo@Pq@Ve@Ro@\\q@b@m@b@c@`@i@h@qAzAiAtAqErFcBpByAfBaFfGc@h@_@b@_F`Go@v@{@bAiAtA}@dAwAdB}AjBoAtAqAvAsArA}@|@mAfAmAhA]\\WXqBhBwBnByJbJyBtBiApAu@bASXa@p@_AfBm@xA]~@uB`GwBdGaAnC}@fCyD|KeCdH_CxGwClIoFpOkAdDm@hBW~@c@bBYzA]rBg@dEIr@Iv@Gb@YhCi@bFc@rD_@|BYvAWfAUz@m@lBWr@_A~BoAnCcA`C_ChFeDpHIP{@lBoD`Im@rAkAhCoAvCmAjCm@nAo@hAw@fA_@f@e@d@q@n@cAr@kAt@sCxAeCpAc@Rm@ZiNfHaDbBqAx@u@l@mAhAmAtAwCjDuBdCwBdC_A`Aa@^_BlAq@b@m@ZkAj@gBx@sD`BiAf@gAf@}Az@g@\\kA~@a@^s@r@Y\\cApAcBfCkAbBkAhBa@l@cElGcEhGeCvDcB`Cc@j@Y\\Y\\QRYZYX[Zc@`@g@`@m@f@QL_@Ve@XSLYPk@\\g@X[PYNc@TkB~@IDyAt@_Bx@}@d@qDhBwBhAu@^wBfAmFnC_Bx@sBbAcAb@i@TcBh@oAX{ARy@JyAHiADgADoFNcCF{DLuELsFPeBH}ALgC^aARiAXyAb@cA^_CbAuAr@}BxAcBhAgAr@_An@wA~@aFfDoCjBoBpAwBtAkAt@qAp@qAn@yAl@iCbAqCbA}DzAmRjHsBv@e@PuTjIkAb@oDpAsDxAy@Xs@XiDrA_Br@iAj@kCjAwEzBaEpBgFfC{FpC_CjAsAt@oAz@kAbAgAhA}@bAm@z@c@r@o@lAy@hBiAlCmDpIqCtGc@fAu@`By@zA}@pAa@j@c@d@gAlAkAz@yA|@wAt@kAb@kAb@s@TkFfBqGxBi@PkBn@{@ZqEzAyE~AYJYJaCx@oAb@{Af@kA`@}Bt@uAn@mAr@sA`Ay@r@cA|@}ArAuDdDqAdAy@n@{A~@gAh@y@`@q@RqA`@wAVyALeCFuDFi@@sDJwADo@ByANwAVk@Pm@Ri@Tm@Xi@Xg@\\e@^e@^gAjAc@f@a@f@_@j@{@|Ae@`AOb@s@dBqAbDUj@cCbGkBpEgBnEgClGu@dB{@`B_@l@a@l@c@h@e@h@g@b@gCnBq@f@{@p@qAdAi@h@a@b@STQV_@h@]n@[p@Yr@Ut@W|@Qt@Mx@Mz@I~@G~@E~@ClAArBI~FAbAAlAAj@AhAAp@CjAGdBI|@UpB_@~Bc@|BKf@]hBc@zBGVi@hCs@lDa@tBUhA_@nAk@vAk@hAa@j@[d@a@d@]\\]Zc@Zo@`@oAl@kA\\}A`@m@PcAVeBh@eCp@m@L_Ch@u@N}@Ru@Hw@DwA@}A?q@AgAAS?cA?Q?wCA]@eADsCXyDb@uAPw@JSDcALcBPwC^gD`@oANsAReANqALOBe@FaALaALc@Dq@Jy@Le@FaEh@o@FgALwCXi@Di@De@DaBHgBLoCNmBJiAJq@Hc@Fa@F]Hk@Ne@Pu@XWJq@^e@V}@r@mAfA{@bAm@x@i@|@i@bAcAbCw@bC}CnKuCdKqAtEqApEeAtDs@rCa@tB]vBSjBMtAMnBKfCE`COtGGlCKpDKpBYzC[pBYlA_@nAw@vBu@zAm@bAu@dAaAfAiAbAgAt@qAr@cAd@cCdAkDxA_FrBeCfAwBbAsAv@qAz@mA~@mAbAsFzEgAx@gD|BsCdBsC~A{CbBcBfA{BhBcA`AaAfA_ApAyA`Cy@~Ay@hBuA|C}@pBw@lB{@lBgBvDUb@OVe@t@y@fA_AlAY\\k@j@{HrHuHlH{HrHiPxOsDlDiCfC{AbBsA`B}@rAcA`By@vAcAvBm@xAo@`Ba@jAc@xAa@|Ac@jBUhAUlAg@dCgA|FsClOa@pBu@vDe@`Ce@hBWv@Sl@_@v@e@dAc@v@[d@aBzBaC|CuD~Em@|@w@pAi@`Au@~Am@`Bc@rAYdA]xAYvASpAOhAMvAKnAGvAExAAbA?jA@hABjBJrDThId@fQFzD?fDC~CEpBK|COpCQ`CQbC_@~CY|BYdBYbBq@hDe@|By@rCgArDe@rAi@zAk@xAgBnEiBxEk@|Aw@lCa@hBUhAKt@U`BO|AIdAIrACzAArA?jBFfEBpB@tAAvAAZCd@OhBOrAYbBS`AYhA_@hAk@vAo@rAsAbCeCjEuAbCq@lAoBhD{B|DwAfCuA`CeAlBoA~Bg@z@e@z@kAtBq@lAU`@e@v@U`@w@vAy@fBc@fA_@dA_@jAk@pBYbAi@lBYfAy@vCW`AkAdE[fAMf@q@bCcB~Fq@~B[~@eBlEmAvCwAzCWj@{@lBoApCmBdEy@lBi@rASj@_@vA_@bBQdAQjAI~@I|@CdAC|@Ar@?bAB`AB~@D~@NrBJbA^rEj@pGj@lGRxBHdANrBHpAB`A@x@?xAC~@Ep@G`AKhAY|Bc@~Bm@dC{@pDkBtHeAfEc@jBk@fCk@bCa@zAe@nBSr@[|@q@~Ae@`Ak@~@o@|@}@bAsAnAy@l@uAv@uAh@cBb@iBZiANoDd@gAL]DeBT_Db@_BTgBTcBX_BZcB`@{A^aBd@iBn@yAf@wAj@{Ap@oAl@sAr@sAp@{@f@QLu@f@k@^c@VuA`AoA`AmA`AeA~@g@d@k@h@iAdAoArAgAlAcAhAeAlA_AdA}@`AiApAyA`BaBjB{BfCw@z@m@p@q@t@gApA{@~@_AfAyAnBy@tAs@xAm@~Ag@bBQr@UbAO~@OlAK|@GjAGlACfB@rBDpBHvBFtBHzBNrDBn@DlANxDLtDF`C@jBEtAEbAKnAUlBMz@Qz@Oj@k@pBs@hBoAtCw@hBSd@_@x@u@dBIPm@tAw@fBu@bBq@zAq@|Ao@hBc@zAe@vBWjBSvBKrBCtB@rBJrBNpBVpB\\~BZxBXpBNbAJr@XtBZrBVtBPtBHvB@vBEzBCb@GpAOhAOnAYzA]xAa@lAu@hBw@~A_AvA_AnA_AjAeAnA_AlAeArAm@t@UXeAnAcAnAaAlAaAjAy@fAcBpB_AlAcAjAeAxAaAxAk@fAi@z@s@rAo@zAk@~Ag@zAe@dBc@dBe@|BUxAYlBQfBMjBKnBGjBCnBAhB?pB?rBAhDChG?vF?|PCfW?vB?`@AfAAt@AZCp@Cf@Cd@C^Gr@Gl@In@Il@Ih@EVKl@Mp@_AxE{@hEgB~IYtAy@fEQz@Mp@G^G\\QvAMnAGr@KrAGz@c@bIK~AKxASpDSdDQfCWtD_@vFIvAKvAKhAOxAQxAOfAUpAO|@Oz@WnAMj@On@Sx@Ux@Sp@Ur@Ux@Wt@a@hA_@dAiA~CcArCaBtEm@bBsArDm@fBqC~H[bAGPg@vA_BnEgAtCo@xAm@nA]n@Wb@o@bAY^{@lAe@j@g@j@q@r@c@^[XkA`AmAz@g@ZcAh@iAj@i@ToAh@mBx@qL`F_JvDgGnCkBx@y@\\wAl@iAd@SHSH}JhEkGjC{CnA{B`AMD_Bt@qAl@o@ZyC`B{@f@aAj@wBrAs@b@ID{A`AaBbA}BxAwCnBwAz@aBdAoCfBkDxBsGdEWNaF~CoHvEsLrHuIrFsQdLcOnJyBtAsGbEcBhAkD~BmDlCgCtBaCvBgDbDqArAuB|BwBdCuAfBkA|AwBtCwFzHeGfImEdG}CdEqAjB_AxAo@fAg@|@{@`Bs@vAu@`Bc@dAi@nAk@zAe@rA_BdF_A|C{BpHELq@xB}@rCQj@K\\qDrLgAnD{A~EwCrJiAtDq@xBY~@{A`FuB|GmA~Ds@zBq@vBc@lAk@tAq@vAcAnBkAlBiA`BuAdBaAfAoAtAaAdAyA|AyA~AoAtAqAvAwAbBmAvAmA|AcAtAy@lAy@lA_CxDqAxB{@~AsAjCs@zA_AtB}@tBw@nBq@fBo@hBm@hBq@tBg@`Bi@jBc@`Bw@`De@pBk@jCg@jCc@dC_@`Ce@~Ce@lDi@dEk@dE]bCs@lFgE|[]bC[tBQ`Aa@rB_@dBYjAg@nBIV[hA]fAc@rAYv@Ob@s@hBm@xAwAzC_AlBkA`Cq@tAk@hAQ^g@dAeAnBYp@_@x@{@dBsAlCu@|A}@jBs@vAk@jAs@vAeAvBkA`C_AjBmBzDeCdFiBtDoB~Dy@`Bq@tAy@bB_AlBkA`C_BbDm@jA_AlBYj@c@~@e@bAWj@Wj@[v@g@pAk@|Ai@|Ag@~Am@vBc@dB[tAc@rBYxAWzASlAc@pC[rB]tBiAjH_@bCWzAWxAS`AYhAW|@_@dA]x@k@jAYh@[f@e@p@o@v@aA`As@f@kAx@u@h@gAv@gAv@iBnAcAr@iAt@yCrBgGdEuDfCuDhCaJjGyE`DuFxDgAt@gCdByAbAcD|B}BzA{@h@w@b@y@b@cA`@eA^cBb@}@PYDw@J}@HgBJgBJqH`@uCNg@BoAFcETuCPaAHi@Fo@Jo@Nq@R}@^a@Ts@b@c@Zi@d@g@d@e@j@]d@EFW^ILYf@KRYj@e@fAWv@U|@U|@Kl@Mr@UzAM~@M|@SrAS~AaAdHs@bFoAzI}@vGu@pFi@vDm@bEg@hDcApHwAfKgAxH{@fGiAhIuA|J_BbLs@|EIf@Mr@a@pB[xAa@bBi@nBm@vB{AhFaAhDe@`B]hAe@bB_@pAiBlGyAhF_BvFoB|GqAnE_AdDkA~Do@xBo@xBW~@Qp@Qr@WjAKf@If@Kr@M`ASjB_@nDe@hEa@rDSxAW`B[|AOr@_@xA_@tAq@xBe@pAs@hBo@xAy@~AyAfCcAvAaBtBmChDkCfDcC|C{@jAcAtAq@fAo@fAy@~As@xA]x@g@nAe@pA]hA_@tA[hAmAvEcCdJsCvKaC~IeDdMcBrGkApEUz@k@xBOj@c@`BQn@Uz@K\\w@zCk@rBu@nCa@`B[jAU~@Qj@Qj@GRy@~BQh@_AfCgArCUj@a@fACHIPKTe@hAa@bAsAdD_@~@Wn@Yp@KTm@zAIRk@tAYr@Sh@wArDm@xAi@rAkAvCw@nBm@xAg@nASh@MZYx@]hAQn@On@Kd@Q|@Ij@ETQpAK`AQrBObBM~AM|AKpAMzAIv@YnDObBKbAKr@O|@Q|@U~@Ux@CFYx@a@bA]t@[j@a@p@]f@eApAeAdAuAlAsAjAqBdBm@h@{ArAEDaBvAoBdBcAz@{ArAmBbBk@h@w@v@e@h@_@b@_@h@[d@Yd@k@dA[n@Wj@Wl@Sh@Qd@Sp@Qp@S|@YxAQ`A]bC_@lCa@rCi@xDStAMz@YzAWnAa@~Aa@vAg@~A_@dAc@fAk@vAi@nAm@zAy@nBw@jBmAvCo@bBk@|A_@lAUx@U`AQv@Mp@UnASzAOpAOlBCZInAGtACd@EdACh@G~AE|@ALElAGxAAPATKdBANGj@Gh@CTGh@]|BG^Mp@[zA]vA[jAc@rA_@fA[v@]x@eAxBy@hB{@hBeAvBq@vAKTuAvC{A`DkBxDy@`Bo@pAg@dAi@jAm@rAu@~AqAnCcAvBu@~Aw@`Bu@zAu@tAgAlBy@tAy@nAaAvA_AnA_AnA}@hAqAzAqAtAsArAqAlAoAhAwAlAyAhAsA~@gAt@kAr@qAt@yAx@qAp@gAf@kAf@_Bn@_Bj@{@X{@X}@VoBh@oBb@mBb@sFdAsE`AgEz@w@Nw@PqBb@iIbBeFdAaBZ{A\\y@PyA`@wAf@o@Xu@Vw@\\eAf@oAn@m@\\_Al@kAt@sAfAgA|@kAjAw@v@aAjAuAfBkA`B}@zAaA~AaAbB_CdEkAlBoA|BgAjBo@hAqBlDcDvF_C`EaChEaCbE_DpFeDzFcCdEwBzDcCdEiApBaCdE{D|G{ChF_CbE_DrFyAhCqC|EyAdC}@zA}@`B_@p@]r@]t@]z@[t@Yv@[`AWv@W`Aa@bBUbAQbA[nBY`CGb@UrBsAfLkAvKcAtIe@bEm@`F_@fDIt@In@_ApIaCxScA~I{@tHw@zGeAdJOfAU`BWdBU`Bc@`Cc@dC]jB]hBg@~Bi@xBo@hCiBjHcBbGuB~HmDxM_CpIMb@_AnDyBjI_BdGw@tCgBxGoChKoBjHuB|HUx@mBfH[lAiAjE[pA[pAk@xBKb@w@vCc@fBU|@y@zC_AzDe@xBe@|BQv@Mr@e@lCa@`CKn@QhAi@|D_@zCc@tDc@~Da@dEe@fEa@tDUpB]hDUnBe@|DWvBYbCUfBCNM`AyAbM_B~MaA~Hc@pC_@rB]fBk@fCe@lBk@lBc@zAc@vAq@hB}@|Be@hAk@lAoAdCu@pA_@r@kApB}@tAMPiDlFqApBeCxDeAbBaBrC}@fBu@|Ay@fBkAzCy@`Cm@jBq@`Ck@xBg@|Bg@bCa@~BaD~RyBzM}BpNgFt[a@dCWxAe@rC_@~Bo@|Ds@jEsAjIcAfGsArHgAdFaAdEo@`Ci@lBWz@m@nBq@xB_@hAk@fBOb@c@tAs@xBaBhE{AnDgB|DsBbEoD~GcEtHgL`TiEbIcB`Ds@pAuFfKyB`EgFpJgCbFoApCuBpFmAvDm@|BWfASr@i@|BWxAg@lCWdB[xBYjCc@pE}AfPGr@a@fEWjCEb@Ix@mCtX}Evg@k@zFgKpfAe@zE}@vIm@xGo@vGw@nHk@`E_@pC{@lEg@zBs@rC}@~C]~@q@lBuApDqAtC_AjBgBzCSZ_CtDkAdBe@p@_FjHuB~CyAxBm@z@_@p@]j@KPg@z@cMdRaCpDuItMkVz^{KbP{@nAq@`AaFjIuG|JqBzCkCbEe@v@{A`CcB~CcCvE{BvEaCvFuEvKgKlV}ClHyLlY}H|Q_BpDwCdGkBjDkAvBmB|C_CnD_B~BaCbDoB`CyClDuA|AaB`ByCtCqBfBwDbDqDpCkDjC}C`CiEdDsAbA}@p@}@r@uB~AkEfDiInGgRxNyd@`^kF`EoOnLqEjDyAjAgAx@EBuB`B}CbCyEpDi@b@s@j@kCxBgCzBgCbCsArA{A`BmB|BkC`D_DdEgA~Ak@v@kAfBoBbDkEbHaCzD_AzAuCvE}BvD{EzHoEnHkBxCeB|Cu@zAgAzBCF}AjDaBrDk@vAO^}@zBoBtFw@zBs@|BkA~DmAdEoAfEq@`CeAhDwCzJwAvEi@~Ae@|AeAvD}DdNiB`GcChIyCfKeAnDgCxIyE|NoBxF}AvD}ChHgD|GeAnBiB|CkB`DiAdBoAjBkBhCyB`DcAnAw@~@}BlCaGvGuFdGiBpBeDpDwInJuLtMmOvPYZuHjIeVtWoKhLoW`Y{FlGcFxFaBfBuAzAqAvAqAvA_A`AUVqAzAsAxA_AbAaAdAkApAu@z@uAzAuAzAaAhA{@fAoAbB_AvAq@bAkAhB}@`BkAxB}@lBcAxByApDy@zBsAzDmCpH{ArD}AhDcB`DeBbDoAtBw@rAk@~@GJcBpCy@rAo@dAKRy@tAs@jAsCxEqCtEmB`DuDjGsCvEsDhGwB`DkBpCqA`BwBlCyBnCqA~AiBlByB~B{BtBmC~BwD~CwDtCuHtF}AhAoF~DcIbG_D~ByCzBm@b@oEdDiBtAaFpDoHrFu@h@mCrBoDlCu@f@aBnAgB~@k@Z}A`Ao@^a@Pa@H]@[GYQSWM[I_@A_@@s@Bg@\\sALc@\\gARm@XeARy@j@aCXqAFU`@s@`@a@XOd@MRCV@VHTHVVLLFNRj@Fb@Fd@D|@JtBDr@HbBThB@TD~@P`FDz@JjCHlBRdFDjAr@~PXvHTrFh@nMVtGb@pKTxFVnGHhBDdA@`@FvAJfCZzHZbHfAdWd@pMFpC?f@H~CRnIHtIBjD?\\B`LCbGE`LEzJAhDAfBIj\\?t@AvH?pE?DDpCDrCDpADfCRtIJvDlArb@t@jXHtCtAhf@v@rXp@|Uz@tZHfC`@hOp@zURnJJ|E@bE?|@@hDExQ@rS?`@?TAfA?~@?j^?|\\FvDFtCLxDLxCPtDV|Db@dGj@bGBRFr@t@hGv@xFbAjGjC~Nb@bCt@dE\\nBVvABNv@nFTdBHr@^nENbCH~AJjBDpBDtC@r@?h@?N@fEFfVDdN?bAHzZPjz@@nDH|N@vFBpL@dE?bA@lGDxM@hH@jB@hF?nBC~DAbAO~ESrD]hEe@hE{@|Fa@xBYnAyB`KsE|S_DvNeB`ISdA_@vB]xB]fCc@`Dq@tFYlCU|BQjBa@xFWxDYxFWrHIbEG`H?z@AhB?nB?hB?`DArGAhJ?hS@fM?v@?lB?zAEbZGlp@I~vBCt`@@~DJjHPrFBj@~@zUbAxXDbAHtBJjDBnABnBBjC@nB@zD?t@EtGS|J?FUxGObEGxAIpCMhDIjCOhEIpCi@zO[rKIlGCjGBfMDjN?|@@fI@lBBxE@jC?lBFhSDtOB`FDtZ?^?xDDfPDpMHxV@fE@jHBbEBpFDtIFfY@lF@vCBtK@dKIxJGzDIxBWjHMjD_@bJK~BE|BMzFCzBExBAxD@zBD~DNzPDnEHrJLxKHbJL|KFfH@vJA~BIbGIbEI|BO|DIjBMjCq@|M_AjQIdBEl@C^u@jOCf@U`EO~BW|BMbAc@|BUbAQv@g@xBc@tBg@pBgAzEgAzEyAxGQv@]pBUpBKv@OrBKtBCxB@xBB~@D|@PzBJnADf@TrBF`@NjAJx@d@tEPnCJnCDxB?T@pCC~CE~ACb@m@jJ[xE[`GOfCItAWtDEj@ARQlDOfGOfFGpDAvCAfDE|IOnSAxFCnDE|DInNApEKvRAfBG`PCfJ?rD@tFL~HPjGZlHv@vLp@|Jd@~G`@~EVdEp@xJv@~KfApOLlCH~D?~DG~JA|C?j@AdEKhSYzn@?DG`M?lHFzEDlELnFLjHHhE`@lT`@lT@v@d@rVf@tYJdIHdHBfA@f@BfABzA\\nRNlI@|@`@nVBtAJdIPpG@V@ZJpCJvFF`CFhEFhC@dA@h@FhDHtEDnCJvEN`JFhC@\\DdBN|B^vDZxBBL^fBPz@l@vBp@tBx@pB`@x@\\p@dAfBdA~AhArA`AfAZ`@bAfAx@~@v@z@dAhAfBlBnBvBxB`C^`@tAxA|BbChCpC`AdAl@p@^`@`@b@nAvATVXZXZTVVTNNTR^Z^XRNb@Z|@n@~@l@jAp@lDrBlBfAdCvA`Ah@r@`@l@^j@^h@^f@^`@Zf@b@f@d@j@h@b@b@`@d@f@l@b@h@h@r@V\\^j@\\h@\\j@`@r@^p@`ApBlBhEpDfIrBtEXl@P\\Vf@Vd@Vb@R\\Zf@b@n@Zb@d@n@X^^b@jEdF|@dAr@x@dDxDpCbDhHnIf@j@^d@Z`@X`@RXV^RZV`@Vb@Xf@Vd@Tb@Td@Th@d@dAh@nAt@pBfCbHJX~B`GtAxDpApDhClHl@bBv@vBn@dBHTHTjB|ErApDjAdDtBvFlCnHvAxD~AjEhBbFzBhGtArDhA|C`@dAr@nBfAvCx@hCj@nBr@xCTfAVvARvAPrARbBPrBJpAJfAX~CBTVbD\\dD^zE\\nDRrCLrB|@fKRhCBf@Bt@ZpGLrCHvBFpEAbEArE?pCFdCFzARbDRrBRfB^fC`@zBf@pCr@vCZnAZlA~@zDvAfGfBpH|@lERpARrANvAHfANlC@n@@|@BzAAdBCbBAj@CXMvAOvBUxBe@hDQlAEf@Q|AOvBKzBg@fPUzDKpACXMzAMxAM|Ak@hGOlBEz@EjA?h@Az@AvABzA@vABhBDpBB~@DzBHrBFfDDvCBvA?pACv@ATA`AAp@C`@IlAIx@Gr@UtBe@dDo@vE_@~CQhBK|ACdACvAEfC?bD?hCBzI?jBBv@Dt@HlBJjBLnALhAHp@Lz@Hh@Jj@`@tBXvAJ`@bAnIBd@Fx@FdA@bA?r@Ej@Gj@Kp@Qp@O^Qb@[p@]b@a@d@u@j@aAr@WJSHMDODKBMBMBOBSBK@O@Q@[@[?[A]?g@@kAEqBCYA{A@gDBo@?K?k@?oF@}A@gD@]?c@?g@?qAAcKwAeEC_C@eBE{CIwCCoBKcBK_G[_@jAOd@Sr@Sl@Wz@CFGPOd@Qj@Qf@Wx@Sn@Ut@Ut@IXu@|BSd@Uv@Qh@Of@YdAWv@ADm@jBGR[bAUr@Qf@Of@ITGTY|@]fAm@lB]fA[~@_@jAOb@m@hBWz@Qj@KZ",
          "vehicle": {
            "type": "2AxlesAuto"
          }
        }
      },
      "Example-4687c6d2-d10a-4624-b729-1fb91ef2ac94": {
        "value": {
          "status": "OK",
          "summary": {
            "countries": [
              "USA"
            ],
            "currency": "USD",
            "vehicleType": "2AxlesAuto",
            "vehicleDescription": "Car, SUV or Pickup truck without 4 tires on rear axle",
            "units": {
              "currencyUnit": "USD",
              "fuelEfficiencyUnit": "MPG",
              "fuelUnit": "gallon"
            },
            "departure_time": "2024-01-09T11:27:14.200772378Z",
            "departureTime": "2024-01-09T11:27:14.200772378Z",
            "share": {
              "name": "Tollguru Route",
              "prefix": "Tollguru+Route",
              "uuid": "49d10b37-5f30-46c2-a39a-a69453356e13",
              "timestamp": "2024-01-09T11:27:14.200766623Z",
              "client": "polylineAPI"
            }
          },
          "route": {
            "hasTolls": true,
            "distance": {
              "text": "407 mi",
              "metric": "655 km",
              "value": 655325
            },
            "costs": {
              "fuel": 52.31,
              "tag": 42.14,
              "prepaidCard": 42.14,
              "tagAndCash": 42.14,
              "minimumTollCost": 42.14,
              "cash": null,
              "licensePlate": null
            },
            "tolls": [
              {
                "type": "ticketSystem1",
                "tagCost": 40.64,
                "tagPriCost": 40.64,
                "licensePlateCost": 82.53,
                "prepaidCardCost": 40.64,
                "currency": "USD",
                "tagPrimaryNames": [
                  "E-ZPass"
                ],
                "prepaidCardNames": [],
                "tagPrimary": [
                  "E-ZPass"
                ],
                "tagSecondary": [],
                "licensePlateNames": [
                  "Toll By Plate"
                ],
                "start": {
                  "id": 130004400,
                  "lat": 40.088282,
                  "lng": -75.40304,
                  "name": "326 - Valley Forge",
                  "road": "Pennsylvania Tpke",
                  "state": "PA",
                  "country": "USA",
                  "arrival": {
                    "distance": 30452.64,
                    "time": "2024-01-09T11:27:14Z"
                  },
                  "timestamp_formatted": "2024-01-09T11:27:14Z",
                  "timestamp_localized": "2024-01-09T06:27:14-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -75.40304,
                        40.088282
                      ]
                    }
                  }
                },
                "end": {
                  "id": 130000000,
                  "lat": 40.654895,
                  "lng": -80.072658,
                  "name": "30 - Warrendale",
                  "road": "Pennsylvania Tpke",
                  "state": "PA",
                  "country": "USA",
                  "arrival": {
                    "distance": 507684.13,
                    "time": "2024-01-09T11:27:14Z"
                  },
                  "timestamp_formatted": "2024-01-09T11:27:14Z",
                  "timestamp_localized": "2024-01-09T06:27:14-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -80.072658,
                        40.654895
                      ]
                    }
                  }
                },
                "tagRequested": "tagPriCost",
                "tagSecCost": null,
                "cashCost": null,
                "discountCarDetails": null,
                "discountCarType": null,
                "height": null
              },
              {
                "type": "ticketSystem1",
                "tagCost": 1.5,
                "tagPriCost": 1.5,
                "cashCost": 2.25,
                "prepaidCardCost": 1.5,
                "currency": "USD",
                "tagPrimaryNames": [
                  "E-ZPass"
                ],
                "prepaidCardNames": [],
                "tagPrimary": [
                  "E-ZPass"
                ],
                "tagSecondary": [],
                "start": {
                  "id": 128006000,
                  "lat": 40.923901,
                  "lng": -80.557105,
                  "name": "239 - Eastgate",
                  "road": "Ohio Tpke",
                  "state": "OH",
                  "country": "USA",
                  "arrival": {
                    "distance": 560939.39,
                    "time": "2024-01-09T11:27:14Z"
                  },
                  "timestamp_formatted": "2024-01-09T11:27:14Z",
                  "timestamp_localized": "2024-01-09T06:27:14-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -80.557105,
                        40.923901
                      ]
                    }
                  }
                },
                "end": {
                  "id": 128005400,
                  "lat": 41.112246,
                  "lng": -80.83685,
                  "name": "218 - Niles-Youngstown",
                  "road": "Ohio Tpke",
                  "state": "OH",
                  "country": "USA",
                  "arrival": {
                    "distance": 593720.7,
                    "time": "2024-01-09T11:27:14Z"
                  },
                  "timestamp_formatted": "2024-01-09T11:27:14Z",
                  "timestamp_localized": "2024-01-09T06:27:14-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -80.83685,
                        41.112246
                      ]
                    }
                  }
                },
                "height": 7.5,
                "tagRequested": "tagPriCost",
                "tagSecCost": null,
                "licensePlateCost": null,
                "discountCarDetails": null,
                "discountCarType": null
              }
            ],
            "polyline": ""
          },
          "meta": {
            "userId": "developer@tollguru.com",
            "customerId": "cus_Gxf9jTs5iu6FtA",
            "tx": 1,
            "type": "api",
            "client": "polylineAPI",
            "source": ""
          }
        }
      },
      "Example-335f75ba-077c-4e5d-98b8-f06803f435de": {
        "value": {
          "status": "OK",
          "summary": {
            "countries": [
              "USA"
            ],
            "currency": "USD",
            "vehicleType": "5AxlesTruck",
            "vehicleDescription": "Truck - 5 Axles",
            "fuelPrice": {
              "value": 3.2,
              "currency": "USD",
              "units": "USD/gallon",
              "fuelUnit": "gallon"
            },
            "fuelEfficiency": {
              "city": 23.4,
              "hwy": 30,
              "units": "mpg",
              "fuelUnit": "gallon"
            },
            "units": {
              "currencyUnit": "USD",
              "fuelEfficiencyUnit": "mpg",
              "fuelUnit": "gallon"
            },
            "departure_time": "2019-12-16T15:45:23Z",
            "departureTime": "2019-12-16T15:45:23Z",
            "share": {
              "name": "Tollguru GPS Tracks",
              "prefix": "Tollguru+GPS+Tracks",
              "uuid": "95a3c988-3ab8-4ff2-81cc-50fadd75132f",
              "timestamp": "2024-01-09T13:21:40.56813543Z",
              "client": "GPSTracksAPI"
            }
          },
          "route": {
            "hasTolls": false,
            "distance": {
              "text": "0 mi",
              "metric": "0 km",
              "value": 145
            },
            "costs": {
              "fuel": 0.01,
              "tag": null,
              "cash": null,
              "licensePlate": null,
              "prepaidCard": null,
              "tagAndCash": null,
              "minimumTollCost": null
            },
            "tolls": [],
            "polyline": "}qmlFjccuMjB?N????V?fA?????nA??"
          },
          "meta": {
            "userId": "developer@tollguru.com",
            "customerId": "cus_Gxf9jTs5iu6FtA",
            "tx": 2,
            "type": "api",
            "client": "api",
            "source": "osrm"
          }
        }
      },
      "Example-e9bca44f-8a22-41f0-896a-7a41b8b89a65": {
        "value": {
          "mapProvider": "osm",
          "polyline": "i_srFditiMp@L^FRDPBD@x@N@?\\F\\F\\FLBRDpATbAPhAR??PT?@@?dAXVHTF?@TF\\Lp@XDBVNFF@@JHHH@BBBFF@DHLFLFLBHBFHZ@D@RB^@Z@NAP?P?JAHARAZEd@E|@@b@?BGhAANQlCEp@?DIlA?BMvBAD?FGfAIzA?DCf@Gt@?BQjCAXAZCXAN?NAJ?JAP@N?HBj@B\\DRFZBNDNDNFLDLFNFJFLBBBFHJ@BDDHHFFHFHDFD@?JBDBB?@@H@J@F?D@HAH?F?FAHABABADADCBADC@?DCFEHIHGDIFIFI?AFKDKFUFW?A@O@Q@Y@E@S@a@B_@?A@Y@K@GDg@D_@D_@BOFYDYLkA@GFg@BQ?A?CIg@??Hu@@GFq@Dc@Fs@?K@QB[@[Bs@JuAB[@[@]@ODi@BUB[Fg@Dc@B]BWHu@BY?ABUBW@GB[D[Fq@Hy@LsAJaAJgAHy@LmAHaAFo@`@sDFm@Dc@BQb@yED]Hu@v@iIf@}EB[j@aGFk@D[JmABWD_@?C@EDi@@C?CD[H{@?EBQH{@Fe@LuAFi@JiALsAJ_AJkAh@qFf@cFf@eFFm@d@yEBUFq@Fq@?KDe@Fq@Ds@Fq@\\uDN{AFm@N{ADm@JcAH{@D]Fm@?ADk@N{AFm@D_@@KDa@@KDa@@KBa@Fm@@KBa@BKFm@Hq@NsA@GLuA?C?Ah@cF@GBW?CBY?E@?Bg@HcAHs@@KH{@BWJiAZ}C@QD]JaA@MDi@Dc@BQPkBHy@VgCXmCF]Hm@PeADQF]DQLk@FSBMDKH[\\eAFQL[L[JUDKJUR_@R]HOJQPYPUJOJMBC\\c@PQJOHGVYTU^[RQFGDE@ADC?AdAw@@ATQZUz@k@PKJGNKFEBCv@e@\\U^U@?FE^UVOLIXOFC@AHEFC\\Ql@WHEPGNIdD{Af@Sl@U`A]l@W`@O`E_BbA]|@[lAa@v@Wn@Up@QfA_@hA]x@Ux@Wn@Qt@StCu@z@Wn@Qb@Kx@WxA]|A[JCNENCVGl@MFAXGREREh@KVGPEZGNCREVEXENCTELCFATCRE@?j@IPCZERCPCTCFAd@GVE`CUZE\\Eh@EbAMd@Gb@C`BQnDW~@G`@C^E^AZCjAGp@El@E|@Eb@Eh@EhAKf@C\\Ch@Cj@ETCRA@?\\CPA@?TCTATARCNAF?TCRATCTCf@CNCH?RCTANCD?TCRAXCLAXCVCLATAVC@?LANA\\CLAFAJ?NCH?BAJ?HAHAD?JAF?DA@?LAPAPCNATAD?HATA@APAB?VAPABATAx@GPATCRA@?LAPAFARATATCL???NAPAR?VA@?V?N@L@XBj@@F?h@BN?j@Bj@Dh@@l@B@?h@BnB?NARAF?JALANAFATETEt@OXINEPEh@O@?fA]`@MTG|@UTGTGh@GjAMHAbAOpBWx@Kn@KVEx@OdAOTEb@Iz@QHCXEFAFCXEdB]REh@ONEZGh@O`LqC^If@MbBa@@?h@MzA_@~Ac@NEJC^Kn@OVIrA[@A`@I^Kl@OXGjAYHCh@MVGJCx@SjBc@tA[lAYXGPEnCk@VGVGRETGh@MLEfBYz@Wl@OdAY|A_@\\IVE`Ck@TGpBc@j@MbBa@`B_@vBg@pA]bBa@XGNErCq@LCXIlBe@rCq@f@OhDw@~Bk@v@SLC|@UZIp@OxCo@vFsA^I^In@OXGt@Sl@OLE^KB?d@QzBu@DAn@Ul@S`@QPEf@UTITK~@c@l@Y|@c@RKvAu@n@]d@YXQPKVO\\UvAaAHGTQFEVQx@m@b@]fAy@x@q@f@c@|@y@fAgAxAyA^a@LMJMFGLO`@e@TWNSb@i@LO\\c@DEv@gAT[RYl@{@\\g@@ANSNSNSLSf@q@JQLO`AuAv@kA`@i@LS`@k@z@mANUNSZg@RWf@w@fAcBn@eAj@aAZk@R]@CXg@Zm@DGFMRa@Zk@`@w@JUHOP]JWJUNYTi@JUvAeD\\y@Rg@@?Pc@Na@HSBEJWRg@Tk@@Cb@eARi@lCuGJYHQPa@Re@HULWJWJWp@{AHQHQl@qAdAwB\\o@Te@LSXk@LUN[p@mAR]P[PY\\m@LSNYLSLSNULSLSBEh@y@R[d@s@f@u@j@y@JM`@k@HMNQJQf@q@Z_@T[HK^e@V]V[NQTYZ]LQ\\_@TY\\_@RWXWHMNQNONQPOPSDE`AcAh@g@v@u@d@e@`@_@TS`@_@dA}@r@k@f@a@PO`Au@t@g@`@[f@]nBuAzBuAbBaAf@Yh@[RKPKdBaAb@Wz@g@|A}@n@_@d@WbCwA|A{@BAXQr@a@ZSXQNGvAy@v@c@HGt@c@PIRM`@Ud@YLIPI?AZQbAk@p@_@`@WFC^U`@U`@Sv@c@`@Ud@UFCf@Wd@U~Au@rAm@`Ac@ZM@?p@WVMb@Ox@[\\Mv@WZM`@Md@O^M@?\\Mz@Wp@Sh@MfA[p@Qn@OREHCpAYPEbASZGr@MXG`AQJA`AQp@Id@Ij@IZEPARCLCv@Ij@Gh@GhAKxAK^Cn@E`@CNAxAIVAxAE~AEd@AbACn@?p@?FAn@?j@?`A?r@?p@@f@?l@?|@?b@?l@?pE?fA?fC?L?n@?t@?B?b@?f@?fB?dA?V?z@?\\?P?L?\\?`A?lA?D?P?^?~@?N?h@?j@?\\?`A?bBAj@?p@?N?H?T?h@?V?R?`A?T?\\?`@?V?R?T?T?T?dB?\\?Z?b@?b@?D?l@?fA?hA???bBKTCLAVERCREHAJATGRETGRGRIRITIRKPIFEJERMPMPMROPMPOJKTSPQPONOb@a@Z[VUNQb@a@r@q@r@q@b@a@JI`@_@b@_@h@a@POPOPMPOPMROPMPMPMRMPOBALIRMPMFEJGPMRKPMh@[t@c@RKf@Yd@W^Sv@c@HCPKRMd@WRKRKVOLIRKPKRKPKRMRMPKRMPKRMPMPOPMLIDCPOPMPOPOPONOPQPOPQNOPQNQNQPQNQNQNSNQNSNQNSLSNSHKDGLSLS\\i@BGHMLULSLUJULULWJULWJSDIDKLWJWHSFMDMJUJWL[f@oA^}@Vo@Rg@P_@Vo@HUJWb@eAJUb@gAFMLYRg@N_@N]JWN]^{@JUL[^y@LYNYN_@Xm@Tg@Zo@JUTc@?ATc@@Cp@sATe@NYJQLWBEFMLUTe@P[NYNWTa@HQVc@FM@AJSNWZi@BEHOVc@R]Xe@LSFMR]l@_Ad@w@b@q@NULS\\i@\\g@NUJQNU^g@l@{@LSX_@R[PWJONS@?\\e@NU`@g@Ze@\\c@RULQFKHINS^e@\\c@TYJK\\c@NSRS^e@PS^c@RUZ]RU\\a@NQFGLM|@cALM\\_@Z]NOb@c@JKLMBCNOf@g@f@g@Z[d@e@j@i@RSPQNORQRSZYRUPOPQNOPQPONQPOb@a@NQPOPQNOFGZ[vBuB\\]VSPSNOb@a@\\]RSLKBE^]VUp@q@`@a@PQPQPONOPQPQ\\[fBeBx@w@PQxAwA`AaA`@a@n@q@fAgAr@s@p@s@b@e@X[|@_ARSv@{@HIpAoAj@m@XYjDgDt@u@\\[@AFGHI@ATSpAoAr@q@b@a@POr@o@XW@ArCgChC_C|AyAPOPQTUFGFGLKr@s@dAcAf@g@NMdBcBNOPQfBeB`@a@nHgHhEeEhAgAVW|@{@vBuBFEHIPQ`@a@lBiBxA{ALOt@u@j@o@LOPQ\\_@x@_Al@s@\\a@X]x@aA^e@p@y@\\e@NSNQ~@oAp@}@\\e@l@}@\\c@fAaBLSb@o@LSj@}@b@q@Zg@BEFIJSNULUFIDINULSLULSLULULUBCHQLULSLULSBEHQLULSLUtAaCh@aALSLUHO^q@v@uALULULULSFMR]h@aALULSLULUZk@LSLUPYJUXg@j@_ALULUDIFKLULU`BuCLULULUR]HMJUZi@NU@CVg@LWLULUJULWJUJWJULWHU@CTm@JWJWJWHWBIFOHWHWTq@BKDKJYRo@DOX{@Tq@^iAh@_BHY^iATq@HYJWHYHWHYHWHYHWFYPo@@AFWHYFYHYFYLi@Pq@TeAFWF]@ERaAF[F[FYDYF[DULu@D[FY@IPiAD[D[Ju@D[DY@GBSD[Hu@Ju@D[Hu@DYNmADa@DYD[D[D[BYD[D]Ju@D]D[D[DYB[DYJw@DYBYD]D[D[DYBYF]BWD]D[DYDYD[BYD[D[D[D[BYJu@BWJw@DYFe@@QD[D[Ju@BY@GBUJs@D]D[D[Hq@D[D[D[BYF[BYJw@@GBQDY?CDYD[BW@GHo@D[D[DYD[BYD[D]DWD]D[VkBHs@PqANiA@IVmBPoAD[Js@Lw@Jw@Hi@@IJs@Lw@Js@RoALw@Lu@Js@Lu@F[Lu@D[F[DYFYD[FWD]DQ@GDWF[D[F[FYD[FYDWF[F[DWF[FYD[FWFYF]DQ@GDYFYFYF[F[DWH[F[DWF[No@F]BOBIFYF]FWH[DWNu@Lm@@CH]DWFYViAH[FWXkAF]FWHYFYFWPs@Ns@Pq@Ps@H[HYFWZmAJa@Li@FUJ]Po@Ru@Ps@Po@Pq@J[FWJ[ZkARq@HYPo@Rs@JYPo@HYHYf@cBHWL_@Rq@Pm@FUBEH[HWHWHYRq@Rq@h@eBHWRo@Lc@X{@H[r@}BHYTq@Po@J[HWHWHYHWBIFUPi@h@eBHWPm@lDkLNe@V}@Rq@fAmD\\gAHYRo@HYHWJYHWHYJYRm@HYFOBIHWBEFQHWHWJYHWJYHUJWTq@To@Tm@J[HUJWJYJWJY^_A^aA\\}@b@gA~@_C^{@~@yBTg@\\u@\\w@Vk@d@eAZo@lAiCl@mAZm@Te@\\q@p@sAVe@Tc@~@gB~@cBfAmBv@uA~CgFrAwBJQLSNULSLSNSNSLUNSLSNSNUZe@~@sAJONSNSNSl@{@NSPUj@w@NSJMPU`@i@LONSNSNONUPULONQNSNQNQNQPSNSNSNQPQLQPQNSNQNQNQ@ANONQNSLMRSPSNOJOPQRUNO@ANQLOPQNQPQNQPQNQPONQPQNQPQNQHIVYPQNQNOPQPQNQPQ^a@JKDEPQNQPQ^a@PQNQPQNQNOPQNQb@c@NQNQPQNQNOPQb@c@NQPQNQNONQPQNQPQPQNQNOPQPQNQNQ`@a@^a@PQNQbAeAPQNQPQp@u@`AeAPOp@u@PQXYlAoAZ]h@k@LMPQNOPSrAwA`@c@TYz@_At@y@JM`@e@^c@PSNQNQr@w@^a@`@c@NQ`@c@PQnAwANQPONQNQPQNOPQNQPQNOb@e@TULOn@q@r@u@v@y@j@o@POr@w@j@m@`@a@~@cA\\_@PQ^a@`AcAjAoAvAyAn@q@l@o@NQNONQNO`@a@NQrAwA\\_@p@s@~@cA^_@LORQ\\a@PO^c@^a@n@o@^c@^a@p@q@\\a@`@a@n@q@`@c@\\]PSNONOPQPSl@m@NQPONQNO@AJMNOPQNQPQLMNOPSNONO^a@NONOn@s@`AaA`@a@TWXYn@s@\\]LMRU^_@LQTWTWnEuEbAeAlBqB?A`@a@p@u@^_@FGPUZ[LOLMJKHKLMPSRSVYTUl@m@NSNOJM`@a@VWLMVYVWPQNQVWRUFEPSX[NOPQ\\_@VWBETUZ]NOdAiAx@}@POFG\\_@LMTW\\]PQ\\]NQLONOJKPQLMb@e@JKHKRSHIX[RUNONOLMNQZ[TWRSLMHKHIFGBC^_@NONSNMRUPQPQZ]PSLMRSLO\\]Z]RSRS\\_@NOTUPSLOZ[NOLMNONOJMJMHIPOV[Z[TWPOLQPO@APSPQLMNQZ[RUNOPSLMLMf@i@LM@Cj@m@\\_@PO\\_@`@c@NOPSJKNMVY`@c@VYX[JIJKTU~@eAJK`@c@z@}@t@w@\\]TWd@e@BE`@c@HGTW\\]JKTWPSPQj@o@JMJKVYV[`@e@JMDEPQ\\e@Z[DI`@c@f@o@HKf@m@BCp@y@`@k@LOJMv@eAJMBC^e@^i@JO\\e@PWTYXa@b@m@l@{@h@u@h@y@BCv@kAj@}@T[Zg@PW^m@v@qAtA}Bd@w@d@u@d@u@d@w@j@aAVa@`AaBR_@HMR[j@}@b@w@DGf@}@PYf@y@BEx@uA@AZg@^q@f@y@f@y@n@gAP[HMZk@\\i@fAmBTa@T]fAkBNWLSTa@DG\\i@\\k@PYXe@l@aAv@iA@Cd@s@d@s@jAcBNQzA}Bl@_A\\i@LSj@_AT_@T]x@wANWf@}@j@}@n@gAt@qAh@}@p@iA^o@j@aAZi@T]Ta@DIh@}@j@aAb@u@Va@LUZg@NWJQ\\m@V_@BI\\i@jAqBZk@JM^o@HOZi@j@aAVa@\\m@\\k@\\m@rA{BdAeBBG\\k@NWZi@Xg@p@eAX_@NWb@o@fAaBR[Ze@z@sAh@w@j@_Ap@cAh@y@PWJOLULSBER[FIz@uA\\i@h@}@\\k@\\k@b@u@`@q@P[Va@Ze@NUNWx@uAj@_AZk@\\i@\\k@@AVe@^o@JOR]x@sA\\k@Xe@\\k@\\k@Zg@^m@Vc@BEj@_A?A^o@JQT]T_@Zi@NUZi@\\i@DIVc@h@{@f@y@P[^o@t@mAb@u@HMz@wAh@}@j@aAFITa@v@oALWFINUp@iAPYNU\\m@d@u@Zi@BCx@uAr@kAf@y@FMn@eAJQj@aAx@qANYLSZi@f@y@BGdAeBj@_AVc@DIx@sAZi@Zi@HM`@q@p@iAVe@t@oAh@_ADIjAqBDGp@kAJOd@{@r@mADEt@qAP]BCJQR[r@mANWNWDGh@{@R]JOb@q@LULS\\g@|@sAZe@NUHMR[NSLU@?Zg@NULS@ALSZg@NULSNULSLUZg@Zk@h@}@LSXi@b@u@JQlAuBtA_Ch@_AVe@R]Vc@v@sAd@{@FIXg@r@mA@C\\m@xAgCPYpA{BNWR[jFeJpDqGBEFKNYt@uAxFgKDIHOFIDGpAaC|AuCd@y@DGv@yA`ByCz@{A^s@nA{B|@uAf@w@hCaEFMrAsBn@cAfAkB|AqCpAyBvBuDvBwDTa@tAaCd@y@jAqBP[nA{Bn@gATa@z@}AbAgBHOh@}@x@wAfB}C`BuC|AoC|AkCr@oALUvAeCjBeDr@mAd@{@Vc@pA{BvAgC`BsCdAiBjAsBP[n@iArA_CNYnBkDVe@PYd@w@r@mAZg@DGVa@r@mAn@aA^k@l@}@dAwAn@{@bAsAf@o@z@cARYn@u@bBuBLQ~AoB`@g@^e@p@y@~@iA^e@`@g@z@eAX_@@Ap@y@d@m@r@}@Z_@r@{@\\c@~@iA`@g@^e@~@kAPS^e@n@w@zAkB`@i@JKFIp@y@n@y@Za@b@i@dAqA^c@\\a@@ClA{Ad@k@j@q@HKv@aA^e@Za@p@y@`AmA^c@@A^c@@C^e@NQ\\a@JMbAoAJKd@m@RUf@o@FIb@i@RUVYNQRYj@q@b@k@\\c@^e@`@g@HKd@k@`@e@NQ^g@`@g@`@e@xAkBv@_A`AmAJOb@g@\\c@@Cn@w@n@y@`@e@^e@RYX[^e@^e@^c@Za@BC^e@`@g@\\e@^e@`@e@^e@b@i@HKp@y@^e@^e@n@w@^e@\\c@@A`@e@\\e@^c@`@e@NQNS\\c@`@e@|@iA`@g@`@e@^e@^e@LOPUTWHK^e@^c@^e@^c@HKTYLQp@y@~@kA^e@^c@`@g@JS\\a@`@i@r@y@^e@~@mAn@w@Z_@b@i@p@{@PSNQNQNSNSp@y@NQNSNSNQPU^e@LQ`@i@LQNS\\g@NSNSLSNSNSNULSNULSLSNULSNULSLULULSFKFILULULULULSNWFMP[Ta@Ra@LSLULULULULULULULULUJULUNWRa@R_@LUf@}@h@cAh@cAv@wALSLWLSLULWLUJULULUDGFMLULULULULULULULULUJSNWR_@Ra@LWdDcGLUh@aAh@cALULUJS@CJQJQh@cArBuDd@}@dAmBLULUXi@Zk@LUZm@Zk@Zk@Zk@\\o@lA{BrAeCNW@CHQLUv@wAv@yAv@wAh@cAXg@\\o@Zk@h@aAh@cALSLWLUZm@LSJULUZi@LULWLWNUXk@v@yALSh@cALUZk@f@aALUZk@LUNWpAeCNUXi@NWLU`@q@Ta@Ve@Zi@Zg@\\k@LULS\\k@NULS\\i@Zi@NU\\i@LQZg@\\i@z@uANU\\g@h@{@x@sAVa@??DU@AVc@\\o@Zg@|@_BZk@@Ar@qAFKNUZg@~AeC`@o@~@oANU~@qAp@{@@APGfAeBXg@pAqBT]\\k@f@y@JOT_@rA{BT]l@eA`@o@@AXi@tAeCz@wAXg@h@{@Vc@T_@rBeDZi@dAeBbAaBRY~AkCVa@h@{@v@oA^k@t@gAl@}@PW~@sALOb@o@LQ^i@`@m@v@iAz@oAPWJQ\\i@x@qA^i@BEl@aAVc@LOz@uAd@u@\\k@hBsCh@}@HKPYVa@DIdBoCNWDENYXe@r@eAt@mAPWHMZg@HO~BuD|BqD^m@FIR]Zg@^k@Zg@\\i@\\i@\\i@T_@DI\\i@Zg@\\i@Zi@T]FINYLQZg@\\k@\\g@\\k@\\i@\\i@\\i@LSLSLUNSLSNULSNWLSLS\\i@\\g@Zg@NUNULULQ\\k@LSLQ\\i@PWJQ\\i@\\i@\\k@\\g@Zi@\\i@NULSZi@@AXa@@EZg@\\i@\\i@\\i@LS\\i@LS\\i@\\i@\\i@\\i@Zi@\\i@\\i@\\g@Zi@\\i@Zg@^k@LS\\i@R]HMZg@\\i@\\i@h@}@l@}@Zi@\\i@\\g@Zi@\\i@BCXe@\\i@j@}@@AZg@\\i@Zi@\\i@b@q@T_@\\k@\\g@\\i@\\i@\\i@\\k@Zi@Zc@HOR[Zg@\\i@l@_A\\k@\\i@Zg@R[JO\\i@\\i@j@_Aj@}@Xe@BCLS\\k@\\g@@CBEJMJQDIHMLQVa@Xc@HKLUT[T_@PUFKDE^g@`@i@X]Z_@TWFGNQ\\_@RSHKHI\\]n@m@h@i@b@a@|@u@|AsAVQ^Y@ARO^YBCHEp@g@^WDAt@i@HEZSb@Yf@W^UVOh@Yb@STMTMJERKn@YRKj@WVK`@OVKdAa@RIl@SBAt@Wd@ODAVIr@S|Aa@@AZId@KHAf@Ml@MJAFAJCVEfASd@G~@O~@M~AOJATClAKr@GJ?ZCp@Gn@EbAIfAITCrBOr@E~AMFAf@EXC@?f@Ej@Ej@Eh@EHALAj@E\\CLAj@EPA^Ef@Ch@Ep@GPAj@Ej@Ej@Gl@Ej@Gj@GXEt@KbAOB?|@O|@QZGRE^ILCh@Mf@MPElA[TIx@W^Kf@Qh@QPGTIXKPGh@UNEr@[f@Uj@U^Qj@[b@STMFC`@UHCFEn@]PKJG^Ul@_@NKTOf@]@Ab@Yd@[NMTONMTQZWx@o@VSHIVSd@_@d@c@VWHIb@a@`@a@@A`@a@LMRU^_@@Cb@c@BE`@c@HK\\_@@CHIHKx@cAFI^g@NS^g@?A^e@\\i@NQ?APYLQLQLUNU`@o@b@s@^o@Xg@\\m@R_@DGZo@P]FOXi@LY\\q@Pc@\\s@Vm@Vo@BERi@Vq@b@gANc@Rg@@GRi@@CTu@FONc@L_@@Eb@uAPk@Ts@\\mAf@iBV_AXgANo@BKt@}Cf@uBj@cCPu@@CJk@FU\\{APy@p@uCrA{F^aBFYXkAFYBILk@Pu@FWFYFWViAZsAXmA@I^_B`@eBVmAXoAJa@TaAh@aCTaABGH]DUZuADQFU@IBILg@XmA?APs@VmAPu@Ps@`@cB`@iB`@eB@IT}@Ha@Pq@DWH[FWFYFYHYFYFWFY`@iBTaALg@Ns@Pq@F]HYFYXkATcAH]@EZoAXkAZoALa@DKBKDOHUHYJYNa@J]^_Af@mAJY\\w@LYTc@JUXi@LYFKVc@Tc@\\m@Vc@Zg@DGXg@`@k@\\g@HMTYf@q@BCX_@RWTY^a@RW`@c@b@c@X[XYFGb@c@NMJKRQRS`@_@POPQNOROPQPQJIDCVWXWPODERQNOLMVSNOLMXWj@g@`@_@d@c@p@m@PQVUNKNOh@g@RSVUFGn@m@NOPQRSPQX]fAoAX[v@cAZc@b@k@\\e@^k@Vc@`@o@Zg@\\m@h@_At@yAd@cAf@gATi@FMPa@b@iA`@eAZ}@Pc@Vs@To@HQHWXu@^eAFOPg@Pg@BCTo@Rk@Zy@@ANc@L]Na@FQZw@L_@Pc@L_@\\_AN_@@CFSL[Vo@J[Ri@L_@hAyCh@}Av@uBZy@z@aC~@iCf@sAjEuLPe@jA_Dp@kBbAoCfCcHd@qA`@gA??RC@AJUJULSNSRSLM?ANMPQZUr@k@jByAFGpAcAv@m@POPOPMPOROPMPORMPKPKRKPKRK@APIFCHCRIRIXKFCNEB???ZKj@Kf@KTCRCTAJ?HAT?T?d@BXDTBRD\\HdAT`@HNDl@JzA\\vBb@~@PD@rE~@^CrBh@r@PpA\\zA^ZJZHtCr@xBj@h@Nf@Pj@Rf@PLFDBh@Th@TNHXNHDp@\\dC|AbBdAl@^l@`@zBrAdBdAp@`@r@`@pAv@rAz@@@`BbAxCfB~BxAv@d@~AbAh@b@pA`A\\XnAdAt@n@dB`BzAzArAtA|AfBp@r@vAfBrAdBr@~@~@pAfBhCv@fAjHdKXb@bB`CvBzCd@p@f@p@VZf@l@XZd@h@TVXZTV^\\NNx@|@|@v@zAlAXTj@b@fAv@v@j@jAt@jAr@XR~@n@PJ|@l@PJRNlAz@fBnAx@n@JFDDLHr@f@l@r@rA`ARNf@\\^V`@XrBnAb@ZRJPNRJRNPJd@XPLRJRJPLRJBBNFPLRJRJTJVNv@^PHTLNFRJRHRHRJRHRHTHB@NFRHRHRHRFVJPFRHTFRHRFRFTHRFTFRFTFRFRFTDRFTFRDTFRDXFNDTDTFRDVDPDTDTDTDRBJBH@~@PRBTDVDRDRBTDRD~@NTDRDTDVDRBRDTDh@HTDTDVDTDXDJBTDRDRDRFRDRDVFPDRFTFRFTFRFF@JDTFDBLBTHRF@@PFTHRFVJPFf@RVJPFRJRHTJPHTJRJTJv@b@RJTLPHRLRJPLRJRLPLRLPJRNRLPLRLPLRNPLRPPLPLPNPNPNPNPNPNRRNLPNPPPNNNPPPPPPNNPPNPPPNPPPNPPPNPNPRRRTNPr@t@^`@NN`@b@PPJJBDNPDDJJVVHJPPNPPPNPPPNPPPNPPPNPPPNPPPJJTV^b@`@b@`@b@b@b@`@b@JJTVNPPN`@`@TTLJ`@`@b@^b@`@`@\\b@\\d@^b@\\d@\\b@Zd@\\d@Zd@Zd@Xd@X\\RFDVLNHFD\\Rf@Vf@TXNJDNFXNLFXJf@TXLB@HBf@Rf@Ph@Pf@P\\JJDf@Ph@Nh@PbAZn@PPFVHTHRFTH`@LDBRFFBLDRHRHTHRHRJh@Tf@Vd@Vf@Xf@Xd@Zb@Zd@ZVR^Xd@^b@\\b@\\\\XFDPLb@^d@^b@\\d@\\NLRPb@ZlB|AHHlA`AvAjAh@`@^X^VRNp@d@ZTZRl@\\pAv@\\RTLPHRJPJRHf@TRJPHVJTJRHRHDBLFRHLDHBDBFBB?BBB@D@B@FBB@LDJDHBLDf@PRFJDHBLDLDLDRFNDHBFBHBFBVF?@NBLFRFPDTFXHPFb@LTHRFTFRFVHPFTFRFTH@?PFRFTFJDF@RHRFTFRFRHf@PRHRHTHRJRHRJB@LFRJTLPHPLPHRLPJNJRLBBLHRNPLRLRNNLFDJHPLPNNNLJJHDFRP`A|@VXPPJLBBPPLPRTNPLNNPNRBBLNNPNPLPPRLNPRNRLP`@d@NPNPBBJLNRNPNPLNPTNPLN@BNPNPNPNRPRLPNPNPNPJLTVLPNPNRNN?@NRNPLN@BNPNPNPJLBBLPPRNPNPNR@@LPRTLLNRNNLNFF\\^NPFFRR\\\\PPNLXVf@d@RPNNDBLJTPPN\\XVRNLRLTPVP^X\\RNJRLPLRLLFVPFBVNf@XVLd@Vd@Td@TRHRJf@Rf@Rf@Pd@Rf@Pf@Pf@Nd@Nf@Lf@Ld@Lf@Lh@Jj@Jj@Jh@HPDB?PBRBTDP@@@TBf@D@?f@D@?R@R@R@@?P?R@P?T@R?T?R?D?N?T?B?PAR?TARATARAVAb@ETCRCTCTCTCTERCRELAFCRETERERERGTERGPGTGRGPGJEFCRGRGRGPGTIPGTGRIFAJEPGTIPGRGRIRGRGRGRITGRGRGRIRGTIPGRGTGRGPGh@Qf@QVId@QRGRITId@Wf@Uj@O^Gd@GpBQLCd@CNCRAl@Cl@Aj@@L@F?T@R@T@T@TBT@T@TBl@DPBj@Dj@Fh@Hn@HTBTDVBRDTDTBVFTBTFPBB@TDj@LRFTFh@NTDLDZJj@Pf@Nj@Pf@Ph@Nh@PZJNDPFVHf@Ph@Pj@Ph@Rf@Pj@Rf@Ph@Pf@Nj@Ph@Pz@Vh@Nh@PLB`@LdBl@dBj@xAf@RFh@Pj@Pj@Rf@NZJNDh@Pf@Pd@NB@\\JJBTHRFj@Pf@P@?^LJBTHRFh@Pj@P\\LJBh@PNDXJj@P^LHBVHPFj@PD@`@LB@^JHBVHPFh@PF@`@Lh@Pj@Pj@Ph@PRFRFVHd@PB?h@Ph@Ph@Ph@Nj@PPDVHHBPDLDh@Lh@Nh@Lh@Lb@HHBh@Jd@JD@h@Lj@Jh@Lj@JTFRDj@Lh@Jj@Lh@Lj@LVFh@LRDTDJBHBTDh@LZFLBrAXh@LRDTFRDF@LDRDRFRFTFRFRFRFTHRFRHRHRFRHTHRHRJ`@PB@RJFBJFRHRJRJRJRJPJRJPLRJPLPLRLPLRLPLPLPLTNd@^PNNLRNb@`@PNNNRPNPPNPPNNPPJLRTPPLNNP`@d@LPNPNRNRLPNRj@v@LT\\f@NTLTNTLRXf@NVLTJPLTNVJRJNNXZh@NTn@hAFHJTLR\\h@LRPXBDT\\BBd@r@`@j@^h@X^`@f@LLRVX^LLRV`@`@JL@@p@r@PRTTl@l@b@^LL@@PNLLRNNLPNPLPNRNRNPLRNPLRLPNRLPLPJTNPJPJXP`@TTLPJHDHFn@\\ZRRJFBFDf@XNHTLPJPLRJRJPLRJFDHDVLZP??BT@@j@j@l@n@HHXZ`@b@??d@d@RRBB|AzAHHrAtA??TNjA{B@Ex@{AHOt@sA??Ve@b@{@h@cADITa@@C@GBSr@kAnA{BDIv@uAtCiFlE_IdAkBr@oABGPWDINY`@q@pAaCxAgCtBuDf@}@|BaEv@qALYJUHMRa@@ELWBEPa@DKJWFMBGFSRo@Ng@FSH]Jc@FYP{@TkADUXwAFW@Kb@wBVmAHe@Ju@De@DY@S@K@Q@W@KBa@?M@_@@G?a@?C@Y?UCiAAm@E{ACs@EwAIeCMeEWqISoGMyDASGwBOiEAgA@u@Fu@??w@{@wA}AgCsC{DiEo@s@kF}FmF}FiFyFaEoE",
          "locTimes": [
            [
              0,
              1690850446
            ],
            [
              15,
              1690850528
            ],
            [
              164,
              1690850823
            ],
            [
              536,
              1690851274
            ],
            [
              1037,
              1690852610
            ],
            [
              3024,
              1690853118
            ],
            [
              3739,
              1690853141
            ],
            [
              3780,
              1690853774
            ],
            [
              4877,
              1690853782
            ],
            [
              4885,
              1690853806
            ],
            [
              4892,
              1690853839
            ],
            [
              4899,
              1690854005
            ]
          ],
          "vehicle": {
            "type": "2AxlesAuto"
          }
        }
      },
      "Example-e3544987-d30e-498b-b975-dc17a21e24bf": {
        "value": {
          "status": "OK",
          "summary": {
            "countries": [
              "USA"
            ],
            "currency": "USD",
            "vehicleType": "5AxlesTruck",
            "vehicleDescription": "Truck - 5 Axles",
            "fuelPrice": {
              "value": 3.2,
              "currency": "USD",
              "units": "USD/gallon",
              "fuelUnit": "gallon"
            },
            "fuelEfficiency": {
              "city": 6.4,
              "hwy": 8.2,
              "units": "mpg",
              "fuelUnit": "gallon"
            },
            "units": {
              "currencyUnit": "USD",
              "fuelEfficiencyUnit": "mpg",
              "fuelUnit": "gallon"
            },
            "departure_time": "2019-12-16T15:45:23Z",
            "departureTime": "2019-12-16T15:45:23Z",
            "share": {
              "name": "Tollguru GPS Tracks",
              "prefix": "Tollguru+GPS+Tracks",
              "uuid": "7d866678-6a39-4b93-9f41-442e29fd3dd0",
              "timestamp": "2024-01-09T13:24:09.703641536Z",
              "client": "GPSTracksAPI"
            }
          },
          "route": {
            "hasTolls": false,
            "distance": {
              "text": "0 mi",
              "metric": "0 km",
              "value": 145
            },
            "costs": {
              "fuel": 0.03,
              "tag": null,
              "cash": null,
              "licensePlate": null,
              "prepaidCard": null,
              "tagAndCash": null,
              "minimumTollCost": null
            },
            "tolls": [],
            "polyline": "}qmlFjccuMjB?N????V?fA?????nA??"
          },
          "meta": {
            "userId": "developer@tollguru.com",
            "customerId": "cus_Gxf9jTs5iu6FtA",
            "tx": 2,
            "type": "api",
            "client": "api",
            "source": "osrm"
          }
        }
      },
      "Example-0bcb8e07-6413-457a-b4f8-a78effff2e96": {
        "value": {
          "status": "OK",
          "summary": {
            "countries": [
              "USA"
            ],
            "currency": "USD",
            "vehicleType": "2AxlesAuto",
            "vehicleDescription": "Car, SUV or Pickup truck without 4 tires on rear axle",
            "units": {
              "currencyUnit": "USD",
              "fuelEfficiencyUnit": "MPG",
              "fuelUnit": "gallon"
            },
            "departure_time": "2024-01-09T11:27:14.200772378Z",
            "departureTime": "2024-01-09T11:27:14.200772378Z",
            "share": {
              "name": "Tollguru Route",
              "prefix": "Tollguru+Route",
              "uuid": "49d10b37-5f30-46c2-a39a-a69453356e13",
              "timestamp": "2024-01-09T11:27:14.200766623Z",
              "client": "polylineAPI"
            }
          },
          "route": {
            "hasTolls": true,
            "distance": {
              "text": "407 mi",
              "metric": "655 km",
              "value": 655325
            },
            "costs": {
              "fuel": 52.31,
              "tag": 42.14,
              "prepaidCard": 42.14,
              "tagAndCash": 42.14,
              "minimumTollCost": 42.14,
              "cash": null,
              "licensePlate": null
            },
            "tolls": [
              {
                "type": "ticketSystem1",
                "tagCost": 40.64,
                "tagPriCost": 40.64,
                "licensePlateCost": 82.53,
                "prepaidCardCost": 40.64,
                "currency": "USD",
                "tagPrimaryNames": [
                  "E-ZPass"
                ],
                "prepaidCardNames": [],
                "tagPrimary": [
                  "E-ZPass"
                ],
                "tagSecondary": [],
                "licensePlateNames": [
                  "Toll By Plate"
                ],
                "start": {
                  "id": 130004400,
                  "lat": 40.088282,
                  "lng": -75.40304,
                  "name": "326 - Valley Forge",
                  "road": "Pennsylvania Tpke",
                  "state": "PA",
                  "country": "USA",
                  "arrival": {
                    "distance": 30452.64,
                    "time": "2024-01-09T11:27:14Z"
                  },
                  "timestamp_formatted": "2024-01-09T11:27:14Z",
                  "timestamp_localized": "2024-01-09T06:27:14-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -75.40304,
                        40.088282
                      ]
                    }
                  }
                },
                "end": {
                  "id": 130000000,
                  "lat": 40.654895,
                  "lng": -80.072658,
                  "name": "30 - Warrendale",
                  "road": "Pennsylvania Tpke",
                  "state": "PA",
                  "country": "USA",
                  "arrival": {
                    "distance": 507684.13,
                    "time": "2024-01-09T11:27:14Z"
                  },
                  "timestamp_formatted": "2024-01-09T11:27:14Z",
                  "timestamp_localized": "2024-01-09T06:27:14-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -80.072658,
                        40.654895
                      ]
                    }
                  }
                },
                "tagRequested": "tagPriCost",
                "tagSecCost": null,
                "cashCost": null,
                "discountCarDetails": null,
                "discountCarType": null,
                "height": null
              },
              {
                "type": "ticketSystem1",
                "tagCost": 1.5,
                "tagPriCost": 1.5,
                "cashCost": 2.25,
                "prepaidCardCost": 1.5,
                "currency": "USD",
                "tagPrimaryNames": [
                  "E-ZPass"
                ],
                "prepaidCardNames": [],
                "tagPrimary": [
                  "E-ZPass"
                ],
                "tagSecondary": [],
                "start": {
                  "id": 128006000,
                  "lat": 40.923901,
                  "lng": -80.557105,
                  "name": "239 - Eastgate",
                  "road": "Ohio Tpke",
                  "state": "OH",
                  "country": "USA",
                  "arrival": {
                    "distance": 560939.39,
                    "time": "2024-01-09T11:27:14Z"
                  },
                  "timestamp_formatted": "2024-01-09T11:27:14Z",
                  "timestamp_localized": "2024-01-09T06:27:14-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -80.557105,
                        40.923901
                      ]
                    }
                  }
                },
                "end": {
                  "id": 128005400,
                  "lat": 41.112246,
                  "lng": -80.83685,
                  "name": "218 - Niles-Youngstown",
                  "road": "Ohio Tpke",
                  "state": "OH",
                  "country": "USA",
                  "arrival": {
                    "distance": 593720.7,
                    "time": "2024-01-09T11:27:14Z"
                  },
                  "timestamp_formatted": "2024-01-09T11:27:14Z",
                  "timestamp_localized": "2024-01-09T06:27:14-05:00",
                  "point": {
                    "type": "Feature",
                    "geometry": {
                      "type": "Point",
                      "coordinates": [
                        -80.83685,
                        41.112246
                      ]
                    }
                  }
                },
                "height": 7.5,
                "tagRequested": "tagPriCost",
                "tagSecCost": null,
                "licensePlateCost": null,
                "discountCarDetails": null,
                "discountCarType": null
              }
            ],
            "polyline": ""
          },
          "meta": {
            "userId": "developer@tollguru.com",
            "customerId": "cus_Gxf9jTs5iu6FtA",
            "tx": 1,
            "type": "api",
            "client": "polylineAPI",
            "source": ""
          }
        }
      },
      "Example-488959db-9653-40d1-8c01-2a4946e493b2": {
        "value": {
          "status": "OK",
          "summary": {
            "countries": [
              "USA"
            ],
            "currency": "USD",
            "vehicleType": "5AxlesTruck",
            "vehicleDescription": "Truck - 5 Axles",
            "fuelPrice": {
              "value": 3.2,
              "currency": "USD",
              "units": "USD/gallon",
              "fuelUnit": "gallon"
            },
            "fuelEfficiency": {
              "city": 23.4,
              "hwy": 30,
              "units": "mpg",
              "fuelUnit": "gallon"
            },
            "units": {
              "currencyUnit": "USD",
              "fuelEfficiencyUnit": "mpg",
              "fuelUnit": "gallon"
            },
            "departure_time": "2019-12-16T15:45:23Z",
            "departureTime": "2019-12-16T15:45:23Z",
            "share": {
              "name": "Tollguru GPS Tracks",
              "prefix": "Tollguru+GPS+Tracks",
              "uuid": "95a3c988-3ab8-4ff2-81cc-50fadd75132f",
              "timestamp": "2024-01-09T13:21:40.56813543Z",
              "client": "GPSTracksAPI"
            }
          },
          "route": {
            "hasTolls": false,
            "distance": {
              "text": "0 mi",
              "metric": "0 km",
              "value": 145
            },
            "costs": {
              "fuel": 0.01,
              "tag": null,
              "cash": null,
              "licensePlate": null,
              "prepaidCard": null,
              "tagAndCash": null,
              "minimumTollCost": null
            },
            "tolls": [],
            "polyline": "}qmlFjccuMjB?N????V?fA?????nA??"
          },
          "meta": {
            "userId": "developer@tollguru.com",
            "customerId": "cus_Gxf9jTs5iu6FtA",
            "tx": 2,
            "type": "api",
            "client": "api",
            "source": "osrm"
          }
        }
      },
      "Example-75eba171-f6cc-41aa-a184-00db65763bce": {
        "value": {
          "requestId": "6bb5865d-fbcb-4fb9-9313-7f3f8d165046",
          "requestedTimestamp": "2023-08-17T17:06:27.074806092Z"
        }
      },
      "Example-4e42a76a-19d6-49bf-9d79-7f376142db7f": {
        "value": {
          "status": "OK",
          "summary": {
            "countries": [
              "USA"
            ],
            "currency": "MXN",
            "vehicleType": "5AxlesTruck",
            "vehicleDescription": "Truck - 5 Axles",
            "fuelPrice": {
              "value": 53.91,
              "currency": "MXN",
              "units": "MXN/gallon",
              "fuelUnit": "gallon"
            },
            "fuelEfficiency": {
              "city": 23.4,
              "hwy": 30,
              "units": "mpg",
              "fuelUnit": "gallon"
            },
            "units": {
              "currencyUnit": "MXN",
              "fuelEfficiencyUnit": "mpg",
              "fuelUnit": "gallon"
            },
            "departure_time": "2019-12-16T15:45:23Z",
            "departureTime": "2019-12-16T15:45:23Z",
            "share": {
              "name": "Tollguru GPS Tracks",
              "prefix": "Tollguru+GPS+Tracks",
              "uuid": "502a496f-9878-42e3-bf46-982791ee9b52",
              "timestamp": "2024-01-09T11:31:08.212272051Z",
              "client": "GPSTracksAPI"
            }
          },
          "route": {
            "hasTolls": false,
            "distance": {
              "text": "0 mi",
              "metric": "0 km",
              "value": 145
            },
            "costs": {
              "fuel": 0.16,
              "tag": null,
              "cash": null,
              "licensePlate": null,
              "prepaidCard": null,
              "tagAndCash": null,
              "minimumTollCost": null
            },
            "tolls": [],
            "polyline": "}qmlFjccuMjB?N????V?fA?????nA??"
          },
          "meta": {
            "userId": "developer@tollguru.com",
            "customerId": "cus_Gxf9jTs5iu6FtA",
            "tx": 2,
            "type": "api",
            "client": "api",
            "source": "osrm"
          }
        }
      }
    }
  },
  "info": {
    "title": "TollGuru Toll API",
    "description": "You can use TollGuru Toll API service to\n\n* Calculate tolls for your route.\n* Calculate other costs for your route (such as fuel expenses, driver expenses).\n* Calculate the cheapest, the fastest and other other optimal routes.\n\nBy integrating our API with your application or website, you can provide your users with a powerful tool for efficient and cost-effective route planning.\n\n## How to use TollGuru API\n\nWith the Toll API you can calculate tolls, fuel costs and optimal routes for:\n\nPre-trip planning\n\n* Specify origin, destination and waypoints, if any\n* Specify pre-trip route polyline or shape (latitude, longitude coordinates) from any mapping service including Google, Bing, MapBox, Apple Map, HERE, TomTom, Waze, ESRI, MapQuest, JawgMaps, Trimble, PTV, MapmyIndia, Yandex, Michelin, Baidu, Gaode or your custom source\n\nPost-trip toll cost reconciliation\n\n* Send GPS tracks, such as those received from a smartphone, car GPS or a fleet telematics device.\n\n## Get started\n\nSign up for a free API key using your email and password. We suggest you use Postman to test the API before you integrate Toll API into your products. TollGuru Toll API is a REST API with predictable resource-oriented URLs. It uses standard HTTP response codes and authentication to accept form-encoded request bodies and return JSON-encoded responses.\n\n* <a href=\"https://cdn.tollguru.com/toll-api-docs/openapi/north-america.json\" download>Download OpenAPI Schema for this API</a>\n* <a href=\"https://cdn.tollguru.com/toll-api-docs/postman/north-america.json\" download>Download the Postman collection for this API</a>\n\n",
    "version": "2"
  },
  "security": [
    {
      "x-api-key": []
    }
  ],
  "paths": {
    "/origin-destination-waypoints": {
      "post": {
        "summary": "Tolls between Origin, Destination and Waypoints",
        "description": "If you are looking for toll information for routes that consider bridge height restrictions, axle count, weight restrictions, we suggest that you use HERE maps (we use HERE maps by default). Specifically, with the HERE maps API service, you can:\n\n* Specify origins, destinations, and waypoints as text strings (e.g. “Dallas, TX”, “Sydney, NSW, Australia”, “Paris, France” or “Jaipur, Rajasthan, India”), as place IDs, or as latitude/longitude coordinates\n* Specify origin, destination, and waypoints as zip codes (followed by country code or name)\n* Specify vehicle type. The route and tolls are returned for the specific vehicle. For example, you can get tolls for vehicles based on axle count (cars, SUV, pick-up, truck, motorcycle, bus, motorhome / RV, limousine.\n* The response will include toll information, fuel cost information, duration\n",
        "operationId": "origin-destination-waypoints",
        "parameters": [],
        "tags": [
          "Origin, Destination and Waypoints"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": false,
          "content": {
            "application/json": {
              "examples": {
                "Example": {
                  "$ref": "#/components/examples/Example"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/SourceDestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Example": {
                    "$ref": "#/components/examples/Example-e0820aa8-0cbd-45ec-bff4-36dafd554ff3"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SourceDestResponse"
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/origin-destination-waypoints/#": {
      "post": {
        "summary": "Tolls for Truck",
        "description": "For truck routes you can specify restrictions - bridge height restrictions, axle count, weight restrictions - to receive truck compliant routes. But you don’t need to send all the parameters. You can\n\n* Specify origins, destinations, and waypoints as text strings (e.g. “Dallas, TX”), as place IDs, or as latitude/longitude coordinates\n* Specify origin, destination, and waypoints as zip codes (followed by country code or name)\n* Specify truck type by changing the number of axles and other parameters such as weight, height, etc.\n* The response will include toll information, fuel cost information, duration\n\nFor trucks, you will receive\n\n* Tolls between zip codes (zip code followed by country name)\n* Truck compliant routes (based on axle count, height, weight, truck length.\n* ETA that accounts for Hours-of-service (HOS) compliance\n* State mileage for IFTA reporting\n",
        "operationId": "origin-destination-waypoints-for-trucks",
        "parameters": [],
        "tags": [
          "Origin, Destination and Waypoints"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": false,
          "content": {
            "application/json": {
              "examples": {
                "Example": {
                  "$ref": "#/components/examples/Example-6c89effa-6d74-4e24-a520-8980c6f9d9ba"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/SourceDestRequest-for-trucks"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Example": {
                    "$ref": "#/components/examples/Example-03a93f56-cc01-4982-a119-ed261038c75b"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SourceDestResponse-for-trucks"
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/complete-polyline-from-mapping-service": {
      "post": {
        "summary": "Route Encoded Polyline",
        "description": "You will receive toll information for all tolls on the single route you requested. You will need to get the complete route from your mapping service (and not just origin, destination and some stops on the route) to receive accurate toll information.\n",
        "operationId": "complete-polyline-from-mapping-service",
        "parameters": [],
        "tags": [
          "Tolls for Complete Route Polyline from a Mapping Service"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": false,
          "content": {
            "application/json": {
              "examples": {
                "Example": {
                  "$ref": "#/components/examples/Example-e434beda-8ae9-4b1b-86ab-9c3ef09643f9"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/PolylineRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Example": {
                    "$ref": "#/components/examples/Example-335f75ba-077c-4e5d-98b8-f06803f435de"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PolylineResponse"
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/complete-polyline-from-mapping-service/#": {
      "post": {
        "summary": "Route Encoded Polyline with Timestamps",
        "description": "Receive time-based tolls for your trip by providing the timestamps corresponding to your trip's polyline.\n",
        "operationId": "complete-polyline-from-mapping-service-with-timestamps",
        "parameters": [],
        "tags": [
          "Tolls for Complete Route Polyline from a Mapping Service"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": false,
          "content": {
            "application/json": {
              "examples": {
                "Example": {
                  "$ref": "#/components/examples/Example-e9bca44f-8a22-41f0-896a-7a41b8b89a65"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/PolylineTimestampRequest-with-timestamps"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Example": {
                    "$ref": "#/components/examples/Example-e3544987-d30e-498b-b975-dc17a21e24bf"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PolylineTimestampResponse-with-timestamps"
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/gps-tracks-csv-upload": {
      "post": {
        "summary": "Upload GPS Tracks",
        "description": "By default, the API returns tolls immediately. In other words in synchronous mode. When you have a large GPS track, you need to specify to receive tolls in the asynchronous mode by specifying the url parameter as isAsync=true. Response in this case will include a requestId and a requestedTimestamp. You can use the requestId to download tolls for up to 30 days. Use the asynchronous mode when uploading multiple or large GPS tracks files.\n\n* Upload CSV file - You can use the CSV format file as shown in the table below. Alternatively you can download the sample file from here.\n\nThe first line in the CSV needs to contain the attribute names. The subsequent lines need to contain the data in temporal order. The following parameters are available:\n\n| Parameter | Description                                                                                                    |\n| --------- | -----------                                                                                                    |\n| latitude  | Latitude coordinate in WGS84 degree (mandatory)                                                                |\n| longitude | Longitude coordinate in WGS84 degree (mandatory)                                                               |\n| timestamp | indicates the time and date, for example 2018-05-21T17:05:06Z (mandatory since tolls may change based on time) |\n\nYou can use the CSV format file as shown in the table below:\n\n| latitude | longitude | timestamp            |\n| -------- | --------- | ---------            |\n| 38.90479 | -77.02607 | 2019-12-16T15:45:23Z |\n| 38.90479 | -77.02606 | 2019-12-16T15:47:24Z |\n| 38.9048  | -77.02608 | 2019-12-16T15:49:25Z |\n| 38.9044  | -77.02604 | 2019-12-16T15:50:42Z |\n| 38.90424 | -77.02646 | 2019-12-16T15:50:49Z |\n| 38.90422 | -77.02686 | 2019-12-16T15:50:55Z |\n\n",
        "operationId": "gps-tracks-csv-upload",
        "parameters": [
          {
            "name": "isAsync",
            "in": "query",
            "description": "Whether the provided GPS tracks are processed asynchronously",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/isAsync"
            }
          },
          {
            "name": "mapProvider",
            "in": "query",
            "description": "The map service provider for map matching given GPS tracks",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/mapProvider"
            }
          },
          {
            "name": "vehicle",
            "in": "query",
            "description": "Options to configure vehicle parameters",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/vehicle"
            }
          }
        ],
        "tags": [
          "TollTally: GPS Tracks to Toll API"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": false,
          "content": {
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/FileUpload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Example": {
                    "$ref": "#/components/examples/Example-488959db-9653-40d1-8c01-2a4946e493b2"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PolylineResponse"
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/gps-tracks-csv-download": {
      "post": {
        "summary": "Download Async Results",
        "description": "The results will be available for download for upto 30 days by calling the API.\n",
        "operationId": "gps-tracks-csv-download",
        "parameters": [],
        "tags": [
          "TollTally: GPS Tracks to Toll API"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": false,
          "content": {
            "application/json": {
              "examples": {
                "Example": {
                  "$ref": "#/components/examples/Example-75eba171-f6cc-41aa-a184-00db65763bce"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/GPSAsyncResponse-download"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "examples": {
                  "Example": {
                    "$ref": "#/components/examples/Example-4e42a76a-19d6-49bf-9d79-7f376142db7f"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/PolylineResponse-download"
                }
              }
            },
            "headers": {}
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://apis.tollguru.com/v2"
    }
  ],
  "tags": [
    {
      "name": "Origin, Destination and Waypoints",
      "description": "Use this API endpoint to calculate tolls and fuel expenses between origin, destination, and waypoints (if any). With this API endpoint, you can\n\n* Calculate tolls for various vehicle types including cars, pickups, SUV towing trailers, taxis, trucks (up to 9-axles), RV, motorcycles, etc.\n* See tolls for all routes\n* See fuel expenses for all routes\n* See the cheapest, the fastest and other optimal routes\n* Modify vehicle types to include\n\nSpecifically, for trucks, you can\n\n* Return tolls by specifying zip codes (zip code followed by country name)\n* Return tolls for truck compliant routes (based on axle count, height, weight, truck length\n* Return Hours-of-service (HOS) compliant routes with information for suggested stop locations\n* Return distance traveled in each state (mileage per state)\n\n## Frequently Asked Questions for Constructing Request Body\n\n- [How to make requests using addresses?](/blog/tolls-between-origin-destination-waypoints-using-a-mapping-service-faq#how-to-make-requests-using-addresses)\n- [How to make requests using geo-coordinates?](/blog/tolls-between-origin-destination-waypoints-using-a-mapping-service-faq#how-to-make-requests-using-geo-coordinates)\n- [How to add waypoints?](/blog/tolls-between-origin-destination-waypoints-using-a-mapping-service-faq#how-to-add-waypoints)\n- [How to choose a mapping service provider?](/blog/tolls-between-origin-destination-waypoints-using-a-mapping-service-faq#how-to-choose-a-mapping-service-provider)\n- [How to customize a vehicle?](/blog/tolls-between-origin-destination-waypoints-using-a-mapping-service-faq#how-to-customize-a-vehicle)\n- [How to customize fuel-related information?](/blog/tolls-between-origin-destination-waypoints-using-a-mapping-service-faq#how-to-customize-fuel-related-information)\n- [How to get turn by turn directions in response?](/blog/tolls-between-origin-destination-waypoints-using-a-mapping-service-faq#how-to-get-turn-by-turn-directions-in-response)\n- [How to get tolls on your route based on departure time?](/blog/tolls-between-origin-destination-waypoints-using-a-mapping-service-faq#how-to-get-tolls-on-your-route-based-on-departure-time)\n- [How to get state mileage information for North America?](/blog/tolls-between-origin-destination-waypoints-using-a-mapping-service-faq#how-to-get-state-mileage-information-for-north-america)\n- [How to get tolls for EV along with charging points for North America?](/blog/tolls-between-origin-destination-waypoints-using-a-mapping-service-faq#how-to-get-tolls-for-ev-along-with-charging-points-for-north-america)\n- [How to get vignette information for Europe?](/blog/tolls-between-origin-destination-waypoints-using-a-mapping-service-faq#how-to-get-vignette-information-for-europe)\n"
    },
    {
      "name": "Tolls for Complete Route Polyline from a Mapping Service",
      "description": "Use this service when you are already using a mapping service for your routing and you are able to send the complete route from the mapping service in the request. You will need to get the complete route from the mapping service (and not just origin, destination and some stops on the route) to receive accurate toll information. You can\n\n* Specify whether you want to send route polyline (encoded using Google encoded polyline algorithm or shape (latitude and longitude pairs)\n* Specify vehicle type. For example, you can receive tolls for vehicles based on axle counts for cars, SUV, pick-up, trucks (up to 9-axles), motorcycle, bus, motorhome, RV, limousine.\n* Specify truck parameters such as weight, height, axle counts and receive tolls based on weight, height, etc.\n* Specify the source of route polyline such as Google, Bing, MapBox, Apple Map, HERE, TomTom, Waze, ESRI, MapQuest, JawgMaps, Trimble, PTV, MapmyIndia, Yandex, Michelin, Baidu, Gaode or your custom source (“custom”)\n* Since you specify the exact route, you will receive tolls for the route. You will not receive tolls for alternate routes between origin and destination.\n\n## Frequently Asked Questions for Constructing Request Body\n\n- [How to make a request using encoded polyline?](/blog/tolls-using-a-complete-polyline-from-any-mapping-service-faq#how-to-make-a-request-using-encoded-polyline)\n- [How to make a request using the path of lat-lng?](/blog/tolls-using-a-complete-polyline-from-any-mapping-service-faq#how-to-make-a-request-using-the-path-of-lat-lng)\n- [How to customize a vehicle?](/blog/tolls-using-a-complete-polyline-from-any-mapping-service-faq#how-to-customize-a-vehicle)\n- [How to get tolls on your route based on departure time?](/blog/tolls-using-a-complete-polyline-from-any-mapping-service-faq#how-to-get-tolls-on-your-route-based-on-departure-time)\n- [How to customize fuel related information?](/blog/tolls-using-a-complete-polyline-from-any-mapping-service-faq#how-to-customize-fuel-related-information)\n- [How to get state mileage information for North America?](/blog/tolls-using-a-complete-polyline-from-any-mapping-service-faq#how-to-get-state-mileage-information-for-north-america)\n\n"
    },
    {
      "name": "TollTally: GPS Tracks to Toll API",
      "description": "Use TollTally - GPS Tracks to Toll API - to calculate tolls after you make the trip. You can upload your GPS tracks (in CSV format) to receive tolls for the likely route matched using the GPS tracks. You can\n\n* Specify vehicle type. For example, you can receive tolls for vehicles based on axle counts for cars, SUV, pick-up, trucks (up to 9-axles), motorcycle, bus, motorhome, RV, limousine.\n* Specify truck parameters such as weight, height, axle counts to receive tolls based on weight, height, etc.\n* Specify the timestamp of each GPS trace. If you do not specify the timestamp, tolls are likely to be inaccurate on time-based-toll facilities.\n* Specify whether you want to receive toll information immediately (isAsync=false) or can wait (isAsync=true). Use the asynchronous mode when uploading multiple or large GPS track files. Response in asynchronous mode comes with a requestId and a requestedTimestamp. These results would be available for download for up to 30 days.\n\n## Frequently Asked Questions for Constructing Request Body\n\n- [How to receive tolls for GPS tracks in CSV format?](/blog/tolls-using-gps-tracks-faq#how-to-receive-tolls-for-gps-tracks-in-csv-format)\n- [How to receive tolls for GPS tracks covering a very long route?](/blog/tolls-using-gps-tracks-faq#how-to-receive-tolls-for-gps-tracks-covering-a-very-long-route)\n- [How to add and customize a vehicle?](/blog/tolls-using-gps-tracks-faq#How-to-add-and-customize-a-vehicle)\n"
    }
  ]
}
